{
  if (hasDuplicateUsername(user.getUsername(),user.getSystemId(),user.getUserId()))   throw new DAOException("Username " + user.getUsername() + " or system id "+ user.getSystemId()+ " is already in use.");
  try {
    sessionFactory.getCurrentSession().save(user);
  }
 catch (  NonUniqueObjectException e) {
    sessionFactory.getCurrentSession().merge(user);
  }
  String salt=Security.getRandomToken();
  String hashedPassword=Security.encodeString(password + salt);
  updateUserPassword(hashedPassword,salt,Context.getAuthenticatedUser().getUserId(),new Date(),user.getUserId());
  return user;
}
