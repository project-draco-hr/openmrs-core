{
  executeDataSet(INITIAL_OBS_XML);
  ObsService obsService=Context.getObsService();
  final int parentObsId=1;
  Obs obs=obsService.getObs(parentObsId);
  final int childObsId=2;
  final int unrelatedObsId=3;
  final int orderReferencingObsId=4;
  Obs unrelatedObservation=obsService.getObs(unrelatedObsId);
  obs.addGroupMember(obsService.getObs(childObsId));
  obs.addGroupMember(obsService.getObs(orderReferencingObsId));
  final int conceptProposalObsId=5;
  ConceptProposal conceptProposal=new ConceptProposal();
  conceptProposal.setObs(obsService.getObs(conceptProposalObsId));
  obs.addGroupMember(conceptProposal.getObs());
  final int allergyStartObsId=6;
  final int allergyStopObsId=7;
  Allergy allergy=new Allergy();
  allergy.setStartObs(obsService.getObs(allergyStartObsId));
  allergy.setStopObs(obsService.getObs(allergyStopObsId));
  obs.addGroupMember(allergy.getStartObs());
  obs.addGroupMember(allergy.getStopObs());
  final int problemStartObsId=8;
  final int problemStopObsId=9;
  Problem problem=new Problem();
  problem.setStartObs(obsService.getObs(problemStartObsId));
  problem.setStopObs(obsService.getObs(problemStopObsId));
  obs.addGroupMember(problem.getStartObs());
  obs.addGroupMember(problem.getStopObs());
  Assert.assertNotNull(obsService.getObs(parentObsId));
  Assert.assertNotNull(obsService.getObs(childObsId));
  Assert.assertNotNull(obsService.getObs(unrelatedObsId));
  Assert.assertNotNull(obsService.getObs(orderReferencingObsId));
  Assert.assertNotNull(obsService.getObs(conceptProposalObsId));
  Assert.assertNotNull(obsService.getObs(allergyStartObsId));
  Assert.assertNotNull(obsService.getObs(allergyStopObsId));
  Assert.assertNotNull(obsService.getObs(problemStartObsId));
  Assert.assertNotNull(obsService.getObs(problemStopObsId));
  Context.getObsService().purgeObs(obs,false);
  Assert.assertNull(obsService.getObs(parentObsId));
  Assert.assertNull(obsService.getObs(childObsId));
  Assert.assertNotNull(obsService.getObs(unrelatedObsId));
  Assert.assertNull(obsService.getObs(orderReferencingObsId));
  Assert.assertNull(obsService.getObs(conceptProposalObsId));
  Assert.assertNull(obsService.getObs(allergyStartObsId));
  Assert.assertNull(obsService.getObs(allergyStopObsId));
  Assert.assertNull(obsService.getObs(problemStartObsId));
  Assert.assertNull(obsService.getObs(problemStopObsId));
}
