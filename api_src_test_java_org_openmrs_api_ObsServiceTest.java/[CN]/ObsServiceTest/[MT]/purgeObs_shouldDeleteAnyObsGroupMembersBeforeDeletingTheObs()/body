{
  executeDataSet(INITIAL_OBS_XML);
  ObsService obsService=Context.getObsService();
  final int parentObsId=1;
  Obs obs=obsService.getObs(parentObsId);
  final int childObsId=2;
  final int unrelatedObsId=3;
  final int orderReferencingObsId=4;
  obs.addGroupMember(obsService.getObs(childObsId));
  obs.addGroupMember(obsService.getObs(orderReferencingObsId));
  final int conceptProposalObsId=5;
  ConceptProposal conceptProposal=new ConceptProposal();
  conceptProposal.setObs(obsService.getObs(conceptProposalObsId));
  obs.addGroupMember(conceptProposal.getObs());
  Assert.assertNotNull(obsService.getObs(parentObsId));
  Assert.assertNotNull(obsService.getObs(childObsId));
  Assert.assertNotNull(obsService.getObs(unrelatedObsId));
  Assert.assertNotNull(obsService.getObs(orderReferencingObsId));
  Assert.assertNotNull(obsService.getObs(conceptProposalObsId));
  Context.getObsService().purgeObs(obs,false);
  Assert.assertNull(obsService.getObs(parentObsId));
  Assert.assertNull(obsService.getObs(childObsId));
  Assert.assertNotNull(obsService.getObs(unrelatedObsId));
  Assert.assertNull(obsService.getObs(orderReferencingObsId));
  Assert.assertNull(obsService.getObs(conceptProposalObsId));
}
