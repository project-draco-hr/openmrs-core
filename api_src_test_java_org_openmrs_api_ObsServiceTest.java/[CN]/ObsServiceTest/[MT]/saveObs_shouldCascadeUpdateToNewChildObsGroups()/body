{
  executeDataSet(INITIAL_OBS_XML);
  ObsService obsService=Context.getObsService();
  Obs origParentObs=obsService.getObs(2);
  Set<Obs> originalMembers=new HashSet<>(origParentObs.getGroupMembers(true));
  assertEquals(2,originalMembers.size());
  Obs groupMember=new Obs();
  groupMember.setConcept(Context.getConceptService().getConcept(3));
  groupMember.setObsDatetime(new Date());
  groupMember.setPerson(new Patient(2));
  groupMember.setLocation(new Location(2));
  groupMember.setValueNumeric(50d);
  origParentObs.addGroupMember(groupMember);
  assertNotNull(groupMember.getObsGroup());
  Obs newParentObs=obsService.saveObs(origParentObs,"Updating obs group");
  assertNotEquals(origParentObs,newParentObs);
  assertEquals(3,newParentObs.getGroupMembers(true).size());
  assertNotNull(groupMember.getObsId());
  for (  Obs o : originalMembers) {
    assertTrue(o.getVoided());
    assertFalse(newParentObs.getGroupMembers(true).contains(o));
  }
  for (  Obs o : newParentObs.getGroupMembers(true)) {
    if (groupMember.equals(o)) {
      continue;
    }
    assertTrue(o.hasPreviousVersion());
    assertFalse(origParentObs.getGroupMembers(true).contains(o));
  }
}
