{
  HttpSession httpSession=request.getSession();
  ConceptService cs=Context.getConceptService();
  if (Context.isAuthenticated()) {
    Concept concept=(Concept)obj;
    MessageSourceAccessor msa=getMessageSourceAccessor();
    String action=request.getParameter("action");
    if (action.equals(msa.getMessage("Concept.delete"))) {
      try {
        cs.purgeConcept(concept);
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Concept.deleted");
        return new ModelAndView(new RedirectView("index.htm"));
      }
 catch (      DataIntegrityViolationException e) {
        log.error("Unable to delete a concept because it is in use: " + concept,e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.delete");
        return new ModelAndView(new RedirectView(getSuccessView() + "?conceptId=" + concept.getConceptId()));
      }
catch (      Exception e) {
        log.error("Unable to delete concept because an error occurred: " + concept,e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.delete");
        return new ModelAndView(new RedirectView(getSuccessView() + "?conceptId=" + concept.getConceptId()));
      }
    }
 else {
      String isSet=ServletRequestUtils.getStringParameter(request,"conceptSet","");
      if (isSet.equals(""))       concept.setSet(false);
 else       concept.setSet(true);
      boolean isNew=false;
      try {
        if (concept.getConceptId() == null) {
          isNew=true;
          if (concept.getDatatype() != null && concept.getDatatype().getName().equals("Numeric")) {
            concept=getConceptNumeric(concept,request);
          }
 else           if (concept.getDatatype() != null && concept.getDatatype().getName().equals("Complex")) {
            concept=getConceptComplex(concept,request);
          }
          cs.saveConcept(concept);
        }
 else {
          if (concept.getDatatype() != null && concept.getDatatype().getName().equals("Numeric")) {
            concept=getConceptNumeric(concept,request);
          }
 else           if (concept.getDatatype() != null && concept.getDatatype().getName().equals("Complex")) {
            concept=getConceptComplex(concept,request);
          }
          cs.saveConcept(concept);
        }
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Concept.saved");
      }
 catch (      APIException e) {
        log.error("Error while trying to save concept",e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.save");
        if (isNew) {
          errors.reject("concept","Concept.cannot.save");
          return new ModelAndView(new RedirectView(getSuccessView()));
        }
      }
      return new ModelAndView(new RedirectView(getSuccessView() + "?conceptId=" + concept.getConceptId()));
    }
  }
  return new ModelAndView(new RedirectView(getFormView()));
}
