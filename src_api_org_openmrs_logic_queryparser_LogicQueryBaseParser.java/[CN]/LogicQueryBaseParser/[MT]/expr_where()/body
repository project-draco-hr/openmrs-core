{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST expr_where_AST=null;
  try {
switch (LA(1)) {
case COUNT:
case THE:
case NOT:
case MINIMUM:
case MIN:
case MAXIMUM:
case MAX:
case LAST:
case FIRST:
case EARLIEST:
case LATEST:
case EXIST:
case EXISTS:
case AVG:
case AVERAGE:
case SUM:
case MEDIAN:
case TRUE:
case FALSE:
case OF:
case TIME:
case ANY:
case NULL:
case ID:
case INTLIT:
case STRING_LITERAL:
case LPAREN:
case TERM_LITERAL:
{
        expr_range();
        astFactory.addASTChild(currentAST,returnAST);
{
          _loop61:           do {
            if ((LA(1) == WHERE)) {
              AST tmp204_AST=null;
              tmp204_AST=astFactory.create(LT(1));
              astFactory.addASTChild(currentAST,tmp204_AST);
              match(WHERE);
              expr_range();
              astFactory.addASTChild(currentAST,returnAST);
            }
 else {
              break _loop61;
            }
          }
 while (true);
        }
        expr_where_AST=(AST)currentAST.root;
        break;
      }
case BEFORE:
case AFTER:
case WITHIN:
case COMMA:
case RPAREN:
case LITERAL_MERGE:
case LITERAL_SORT:
case SEMI:
{
      expr_where_AST=(AST)currentAST.root;
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
 catch (RecognitionException ex) {
reportError(ex);
recover(ex,_tokenSet_17);
}
returnAST=expr_where_AST;
}
