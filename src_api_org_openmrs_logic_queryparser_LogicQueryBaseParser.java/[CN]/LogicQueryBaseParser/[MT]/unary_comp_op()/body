{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST unary_comp_op_AST=null;
  try {
switch (LA(1)) {
case LITERAL_PRESENT:
{
        AST tmp130_AST=null;
        tmp130_AST=astFactory.create(LT(1));
        astFactory.addASTChild(currentAST,tmp130_AST);
        match(LITERAL_PRESENT);
        unary_comp_op_AST=(AST)currentAST.root;
        break;
      }
case LITERAL_NULL:
{
      AST tmp131_AST=null;
      tmp131_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp131_AST);
      match(LITERAL_NULL);
      unary_comp_op_AST=(AST)currentAST.root;
      break;
    }
case LITERAL_BOOLEAN:
{
    AST tmp132_AST=null;
    tmp132_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp132_AST);
    match(LITERAL_BOOLEAN);
    unary_comp_op_AST=(AST)currentAST.root;
    break;
  }
case LITERAL_NUMBER:
{
  AST tmp133_AST=null;
  tmp133_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp133_AST);
  match(LITERAL_NUMBER);
  unary_comp_op_AST=(AST)currentAST.root;
  break;
}
case TIME:
{
AST tmp134_AST=null;
tmp134_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp134_AST);
match(TIME);
unary_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_DURATION:
{
AST tmp135_AST=null;
tmp135_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp135_AST);
match(LITERAL_DURATION);
unary_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_STRING:
{
AST tmp136_AST=null;
tmp136_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp136_AST);
match(LITERAL_STRING);
unary_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_LIST:
{
AST tmp137_AST=null;
tmp137_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp137_AST);
match(LITERAL_LIST);
unary_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_OBJECT:
{
AST tmp138_AST=null;
tmp138_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp138_AST);
match(LITERAL_OBJECT);
unary_comp_op_AST=(AST)currentAST.root;
break;
}
case ID:
{
AST tmp139_AST=null;
tmp139_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp139_AST);
match(ID);
unary_comp_op_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
reportError(ex);
recover(ex,_tokenSet_2);
}
returnAST=unary_comp_op_AST;
}
