{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST expr_function_AST=null;
  try {
    if ((_tokenSet_23.member(LA(1)))) {
      expr_factor();
      astFactory.addASTChild(currentAST,returnAST);
      expr_function_AST=(AST)currentAST.root;
    }
 else     if ((_tokenSet_8.member(LA(1)))) {
{
switch (LA(1)) {
case THE:
{
            the();
            break;
          }
case COUNT:
case MINIMUM:
case MIN:
case MAXIMUM:
case MAX:
case LAST:
case FIRST:
case EARLIEST:
case LATEST:
case EXIST:
case EXISTS:
case AVG:
case AVERAGE:
case SUM:
case MEDIAN:
case TRUE:
case FALSE:
case OF:
case TIME:
case ANY:
case NULL:
case ID:
case INTLIT:
case STRING_LITERAL:
case LPAREN:
case TERM_LITERAL:
{
          break;
        }
default :
{
        throw new NoViableAltException(LT(1),getFilename());
      }
  }
}
{
switch (LA(1)) {
case MINIMUM:
case MIN:
case MAXIMUM:
case MAX:
case LAST:
case FIRST:
case EARLIEST:
case LATEST:
case TRUE:
case FALSE:
case OF:
case NULL:
case ID:
case INTLIT:
case STRING_LITERAL:
case LPAREN:
case TERM_LITERAL:
{
      from_of_func_op();
      astFactory.addASTChild(currentAST,returnAST);
{
switch (LA(1)) {
case OF:
{
            match(OF);
            break;
          }
case TRUE:
case FALSE:
case NULL:
case ID:
case INTLIT:
case STRING_LITERAL:
case LPAREN:
case TERM_LITERAL:
{
          break;
        }
default :
{
        throw new NoViableAltException(LT(1),getFilename());
      }
  }
}
expr_factor();
astFactory.addASTChild(currentAST,returnAST);
break;
}
case COUNT:
case EXIST:
case EXISTS:
case AVG:
case AVERAGE:
case SUM:
case MEDIAN:
case TIME:
case ANY:
{
of_func_op();
astFactory.addASTChild(currentAST,returnAST);
{
switch (LA(1)) {
case OF:
{
    match(OF);
    break;
  }
case TRUE:
case FALSE:
case NULL:
case ID:
case INTLIT:
case STRING_LITERAL:
case LPAREN:
case TERM_LITERAL:
{
  break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
expr_factor();
astFactory.addASTChild(currentAST,returnAST);
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
expr_function_AST=(AST)currentAST.root;
}
 else {
throw new NoViableAltException(LT(1),getFilename());
}
}
 catch (RecognitionException ex) {
reportError(ex);
recover(ex,_tokenSet_24);
}
returnAST=expr_function_AST;
}
