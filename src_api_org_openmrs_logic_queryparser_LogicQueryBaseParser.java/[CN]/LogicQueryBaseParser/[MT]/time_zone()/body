{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST time_zone_AST=null;
  try {
switch (LA(1)) {
case ENDBLOCK:
{
        time_zone_AST=(AST)currentAST.root;
        break;
      }
case LITERAL_Z:
case LITERAL_z:
{
      zulu();
      astFactory.addASTChild(currentAST,returnAST);
      time_zone_AST=(AST)currentAST.root;
      break;
    }
case 117:
{
    AST tmp100_AST=null;
    tmp100_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp100_AST);
    match(117);
    AST tmp101_AST=null;
    tmp101_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp101_AST);
    match(DIGIT);
    AST tmp102_AST=null;
    tmp102_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp102_AST);
    match(DIGIT);
    AST tmp103_AST=null;
    tmp103_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp103_AST);
    match(112);
    AST tmp104_AST=null;
    tmp104_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp104_AST);
    match(DIGIT);
    AST tmp105_AST=null;
    tmp105_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp105_AST);
    match(DIGIT);
    time_zone_AST=(AST)currentAST.root;
    break;
  }
case 118:
{
  AST tmp106_AST=null;
  tmp106_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp106_AST);
  match(118);
  AST tmp107_AST=null;
  tmp107_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp107_AST);
  match(DIGIT);
  AST tmp108_AST=null;
  tmp108_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp108_AST);
  match(DIGIT);
  AST tmp109_AST=null;
  tmp109_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp109_AST);
  match(112);
  AST tmp110_AST=null;
  tmp110_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp110_AST);
  match(DIGIT);
  AST tmp111_AST=null;
  tmp111_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp111_AST);
  match(DIGIT);
  time_zone_AST=(AST)currentAST.root;
  break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
reportError(ex);
recover(ex,_tokenSet_4);
}
returnAST=time_zone_AST;
}
