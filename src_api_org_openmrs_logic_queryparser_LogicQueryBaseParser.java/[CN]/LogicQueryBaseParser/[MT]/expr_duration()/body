{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST expr_duration_AST=null;
  try {
    expr_function();
    astFactory.addASTChild(currentAST,returnAST);
{
switch (LA(1)) {
case YEAR:
case YEARS:
case DAYS:
case DAY:
case MONTH:
case MONTHS:
case WEEK:
case WEEKS:
case SECOND:
case LITERAL_hour:
case LITERAL_hours:
case LITERAL_minute:
case LITERAL_minutes:
case LITERAL_seconds:
{
          duration_op();
          astFactory.addASTChild(currentAST,returnAST);
          break;
        }
case AND:
case IS:
case ARE:
case WAS:
case WERE:
case FROM:
case BEFORE:
case AFTER:
case AGO:
case OR:
case WHERE:
case WITHIN:
case INTLIT:
case COMMA:
case RPAREN:
case 117:
case 118:
case EQUALS:
case LITERAL_EQ:
case LT:
case LITERAL_LT:
case GT:
case LITERAL_GT:
case LTE:
case LITERAL_LE:
case GTE:
case LITERAL_GE:
case NE:
case LITERAL_NE:
case LITERAL_MERGE:
case LITERAL_SORT:
case LITERAL_SEQTO:
case ACTION_OP:
case 159:
case 160:
case SEMI:
{
        break;
      }
default :
{
      throw new NoViableAltException(LT(1),getFilename());
    }
}
}
expr_duration_AST=(AST)currentAST.root;
}
 catch (RecognitionException ex) {
reportError(ex);
recover(ex,_tokenSet_9);
}
returnAST=expr_duration_AST;
}
