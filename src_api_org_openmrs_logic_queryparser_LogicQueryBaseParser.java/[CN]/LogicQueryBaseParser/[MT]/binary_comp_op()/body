{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST binary_comp_op_AST=null;
  try {
    if ((LA(1) == LESS)) {
      AST tmp140_AST=null;
      tmp140_AST=astFactory.create(LT(1));
      astFactory.makeASTRoot(currentAST,tmp140_AST);
      match(LESS);
      AST tmp141_AST=null;
      tmp141_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp141_AST);
      match(THAN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == GREATER)) {
      AST tmp142_AST=null;
      tmp142_AST=astFactory.create(LT(1));
      astFactory.makeASTRoot(currentAST,tmp142_AST);
      match(GREATER);
      AST tmp143_AST=null;
      tmp143_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp143_AST);
      match(THAN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == GREATER)) {
      AST tmp144_AST=null;
      tmp144_AST=astFactory.create(LT(1));
      astFactory.makeASTRoot(currentAST,tmp144_AST);
      match(GREATER);
      AST tmp145_AST=null;
      tmp145_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp145_AST);
      match(THAN);
      AST tmp146_AST=null;
      tmp146_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp146_AST);
      match(OR);
      AST tmp147_AST=null;
      tmp147_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp147_AST);
      match(EQUAL);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LESS)) {
      AST tmp148_AST=null;
      tmp148_AST=astFactory.create(LT(1));
      astFactory.makeASTRoot(currentAST,tmp148_AST);
      match(LESS);
      AST tmp149_AST=null;
      tmp149_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp149_AST);
      match(THAN);
      AST tmp150_AST=null;
      tmp150_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp150_AST);
      match(OR);
      AST tmp151_AST=null;
      tmp151_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp151_AST);
      match(EQUAL);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == IN)) {
      AST tmp152_AST=null;
      tmp152_AST=astFactory.create(LT(1));
      astFactory.makeASTRoot(currentAST,tmp152_AST);
      match(IN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
 catch (  RecognitionException ex) {
    reportError(ex);
    recover(ex,_tokenSet_8);
  }
  returnAST=binary_comp_op_AST;
}
