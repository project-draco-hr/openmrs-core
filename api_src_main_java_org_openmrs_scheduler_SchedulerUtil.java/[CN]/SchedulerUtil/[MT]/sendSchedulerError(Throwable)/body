{
  try {
    Context.openSession();
    Boolean emailIsEnabled=Boolean.valueOf(Context.getAdministrationService().getGlobalProperty(SchedulerConstants.SCHEDULER_ADMIN_EMAIL_ENABLED_PROPERTY));
    if (emailIsEnabled) {
      String recipients=Context.getAdministrationService().getGlobalProperty(SchedulerConstants.SCHEDULER_ADMIN_EMAIL_PROPERTY);
      if (recipients != null) {
        String sender=SchedulerConstants.SCHEDULER_DEFAULT_FROM;
        String subject=SchedulerConstants.SCHEDULER_DEFAULT_SUBJECT + " : " + throwable.getClass().getName();
        StringBuilder message=new StringBuilder();
        message.append("\n\nStacktrace\n============================================\n");
        message.append(SchedulerUtil.getExceptionAsString(throwable));
        message.append("\n\nSystem Variables\n============================================\n");
        for (        Map.Entry<String,String> entry : Context.getAdministrationService().getSystemVariables().entrySet()) {
          message.append(entry.getKey()).append(" = ").append(entry.getValue()).append("\n");
        }
        log.debug("Sending scheduler error email to [" + recipients + "] from ["+ sender+ "] with subject ["+ subject+ "]:\n"+ message);
        Context.getMessageService().sendMessage(recipients,sender,subject,message.toString());
      }
    }
  }
 catch (  Exception e) {
    log.warn("Could not send scheduler error email: ",e);
  }
 finally {
    Context.closeSession();
  }
}
