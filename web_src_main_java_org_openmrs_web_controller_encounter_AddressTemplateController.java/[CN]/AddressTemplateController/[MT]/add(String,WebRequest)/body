{
  if (!StringUtils.hasText(xml) || xml.trim().equals("")) {
    request.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,Context.getMessageSourceService().getMessage("AddressTemplate.error.empty"),WebRequest.SCOPE_SESSION);
  }
 else {
    try {
      AddressTemplate test=Context.getSerializationService().getDefaultSerializer().deserialize(xml,AddressTemplate.class);
      List<String> requiredElements=test.getRequiredElements();
      if (requiredElements != null) {
        for (        String fieldName : requiredElements) {
          try {
            Object value=PropertyUtils.getProperty(new PersonAddress(),fieldName);
          }
 catch (          Exception e) {
            request.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,Context.getMessageSourceService().getMessage("AddressTemplate.error.fieldNotDeclaredInTemplate",new Object[]{fieldName},Context.getLocale()),WebRequest.SCOPE_SESSION);
            return "redirect:addressTemplate.form";
          }
        }
      }
      Context.getLocationService().saveAddressTemplate(xml);
      request.setAttribute(WebConstants.OPENMRS_MSG_ATTR,Context.getMessageSourceService().getMessage("AddressTemplate.saved"),WebRequest.SCOPE_SESSION);
    }
 catch (    Exception e) {
      request.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,Context.getMessageSourceService().getMessage("AddressTemplate.error"),WebRequest.SCOPE_SESSION);
    }
  }
  return "redirect:addressTemplate.form";
}
