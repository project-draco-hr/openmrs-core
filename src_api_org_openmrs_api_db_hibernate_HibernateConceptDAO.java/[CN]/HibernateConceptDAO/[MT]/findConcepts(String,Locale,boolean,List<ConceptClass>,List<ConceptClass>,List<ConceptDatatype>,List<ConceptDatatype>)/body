{
  String locale=loc.getLanguage().substring(0,2);
  List<String> words=ConceptWord.getUniqueWords(phrase);
  List<ConceptWord> conceptWords=new Vector<ConceptWord>();
  if (words.size() > 0) {
    Criteria searchCriteria=sessionFactory.getCurrentSession().createCriteria(ConceptWord.class,"cw1");
    searchCriteria.add(Restrictions.eq("locale",locale));
    if (includeRetired == false) {
      searchCriteria.createAlias("concept","concept");
      searchCriteria.add(Expression.eq("concept.retired",false));
    }
    Iterator<String> word=words.iterator();
    searchCriteria.add(Expression.like("word",word.next(),MatchMode.START));
    Conjunction junction=Expression.conjunction();
    while (word.hasNext()) {
      String w=word.next();
      log.debug(w);
      DetachedCriteria crit=DetachedCriteria.forClass(ConceptWord.class).setProjection(Property.forName("concept")).add(Expression.eqProperty("concept","cw1.concept")).add(Restrictions.like("word",w,MatchMode.START)).add(Restrictions.eq("locale",locale));
      junction.add(Subqueries.exists(crit));
    }
    searchCriteria.add(junction);
    if (requireClasses.size() > 0)     searchCriteria.add(Expression.in("concept.conceptClass",requireClasses));
    if (excludeClasses.size() > 0)     searchCriteria.add(Expression.not(Expression.in("concept.conceptClass",excludeClasses)));
    if (requireDatatypes.size() > 0)     searchCriteria.add(Expression.in("concept.datatype",requireDatatypes));
    if (excludeDatatypes.size() > 0)     searchCriteria.add(Expression.not(Expression.in("concept.datatype",excludeDatatypes)));
    searchCriteria.addOrder(Order.asc("synonym"));
    conceptWords=searchCriteria.list();
  }
  log.debug("ConceptWords found: " + conceptWords.size());
  return conceptWords;
}
