{
  RequestContext requestContext=(RequestContext)this.pageContext.getAttribute(RequestContextAwareTag.REQUEST_CONTEXT_PAGE_ATTRIBUTE);
  if (date == null && getPath() != null) {
    try {
      String resolvedPath=ExpressionEvaluationUtils.evaluateString("path",getPath(),pageContext);
      String nestedPath=(String)pageContext.getAttribute(NestedPathTag.NESTED_PATH_VARIABLE_NAME,PageContext.REQUEST_SCOPE);
      if (nestedPath != null) {
        resolvedPath=nestedPath + resolvedPath;
      }
      BindStatus status=new BindStatus(requestContext,resolvedPath,false);
      log.debug("status: " + status);
      if (status.getValue() != null) {
        log.debug("status.value: " + status.getValue());
        if (status.getValue().getClass() == Date.class) {
          date=(Date)status.getValue();
        }
 else {
          log.debug("status.valueType: " + status.getValueType());
          Timestamp timestamp=(Timestamp)status.getEditor().getValue();
          date=new Date(timestamp.getTime());
        }
      }
    }
 catch (    Exception e) {
      log.warn("Unable to get a date object from path: " + getPath(),e);
      return SKIP_BODY;
    }
  }
  if (!dateWasSet && date == null) {
    log.warn("Both 'date' and 'path' cannot be null.  Page: " + pageContext.getPage() + " localname:"+ pageContext.getRequest().getLocalName()+ " rd:"+ pageContext.getRequest().getRequestDispatcher(""));
    return SKIP_BODY;
  }
  if (type == null) {
    type="";
  }
  DateFormat dateFormat=null;
  if (format != null && format.length() > 0) {
    dateFormat=new SimpleDateFormat(format,Context.getLocale());
  }
 else   if (type.equals("xml")) {
    dateFormat=new SimpleDateFormat("dd-MMM-yyyy",Context.getLocale());
  }
 else {
    log.debug("context locale: " + Context.getLocale());
    if (type.equals("long")) {
      dateFormat=DateFormat.getDateTimeInstance(DateFormat.LONG,DateFormat.LONG,Context.getLocale());
    }
 else     if (type.equals("medium")) {
      dateFormat=DateFormat.getDateInstance(DateFormat.MEDIUM,Context.getLocale());
    }
 else {
      dateFormat=Context.getDateFormat();
    }
  }
  if (dateFormat == null) {
    dateFormat=new SimpleDateFormat("MM-dd-yyyy");
  }
  String datestr="";
  try {
    if (date != null) {
      if (type.equals("milliseconds")) {
        datestr="" + date.getTime();
      }
 else {
        if (showTodayOrYesterday && (DateUtils.isSameDay(Calendar.getInstance().getTime(),date) || OpenmrsUtil.isYesterday(date))) {
          String timeFormatString=(format != null && !format.contains("a")) ? "HH:mm" : "h:mm a";
          dateFormat=new SimpleDateFormat(timeFormatString);
          if (DateUtils.isSameDay(Calendar.getInstance().getTime(),date)) {
            datestr=Context.getMessageSourceService().getMessage("general.today") + " " + dateFormat.format(date);
          }
 else {
            datestr=Context.getMessageSourceService().getMessage("general.yesterday") + " " + dateFormat.format(date);
          }
        }
 else {
          datestr=dateFormat.format(date);
        }
      }
    }
  }
 catch (  IllegalArgumentException e) {
    log.error("date: " + date);
    log.error("format: " + format);
    log.error(e);
    datestr=date.toString();
  }
  try {
    pageContext.getOut().write(datestr);
  }
 catch (  IOException e) {
    log.error(e);
  }
  release();
  return SKIP_BODY;
}
