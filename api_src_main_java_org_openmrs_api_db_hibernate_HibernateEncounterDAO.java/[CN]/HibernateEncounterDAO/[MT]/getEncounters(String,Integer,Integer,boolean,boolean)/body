{
  Criteria criteria=createEncounterByQueryCriteria(query,includeVoided,sortbyNames);
  ProjectionList pl=Projections.projectionList();
  pl.add(Projections.distinct(Projections.groupProperty("enc.encounterId")));
  pl.add(Projections.property("enc.encounterType"));
  pl.add(Projections.property("enc.patient"));
  pl.add(Projections.property("enc.location"));
  pl.add(Projections.property("enc.provider"));
  pl.add(Projections.property("enc.form"));
  pl.add(Projections.property("enc.encounterDatetime"));
  pl.add(Projections.property("enc.voided"));
  pl.add(Projections.max("enc.encounterId"));
  criteria.setProjection(pl);
  if (start != null)   criteria.setFirstResult(start);
  if (length != null && length > 0)   criteria.setMaxResults(length);
  List list=criteria.list();
  List<EncounterSearchResult> hits=new ArrayList<EncounterSearchResult>();
  for (  Object result : list) {
    Object[] objArray=(Object[])result;
    EncounterSearchResult hit=new EncounterSearchResult();
    hit.setEncounterId((Integer)objArray[0]);
    hit.setEncounterType((EncounterType)objArray[1]);
    hit.setPatient((Patient)objArray[2]);
    hit.setLocation((Location)objArray[3]);
    hit.setProvider((Person)objArray[4]);
    hit.setForm((Form)objArray[5]);
    hit.setEncounterDatetime((Date)objArray[6]);
    hit.setVoided((Boolean)objArray[7]);
    hits.add(hit);
  }
  return hits;
}
