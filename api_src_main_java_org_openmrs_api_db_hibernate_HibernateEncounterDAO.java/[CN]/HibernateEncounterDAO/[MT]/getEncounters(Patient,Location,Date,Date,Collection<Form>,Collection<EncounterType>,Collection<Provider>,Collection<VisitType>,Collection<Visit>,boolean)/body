{
  Criteria crit=sessionFactory.getCurrentSession().createCriteria(Encounter.class);
  if (patient != null && patient.getPatientId() != null) {
    crit.add(Restrictions.eq("patient",patient));
  }
  if (location != null && location.getLocationId() != null) {
    crit.add(Restrictions.eq("location",location));
  }
  if (fromDate != null) {
    crit.add(Restrictions.ge("encounterDatetime",fromDate));
  }
  if (toDate != null) {
    crit.add(Restrictions.le("encounterDatetime",toDate));
  }
  if (enteredViaForms != null && enteredViaForms.size() > 0) {
    crit.add(Restrictions.in("form",enteredViaForms));
  }
  if (encounterTypes != null && encounterTypes.size() > 0) {
    crit.add(Restrictions.in("encounterType",encounterTypes));
  }
  if (providers != null && providers.size() > 0) {
    crit.createAlias("encounterProviders","ep");
    crit.add(Restrictions.in("ep.provider",providers));
  }
  if (visitTypes != null && visitTypes.size() > 0) {
    crit.createAlias("visit","v");
    crit.add(Restrictions.in("v.visitType",visitTypes));
  }
  if (visits != null && visits.size() > 0) {
    crit.add(Restrictions.in("visit",visits));
  }
  if (!includeVoided) {
    crit.add(Restrictions.eq("voided",false));
  }
  crit.addOrder(Order.asc("encounterDatetime"));
  return crit.list();
}
