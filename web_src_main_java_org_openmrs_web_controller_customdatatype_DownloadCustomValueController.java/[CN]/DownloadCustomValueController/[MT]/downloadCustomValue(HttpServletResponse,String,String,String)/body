{
  Class handlerClass=null;
  CustomDatatypeHandler handler=null;
  if (StringUtils.isNotBlank(handlerClassname)) {
    try {
      handlerClass=Context.loadClass(handlerClassname);
      handler=(CustomDatatypeHandler)handlerClass.newInstance();
    }
 catch (    ClassNotFoundException ex) {
      log.warn("could not find handler class " + handlerClassname,ex);
    }
catch (    InstantiationException ex) {
      log.warn("could not instantiate handler class " + handlerClassname,ex);
    }
catch (    IllegalAccessException ex) {
      log.warn("could not access handler class " + handlerClassname,ex);
    }
  }
  Class datatypeClass=null;
  CustomDatatype datatype=null;
  try {
    datatypeClass=Context.loadClass(datatypeClassname);
    datatype=(CustomDatatype)datatypeClass.newInstance();
  }
 catch (  ClassNotFoundException ex) {
    log.error("could not find datatype class " + datatypeClassname,ex);
  }
catch (  InstantiationException ex) {
    log.error("could not instantiate datatype class " + datatypeClassname,ex);
  }
catch (  IllegalAccessException ex) {
    log.error("could not access datatype class " + datatypeClassname,ex);
  }
  if (datatype == null || StringUtils.isBlank(valueReference)) {
    throw new IOException("datatype and value are required parameters");
  }
  String data=null;
  if (handler != null) {
    data=handler.render(datatype,valueReference,null);
  }
 else {
    data=datatype.fromReferenceString(valueReference).toString();
  }
  if (data == null) {
    log.error("The custom value with the reference " + valueReference + " cannot be found.");
    response.sendError(404);
  }
 else {
    response.setHeader("Content-Type","text/plain; charset=utf-8");
    String filename="openmrs-custom-value_" + valueReference + ".txt";
    response.setHeader("Content-Disposition","attachment; filename=" + filename);
    OutputStream out=response.getOutputStream();
    out.write(data.getBytes());
    out.flush();
  }
}
