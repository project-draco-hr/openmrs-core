{
  Patient p=new Patient();
  PatientIdentifier pa1=new PatientIdentifier();
  PatientIdentifier pa2=new PatientIdentifier();
  PatientIdentifier pa3=new PatientIdentifier();
  PatientIdentifier pa4=new PatientIdentifier();
  pa2.setIdentifier("2nd-date");
  pa2.setIdentifierType(new PatientIdentifierType(1));
  pa2.setDateCreated(new Date(1000));
  pa2.setVoided(false);
  p.addIdentifier(pa2);
  pa4.setIdentifier("last-date");
  pa4.setIdentifierType(new PatientIdentifierType(1));
  pa4.setDateCreated(new Date(pa2.getDateCreated().getTime() + 1000));
  pa4.setVoided(false);
  p.addIdentifier(pa4);
  pa1.setIdentifier("first-date");
  pa1.setIdentifierType(new PatientIdentifierType(1));
  pa1.setDateCreated(new Date(pa2.getDateCreated().getTime() - 1000));
  pa1.setVoided(false);
  p.addIdentifier(pa1);
  pa3.setIdentifier("3rd-date");
  pa3.setIdentifierType(new PatientIdentifierType(1));
  pa3.setDateCreated(new Date(pa2.getDateCreated().getTime() + 500));
  pa3.setVoided(false);
  p.addIdentifier(pa3);
  PatientIdentifier[] pis=new PatientIdentifier[]{};
  pis=p.getIdentifiers().toArray(pis);
  assertTrue(p.getIdentifiers().contains(pa3));
  pa3.setVoided(true);
  pis=p.getIdentifiers().toArray(pis);
  assertTrue(p.getIdentifiers().contains(pa3));
  pa3.setVoided(false);
  p.removeIdentifier(pa3);
  pis=p.getIdentifiers().toArray(pis);
  pa3.setVoided(true);
  p.addIdentifier(pa3);
  pis=p.getIdentifiers().toArray(pis);
  assertTrue(p.getIdentifiers().contains(pa3));
}
