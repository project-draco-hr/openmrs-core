{
  Vector<Object> objectList=new Vector<Object>();
  Context context=(Context)WebContextFactory.get().getSession().getAttribute(WebConstants.OPENMRS_CONTEXT_HTTPSESSION_ATTR);
  HttpServletRequest request=WebContextFactory.get().getHttpServletRequest();
  if (context == null) {
    objectList.add("Your session has expired.");
    objectList.add("Please <a href='" + request.getContextPath() + "/logout'>log in</a> again.");
  }
 else {
    Integer userId=-1;
    User u=context.getAuthenticatedUser();
    if (u != null)     userId=u.getUserId();
    log.info(userId + "|" + phrase+ "|"+ classNames.toString());
    Locale locale=context.getLocale();
    if (classNames == null)     classNames=new Vector<String>();
    if (ignoreClassNames == null)     ignoreClassNames=new Vector<String>();
    try {
      ConceptService cs=context.getConceptService();
      List<ConceptWord> words=new Vector<ConceptWord>();
      if (phrase.matches("\\d+")) {
        Concept c=cs.getConcept(Integer.valueOf(phrase));
        if (c != null) {
          ConceptWord word=new ConceptWord(phrase,c,locale.getLanguage(),"Concept Id #" + phrase);
          words.add(word);
        }
      }
      if (phrase == null || phrase.equals("")) {
      }
 else {
        words.addAll(cs.findConcepts(phrase,locale,includeRetired));
      }
      if (words.size() == 0) {
        objectList.add("No matches found for <b>" + phrase + "</b>");
      }
 else {
        objectList=new Vector<Object>(words.size());
        int maxCount=500;
        int curCount=0;
        if (classNames.size() > 0) {
          outer:           for (          ConceptWord word : words) {
            inner:             for (            String o : classNames)             if (o.equals(word.getConcept().getConceptClass().getName())) {
              if (++curCount > maxCount) {
                break outer;
              }
              objectList.add(new ConceptListItem(word));
            }
          }
        }
 else         if (ignoreClassNames.size() > 0) {
          outer:           for (          ConceptWord word : words) {
            inner:             for (            String o : ignoreClassNames)             if (!o.equals(word.getConcept().getConceptClass().getName())) {
              if (++curCount > maxCount) {
                break outer;
              }
              objectList.add(new ConceptListItem(word));
            }
          }
        }
 else {
          for (          ConceptWord word : words) {
            if (++curCount > maxCount) {
              break;
            }
            objectList.add(new ConceptListItem(word));
          }
        }
      }
    }
 catch (    Exception e) {
      StringWriter sw=new StringWriter();
      PrintWriter pw=new PrintWriter(sw);
      e.printStackTrace(pw);
      log.error(e + " - " + sw.toString());
      objectList.add("Error while attempting to find concepts - " + e.getMessage());
    }
  }
  return objectList;
}
