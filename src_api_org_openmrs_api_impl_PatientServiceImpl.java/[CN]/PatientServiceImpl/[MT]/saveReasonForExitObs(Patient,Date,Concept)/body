{
  if (patient == null)   throw new APIException("Patient supplied to method is null");
  if (exitDate == null)   throw new APIException("Exit date supplied to method is null");
  if (cause == null)   throw new APIException("Cause supplied to method is null");
  log.debug("Patient is exiting, so let's make sure there's an Obs for it");
  String codProp=Context.getAdministrationService().getGlobalProperty("concept.reasonExitedCare");
  Concept reasonForExit=Context.getConceptService().getConcept(codProp);
  if (reasonForExit != null) {
    List<Obs> obssExit=Context.getObsService().getObservationsByPersonAndConcept(patient,reasonForExit);
    if (obssExit != null) {
      if (obssExit.size() > 1) {
        log.error("Multiple reasons for exit (" + obssExit.size() + ")?  Shouldn't be...");
      }
 else {
        Obs obsExit=null;
        if (obssExit.size() == 1) {
          log.debug("Already has a reason for exit, so changing it");
          obsExit=obssExit.iterator().next();
        }
 else {
          log.debug("No reason for exit yet, let's create one.");
          obsExit=new Obs();
          obsExit.setPerson(patient);
          obsExit.setConcept(reasonForExit);
          obsExit.setConceptName(reasonForExit.getName());
          Location loc=null;
          if (loc == null)           loc=Context.getLocationService().getLocation("Unknown Location");
          if (loc == null)           loc=Context.getLocationService().getLocation(new Integer(1));
          if (loc != null)           obsExit.setLocation(loc);
 else           log.error("Could not find a suitable location for which to create this new Obs");
        }
        if (obsExit != null) {
          obsExit.setValueCoded(cause);
          obsExit.setValueCodedName(cause.getName());
          obsExit.setObsDatetime(exitDate);
          Context.getObsService().saveObs(obsExit,null);
        }
      }
    }
  }
 else {
    log.debug("Reason for exit is null - should not have gotten here without throwing an error on the form.");
  }
}
