{
  Map<Integer,String> patientIdentifiers=new HashMap<Integer,String>();
  Criteria criteria=sessionFactory.getCurrentSession().createCriteria(PatientIdentifier.class);
  ProjectionList projections=Projections.projectionList();
  projections.add(Projections.property("identifier"));
  projections.add(Projections.property("patient.personId"));
  criteria.setProjection(projections);
  criteria.setCacheMode(CacheMode.IGNORE);
  if (patients != null) {
    criteria.add(Restrictions.in("patient.personId",patients.getMemberIds()));
  }
  criteria.add(Restrictions.eq("voided",false));
  if (types != null && types.size() > 0) {
    criteria.add(Restrictions.in("identifierType",types));
  }
  criteria.addOrder(org.hibernate.criterion.Order.desc("patient.personId"));
  List<Object[]> rows=criteria.list();
  for (  Object[] row : rows) {
    String identifier=(String)row[0];
    Integer patientId=(Integer)row[1];
    if (!patientIdentifiers.containsKey(patientId)) {
      patientIdentifiers.put(patientId,identifier);
    }
  }
  return patientIdentifiers;
}
