{
  HashSet<Integer> idsLookup=patientIds == null ? null : (patientIds instanceof HashSet ? (HashSet<Integer>)patientIds : new HashSet<Integer>(patientIds));
  Map<Integer,Collection<Integer>> ret=new HashMap<Integer,Collection<Integer>>();
  List<String> whereClauses=new ArrayList<String>();
  whereClauses.add("o.voided = false");
  if (toDate != null)   whereClauses.add("o.start_date <= :toDate");
  if (fromDate != null) {
    whereClauses.add("(o.auto_expire_date is null or o.auto_expire_date > :fromDate)");
    whereClauses.add("(o.discontinued_date is null or o.discontinued_date > :fromDate)");
  }
  String sql="select o.patient_id, d.drug_inventory_id " + "from orders o " + "    inner join patient p on o.patient_id = p.patient_id and p.voided = false "+ "    inner join drug_order d on o.order_id = d.order_id ";
  for (ListIterator<String> i=whereClauses.listIterator(); i.hasNext(); ) {
    sql+=(i.nextIndex() == 0 ? " where " : " and ");
    sql+=i.next();
  }
  log.debug("sql= " + sql);
  Query query=sessionFactory.getCurrentSession().createSQLQuery(sql);
  query.setCacheMode(CacheMode.IGNORE);
  if (toDate != null)   query.setDate("toDate",toDate);
  if (fromDate != null)   query.setDate("fromDate",fromDate);
  List<Object[]> results=(List<Object[]>)query.list();
  for (  Object[] row : results) {
    Integer patientId=(Integer)row[0];
    if (idsLookup == null || idsLookup.contains(patientId)) {
      Integer drugId=(Integer)row[1];
      Collection<Integer> drugIds=ret.get(patientId);
      if (drugIds == null) {
        drugIds=new HashSet<Integer>();
        ret.put(patientId,drugIds);
      }
      drugIds.add(drugId);
    }
  }
  return ret;
}
