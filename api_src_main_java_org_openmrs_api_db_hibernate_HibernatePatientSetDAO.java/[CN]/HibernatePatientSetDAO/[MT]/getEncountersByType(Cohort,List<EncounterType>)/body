{
  Map<Integer,Encounter> ret=new HashMap<Integer,Encounter>();
  Criteria criteria=sessionFactory.getCurrentSession().createCriteria(Encounter.class);
  criteria.setCacheMode(CacheMode.IGNORE);
  if (patients != null && patients.size() > 0) {
    criteria.add(Restrictions.in("patient.personId",patients.getMemberIds()));
  }
  criteria.add(Restrictions.eq("voided",false));
  if (encTypes != null && encTypes.size() > 0) {
    criteria.add(Restrictions.in("encounterType",encTypes));
  }
  criteria.addOrder(org.hibernate.criterion.Order.desc("patient.personId"));
  criteria.addOrder(org.hibernate.criterion.Order.desc("encounterDatetime"));
  List<Encounter> encounters=criteria.list();
  for (  Encounter enc : encounters) {
    Integer ptId=enc.getPatientId();
    if (!ret.containsKey(ptId)) {
      ret.put(ptId,enc);
    }
  }
  return ret;
}
