{
  if (drugList != null && drugList.size() == 0) {
    drugList=null;
  }
  if (drugConceptList != null && drugConceptList.size() == 0) {
    drugConceptList=null;
  }
  StringBuilder sb=new StringBuilder();
  sb.append(" select distinct patient.id from DrugOrder where voided = false and patient.voided = false ");
  if (drugList != null) {
    sb.append(" and drug.id in (:drugIdList) ");
  }
  if (drugConceptList != null) {
    sb.append(" and concept.id in (:drugConceptIdList) ");
  }
  if (startDateFrom != null && startDateTo != null) {
    sb.append(" and dateActivated between :startDateFrom and :startDateTo ");
  }
 else {
    if (startDateFrom != null) {
      sb.append(" and dateActivated >= :startDateFrom ");
    }
    if (startDateTo != null) {
      sb.append(" and dateActivated <= :startDateTo ");
    }
  }
  if (orderReason != null && orderReason.size() > 0) {
    sb.append(" and orderReason.id in (:orderReasonIdList) ");
  }
  if (discontinued != null) {
    if (discontinued) {
      if (stopDateFrom != null && stopDateTo != null) {
        sb.append(" and dateStopped between :stopDateFrom and :stopDateTo ");
      }
 else {
        if (stopDateFrom != null) {
          sb.append(" and dateStopped >= :stopDateFrom ");
        }
        if (stopDateTo != null) {
          sb.append(" and dateStopped <= :stopDateTo ");
        }
      }
    }
 else {
      if (stopDateFrom != null && stopDateTo != null) {
        sb.append(" and autoExpireDate between :stopDateFrom and :stopDateTo ");
      }
 else {
        if (stopDateFrom != null) {
          sb.append(" and autoExpireDate >= :stopDateFrom ");
        }
        if (stopDateTo != null) {
          sb.append(" and autoExpireDate <= :stopDateTo ");
        }
      }
    }
  }
 else {
    if (stopDateFrom != null && stopDateTo != null) {
      sb.append(" and coalesce(dateStopped, autoExpireDate) between :stopDateFrom and :stopDateTo ");
    }
 else {
      if (stopDateFrom != null) {
        sb.append(" and coalesce(dateStopped, autoExpireDate) >= :stopDateFrom ");
      }
      if (stopDateTo != null) {
        sb.append(" and coalesce(dateStopped, autoExpireDate) <= :stopDateTo ");
      }
    }
  }
  log.debug("sql = " + sb);
  Query query=sessionFactory.getCurrentSession().createQuery(sb.toString());
  if (drugList != null) {
    List<Integer> ids=new ArrayList<Integer>();
    for (    Drug d : drugList) {
      ids.add(d.getDrugId());
    }
    query.setParameterList("drugIdList",ids);
  }
  if (drugConceptList != null) {
    List<Integer> ids=new ArrayList<Integer>();
    for (    Concept c : drugConceptList) {
      ids.add(c.getConceptId());
    }
    query.setParameterList("drugConceptIdList",ids);
  }
  if (startDateFrom != null) {
    query.setDate("startDateFrom",startDateFrom);
  }
  if (startDateTo != null) {
    query.setDate("startDateTo",startDateTo);
  }
  if (stopDateFrom != null) {
    query.setDate("stopDateFrom",stopDateFrom);
  }
  if (stopDateTo != null) {
    query.setDate("stopDateTo",stopDateTo);
  }
  if (discontinued != null) {
    query.setBoolean("discontinued",discontinued);
  }
  if (orderReason != null && orderReason.size() > 0) {
    List<Integer> ids=new ArrayList<Integer>();
    for (    Concept c : orderReason) {
      ids.add(c.getConceptId());
    }
    query.setParameterList("orderReasonIdList",ids);
  }
  return new Cohort(query.list());
}
