{
  Set<Integer> personIds=finalResult.keySet();
  LogicTransform transform=criteria.getExpression().getTransform();
  if (personIds.size() == 0) {
    for (    Integer personId : patients.getMemberIds()) {
      if (transform != null && (transform.getTransformOperator() == Operator.COUNT || transform.getTransformOperator() == Operator.AVERAGE)) {
        Result newResult=new Result();
        newResult.setValueNumeric(0);
        finalResult.put(personId,newResult);
      }
    }
    return;
  }
  for (  Integer personId : personIds) {
    Result r=finalResult.get(personId);
    if (transform != null && transform.getTransformOperator() == Operator.COUNT) {
      Result newResult=new Result();
      newResult.setValueNumeric(r.size());
      finalResult.put(personId,newResult);
    }
 else     if (transform != null && transform.getTransformOperator() == Operator.AVERAGE) {
      int count=0;
      double sum=0;
      for (      Result currResult : r) {
        if (!(currResult instanceof EmptyResult)) {
          count++;
          sum+=currResult.toNumber();
        }
      }
      double average=0;
      if (count > 0 && sum > 0) {
        average=sum / count;
      }
      Result newResult=new Result();
      newResult.setValueNumeric(average);
      finalResult.put(personId,newResult);
    }
  }
}
