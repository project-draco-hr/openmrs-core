{
  PatientIdentifierType patientIdentifierType=new PatientIdentifierType();
  patientIdentifierType.setName("testing");
  patientIdentifierType.setDescription("desc");
  as.createPatientIdentifierType(patientIdentifierType);
  PatientIdentifierType newPatientIdentifierType=ps.getPatientIdentifierType(patientIdentifierType.getPatientIdentifierTypeId());
  assertNotNull(newPatientIdentifierType);
  List<PatientIdentifierType> patientIdentifierTypes=ps.getPatientIdentifierTypes();
  assertNotNull(patientIdentifierTypes);
  boolean found=false;
  for (Iterator i=patientIdentifierTypes.iterator(); i.hasNext(); ) {
    PatientIdentifierType patientIdentifierType2=(PatientIdentifierType)i.next();
    assertNotNull(patientIdentifierType);
    assertTrue(patientIdentifierType.equals(patientIdentifierType2) == (patientIdentifierType.getPatientIdentifierTypeId().equals(patientIdentifierType2.getPatientIdentifierTypeId())));
    if (patientIdentifierType.equals(patientIdentifierType2))     found=true;
  }
  assertTrue(found);
  newPatientIdentifierType.setName("another test");
  as.updatePatientIdentifierType(newPatientIdentifierType);
  PatientIdentifierType newerPatientIdentifierType=ps.getPatientIdentifierType(newPatientIdentifierType.getPatientIdentifierTypeId());
  assertTrue(newerPatientIdentifierType.getPatientIdentifierTypeId().equals(newPatientIdentifierType.getPatientIdentifierTypeId()));
  as.deletePatientIdentifierType(newPatientIdentifierType);
  assertNull(ps.getPatientIdentifierType(newPatientIdentifierType.getPatientIdentifierTypeId()));
}
