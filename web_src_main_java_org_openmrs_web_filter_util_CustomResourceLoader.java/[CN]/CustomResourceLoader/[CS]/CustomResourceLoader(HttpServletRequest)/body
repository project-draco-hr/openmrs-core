{
  this.resources=new HashMap<Locale,ResourceBundle>();
  this.availablelocales=new HashSet<Locale>();
  try {
    PathMatchingResourcePatternResolver patternResolver=new PathMatchingResourcePatternResolver();
    Resource[] localResources=patternResolver.getResources("classpath*:messages*.properties");
    for (    Resource localeResource : localResources) {
      Locale locale=parseLocaleFrom(localeResource.getFilename(),PREFIX);
      ResourceBundle rb=new PropertyResourceBundle(new InputStreamReader(localeResource.getInputStream(),"UTF-8"));
      getResource().put(locale,rb);
      getAvailablelocales().add(locale);
    }
  }
 catch (  IOException ex) {
    log.error(ex.getMessage(),ex);
  }
}
