{
  Context.authenticate("USER-1","test");
  DrugOrder drugorder1=new DrugOrder();
  OrderType ordertypes1=orderService.getOrderTypes().get(1);
  Concept concept1=conceptService.getConcept(1);
  User orderer1=us.getUser(1);
  Encounter encounter1=(Encounter)es.getEncounter(1);
  String instructions1="instruct1";
  Date start1=new Date();
  Date autoexpire1=new Date();
  Drug drugInventoryId1=conceptService.getDrugs().get(1);
  Integer dose1=new Integer(1);
  String units1="units1";
  String freq1="freq1";
  Boolean prn1=false;
  Boolean complex1=false;
  Integer quantity1=new Integer(1);
  drugorder1.setOrderType(ordertypes1);
  drugorder1.setConcept(concept1);
  drugorder1.setOrderer(orderer1);
  drugorder1.setEncounter(encounter1);
  drugorder1.setInstructions(instructions1);
  drugorder1.setStartDate(start1);
  drugorder1.setAutoExpireDate(autoexpire1);
  drugorder1.setDrug(drugInventoryId1);
  drugorder1.setUnits(units1);
  drugorder1.setFrequency(freq1);
  drugorder1.setPrn(prn1);
  drugorder1.setComplex(complex1);
  drugorder1.setQuantity(quantity1);
  orderService.createOrder(drugorder1);
  DrugOrder drugorder2=(DrugOrder)orderService.getOrder(drugorder1.getOrderId());
  assertNotNull(drugorder2);
  OrderType ordertypes2=orderService.getOrderTypes().get(2);
  Concept concept2=conceptService.getConcept(2);
  User orderer2=us.getUser(2);
  Encounter encounter2=(Encounter)es.getEncounter(2);
  String instructions2="instruct2";
  Date start2=new Date();
  Date autoexpire2=new Date();
  Drug drugInventoryId2=conceptService.getDrugs().get(2);
  Integer dose2=new Integer(2);
  String units2="units2";
  String freq2="freq2";
  Boolean prn2=true;
  Boolean complex2=true;
  Integer quantity2=new Integer(2);
  drugorder2.setOrderType(ordertypes2);
  drugorder2.setConcept(concept2);
  drugorder2.setOrderer(orderer2);
  drugorder2.setEncounter(encounter2);
  drugorder2.setInstructions(instructions2);
  drugorder2.setStartDate(start2);
  drugorder2.setAutoExpireDate(autoexpire2);
  drugorder2.setDrug(drugInventoryId2);
  drugorder2.setUnits(units2);
  drugorder2.setFrequency(freq2);
  drugorder2.setPrn(prn2);
  drugorder2.setComplex(complex2);
  drugorder2.setQuantity(quantity2);
  orderService.updateOrder(drugorder2);
  DrugOrder drugorder3=(DrugOrder)orderService.getOrder(drugorder2.getOrderId());
  assertTrue(drugorder3.equals(drugorder1));
  assertTrue(drugorder3.getConcept().equals(concept2));
  assertTrue(drugorder3.getOrderType().equals(ordertypes2));
  assertTrue(drugorder3.getOrderer().equals(orderer2));
  assertTrue(drugorder3.getEncounter().equals(encounter2));
  assertTrue(drugorder3.getInstructions().equals(instructions2));
  assertTrue(drugorder3.getStartDate().equals(start2));
  assertTrue(drugorder3.getAutoExpireDate().equals(autoexpire2));
  assertTrue(drugorder3.getDrug().equals(drugInventoryId2));
  assertTrue(drugorder3.getDose().equals(dose2));
  assertTrue(drugorder3.getUnits().equals(units2));
  assertTrue(drugorder3.getFrequency().equals(freq2));
  assertTrue(drugorder3.getQuantity().equals(quantity2));
  orderService.voidOrder(drugorder1,"testing void function");
  DrugOrder drugorder4=(DrugOrder)orderService.getOrder(drugorder1.getOrderId());
  assertTrue(drugorder4.getVoidReason().equals("testing void function"));
  assertTrue(drugorder4.getVoidedBy().equals(drugorder3.getVoidedBy()));
  DrugOrder drugorder5=(DrugOrder)orderService.getOrder(drugorder4.getOrderId());
  assertTrue(drugorder5.getDiscontinuedReason().equals("discontinue instruct"));
  assertTrue(drugorder5.getDiscontinuedBy().equals(drugorder1.getDiscontinuedBy()));
  assertTrue(drugorder5.getDiscontinued());
  orderService.undiscontinueOrder(drugorder5);
  orderService.unvoidOrder(drugorder5);
  orderService.deleteOrder(drugorder1);
  assertNull(orderService.getOrder(drugorder1.getOrderId()));
}
