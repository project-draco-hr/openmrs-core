{
  if (saveProviderButton != null) {
    if (provider.getProviderId() != null) {
      if (linkToPerson) {
        provider.setName(null);
      }
 else {
        provider.setPerson(null);
      }
    }
  }
  List<ProviderAttributeType> attributeTypes=(List<ProviderAttributeType>)model.get("providerAttributeTypes");
  WebAttributeUtil.handleSubmittedAttributesForType(provider,errors,ProviderAttribute.class,request,attributeTypes);
  if (Context.isAuthenticated()) {
    ProviderService service=Context.getProviderService();
    String message="Provider.saved";
    if (purgeProviderButton != null) {
      try {
        service.purgeProvider(provider);
        message="Provider.purged";
      }
 catch (      DataIntegrityViolationException e) {
        request.getSession().setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"error.object.inuse.cannot.purge");
        return showForm(provider.getId());
      }
    }
 else {
      new ProviderValidator().validate(provider,errors);
    }
    if (!errors.hasErrors()) {
      if (saveProviderButton != null) {
        service.saveProvider(provider);
      }
 else       if (retireProviderButton != null) {
        service.retireProvider(provider,provider.getRetireReason());
        message="Provider.retired";
      }
 else       if (unretireProviderButton != null) {
        service.unretireProvider(provider);
        message="Provider.unretired";
      }
      request.getSession().setAttribute(WebConstants.OPENMRS_MSG_ATTR,message);
      return "redirect:index.htm";
    }
  }
  return showForm();
}
