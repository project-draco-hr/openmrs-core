{
  String s="";
  AST logic_AST_in=(_t == ASTNULL) ? null : (AST)_t;
  String a, b;
  try {
    AST __t358=_t;
    AST tmp40_AST_in=(AST)_t;
    match(_t,LOGIC);
    _t=_t.getFirstChild();
    System.err.println("\n");
    System.err.println("-------Starting LOGIC--------");
{
      _loop364:       do {
        if (_t == null)         _t=ASTNULL;
switch (_t.getType()) {
case IF:
{
            System.err.println("-----------Starting IF -------");
            a=ifAST(_t,obj);
            _t=_retTree;
{
              if (_t == null)               _t=ASTNULL;
              if ((_tokenSet_1.member(_t.getType()))) {
                System.err.println("-----------Starting CONCLUDE -------");
{
                  if (_t == null)                   _t=ASTNULL;
                  if ((_t.getType() == CONCLUDE)) {
                    concludeAST(_t,obj,a);
                    _t=_retTree;
                  }
 else                   if ((_tokenSet_1.member(_t.getType()))) {
                  }
 else {
                    throw new NoViableAltException(_t);
                  }
                }
                System.err.println("\n");
                System.err.println("-----------End CONCLUDE -------");
              }
 else               if ((_tokenSet_2.member(_t.getType()))) {
                System.err.println("-----------Starting Logic Assignment -------");
                logicAssignmentAST(_t,obj,a);
                _t=_retTree;
                System.err.println("\n");
                System.err.println("-----------End logic assignment -------");
              }
 else {
                throw new NoViableAltException(_t);
              }
            }
            System.err.println("\n");
            System.err.println("-----------End IF -------");
            break;
          }
case ELSE:
case ELSEIF:
case ENDIF:
{
          System.err.println("-----------Starting ELSE - ELSEIF -------");
          a=logic_elseifAST(_t,obj);
          _t=_retTree;
{
            if (_t == null)             _t=ASTNULL;
            if ((_tokenSet_1.member(_t.getType()))) {
              System.err.println("-----------Starting CONCLUDE -------");
{
                if (_t == null)                 _t=ASTNULL;
                if ((_t.getType() == CONCLUDE)) {
                  concludeAST(_t,obj,a);
                  _t=_retTree;
                }
 else                 if ((_tokenSet_1.member(_t.getType()))) {
                }
 else {
                  throw new NoViableAltException(_t);
                }
              }
              System.err.println("\n");
              System.err.println("-----------End CONCLUDE -------");
            }
 else             if ((_tokenSet_2.member(_t.getType()))) {
              System.err.println("-----------Starting Logic Assignment -------");
              logicAssignmentAST(_t,obj,a);
              _t=_retTree;
              System.err.println("\n");
              System.err.println("-----------End logic assignment -------");
            }
 else {
              throw new NoViableAltException(_t);
            }
          }
          System.err.println("\n");
          System.err.println("-----------End ELSE- ELSEIF -------");
          break;
        }
case CONCLUDE:
{
        System.err.println("-----------Starting CONCLUDE -------");
        obj.InitEvaluateList();
        concludeAST(_t,obj,"");
        _t=_retTree;
        System.err.println("\n");
        System.err.println("-----------End CONCLUDE -------");
        break;
      }
default :
{
      break _loop364;
    }
}
}
 while (true);
}
{
AST tmp41_AST_in=(AST)_t;
match(_t,ENDBLOCK);
_t=_t.getNextSibling();
}
System.err.println("\n");
System.err.println("-----------End Action -------");
_t=__t358;
_t=_t.getNextSibling();
}
 catch (RecognitionException ex) {
reportError(ex);
if (_t != null) {
_t=_t.getNextSibling();
}
}
_retTree=_t;
return s;
}
