{
  if (!context.hasPrivilege(OpenmrsConstants.PRIV_ADD_CONCEPTS))   throw new APIAuthenticationException("Privilege required: " + OpenmrsConstants.PRIV_ADD_CONCEPTS);
  if (cp.getState().equals(OpenmrsConstants.CONCEPT_PROPOSAL_REJECT)) {
    rejectConceptProposal(cp);
  }
  if (mappedConcept == null)   throw new APIException("Illegal Mapped Concept");
  if (cp.getState().equals(OpenmrsConstants.CONCEPT_PROPOSAL_CONCEPT) || !StringUtils.hasText(cp.getFinalText())) {
    cp.setState(OpenmrsConstants.CONCEPT_PROPOSAL_CONCEPT);
    cp.setFinalText("");
  }
 else   if (cp.getState().equals(OpenmrsConstants.CONCEPT_PROPOSAL_SYNONYM))   ;
{
    String finalText=cp.getFinalText();
    ConceptSynonym syn=new ConceptSynonym(mappedConcept,finalText,context.getLocale());
    syn.setDateCreated(new Date());
    syn.setCreator(context.getAuthenticatedUser());
    mappedConcept.addSynonym(syn);
    updateConceptWord(mappedConcept);
  }
  cp.setMappedConcept(mappedConcept);
  if (cp.getObsConcept() != null) {
    Obs ob=new Obs();
    ob.setEncounter(cp.getEncounter());
    ob.setConcept(cp.getObsConcept());
    ob.setValueCoded(cp.getMappedConcept());
    ob.setCreator(context.getAuthenticatedUser());
    ob.setDateCreated(cp.getDateCreated());
    ob.setObsDatetime(cp.getEncounter().getEncounterDatetime());
    ob.setLocation(cp.getEncounter().getLocation());
    ob.setPatient(cp.getEncounter().getPatient());
    cp.setObs(ob);
  }
  updateConceptProposal(cp);
}
