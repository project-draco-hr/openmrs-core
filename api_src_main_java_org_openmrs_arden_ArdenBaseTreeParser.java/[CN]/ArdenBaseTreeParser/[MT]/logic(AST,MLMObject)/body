{
  String s="";
  AST logic_AST_in=(_t == ASTNULL) ? null : (AST)_t;
  String a, b;
  Integer i=1;
  try {
{
      _loop435:       do {
        if (_t == null)         _t=ASTNULL;
switch (_t.getType()) {
case IF:
{
            System.err.println("-----------Starting IF -------");
            a=ifAST(_t,obj);
            _t=_retTree;
{
              if (_t == null)               _t=ASTNULL;
switch (_t.getType()) {
case TRUE:
case FALSE:
case NULL:
case INTLIT:
case ID:
case STRING_LITERAL:
case ACTION_OP:
case TERM_LITERAL:
{
                  System.err.println("-----------Starting Logic Assignment -------");
                  logicAssignmentAST(_t,obj,a);
                  _t=_retTree;
                  System.err.println("\n");
                  System.err.println("-----------End logic assignment -------");
                  break;
                }
case IF:
case CONCLUDE:
case ELSE:
case ELSEIF:
case ENDIF:
case CALL:
case ENDBLOCK:
{
                break;
              }
default :
{
              throw new NoViableAltException(_t);
            }
        }
      }
{
        if (_t == null)         _t=ASTNULL;
        if ((_tokenSet_3.member(_t.getType()))) {
          System.err.println("-----------Starting CONCLUDE -------");
{
            if (_t == null)             _t=ASTNULL;
            if ((_t.getType() == CONCLUDE)) {
              concludeAST(_t,obj,a);
              _t=_retTree;
            }
 else             if ((_tokenSet_3.member(_t.getType()))) {
            }
 else {
              throw new NoViableAltException(_t);
            }
          }
          System.err.println("\n");
          System.err.println("-----------End CONCLUDE -------");
        }
 else         if ((_tokenSet_3.member(_t.getType()))) {
        }
 else {
          throw new NoViableAltException(_t);
        }
      }
{
        if (_t == null)         _t=ASTNULL;
        if ((_tokenSet_3.member(_t.getType()))) {
          System.err.println("-----------Starting CALL -------");
{
            if (_t == null)             _t=ASTNULL;
            if ((_t.getType() == CALL)) {
              callSectionAST(_t,obj,a,"logic");
              _t=_retTree;
            }
 else             if ((_tokenSet_3.member(_t.getType()))) {
            }
 else {
              throw new NoViableAltException(_t);
            }
          }
          System.err.println("\n");
          System.err.println("-----------End CALL -------");
        }
 else         if ((_tokenSet_3.member(_t.getType()))) {
        }
 else {
          throw new NoViableAltException(_t);
        }
      }
      System.err.println("\n");
      System.err.println("-----------End IF -------");
      break;
    }
case ELSE:
case ELSEIF:
{
    System.err.println("-----------Starting ELSE - ELSEIF -------");
    a=logic_elseifAST(_t,obj,i);
    _t=_retTree;
{
      if (_t == null)       _t=ASTNULL;
switch (_t.getType()) {
case TRUE:
case FALSE:
case NULL:
case INTLIT:
case ID:
case STRING_LITERAL:
case ACTION_OP:
case TERM_LITERAL:
{
          System.err.println("-----------Starting Logic Assignment -------");
          logicAssignmentAST(_t,obj,a);
          _t=_retTree;
          System.err.println("\n");
          System.err.println("-----------End logic assignment -------");
          break;
        }
case IF:
case CONCLUDE:
case ELSE:
case ELSEIF:
case ENDIF:
case CALL:
case ENDBLOCK:
{
        break;
      }
default :
{
      throw new NoViableAltException(_t);
    }
}
}
{
if (_t == null) _t=ASTNULL;
if ((_tokenSet_3.member(_t.getType()))) {
  System.err.println("-----------Starting CONCLUDE -------");
{
    if (_t == null)     _t=ASTNULL;
    if ((_t.getType() == CONCLUDE)) {
      concludeAST(_t,obj,a);
      _t=_retTree;
    }
 else     if ((_tokenSet_3.member(_t.getType()))) {
    }
 else {
      throw new NoViableAltException(_t);
    }
  }
  System.err.println("\n");
  System.err.println("-----------End CONCLUDE -------");
}
 else if ((_tokenSet_3.member(_t.getType()))) {
}
 else {
  throw new NoViableAltException(_t);
}
}
{
if (_t == null) _t=ASTNULL;
if ((_tokenSet_3.member(_t.getType()))) {
  System.err.println("-----------Starting CALL -------");
{
    if (_t == null)     _t=ASTNULL;
    if ((_t.getType() == CALL)) {
      callSectionAST(_t,obj,a,"logic");
      _t=_retTree;
    }
 else     if ((_tokenSet_3.member(_t.getType()))) {
    }
 else {
      throw new NoViableAltException(_t);
    }
  }
  System.err.println("\n");
  System.err.println("-----------End CALL -------");
}
 else if ((_tokenSet_3.member(_t.getType()))) {
}
 else {
  throw new NoViableAltException(_t);
}
}
System.err.println("\n");
System.err.println("-----------End ELSE- ELSEIF -------");
break;
}
case ENDIF:
{
AST __t434=_t;
AST tmp67_AST_in=(AST)_t;
match(_t,ENDIF);
_t=_t.getFirstChild();
System.err.println("ENDIF FOUND");
a="ENDIF";
obj.AddToEvaluateList("logic",a);
_t=__t434;
_t=_t.getNextSibling();
break;
}
case CONCLUDE:
{
System.err.println("-----------Starting CONCLUDE -------");
obj.InitEvaluateList("logic",null);
a="Conclude_" + Integer.toString(i);
concludeAST(_t,obj,a);
_t=_retTree;
System.err.println("\n");
System.err.println("-----------End CONCLUDE -------");
break;
}
case CALL:
{
System.err.println("-----------Starting CALL -------");
obj.InitEvaluateList("logic",null);
a="";
callSectionAST(_t,obj,a,"logic");
_t=_retTree;
System.err.println("\n");
System.err.println("-----------End CALL -------");
i++;
break;
}
default :
{
break _loop435;
}
}
}
 while (true);
}
{
AST tmp68_AST_in=(AST)_t;
match(_t,ENDBLOCK);
_t=_t.getNextSibling();
}
System.err.println("\n");
System.err.println("-----------End LOGIC -------");
}
 catch (RecognitionException ex) {
reportError(ex);
if (_t != null) {
_t=_t.getNextSibling();
}
}
_retTree=_t;
return s;
}
