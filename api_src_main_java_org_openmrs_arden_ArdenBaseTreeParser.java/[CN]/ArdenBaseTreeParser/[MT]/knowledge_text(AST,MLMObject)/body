{
  String s="";
  AST knowledge_text_AST_in=(_t == ASTNULL) ? null : (AST)_t;
  String a="", b="";
  try {
{
      AST __t552=_t;
      AST tmp131_AST_in=(AST)_t;
      match(_t,KNOWLEDGE);
      _t=_t.getFirstChild();
{
        _loop561:         do {
          if (_t == null)           _t=ASTNULL;
          if (((_t.getType() >= AND && _t.getType() <= TERM_LITERAL))) {
{
              if (_t == null)               _t=ASTNULL;
              if ((_t.getType() == DATA)) {
                AST __t555=_t;
                AST tmp132_AST_in=(AST)_t;
                match(_t,DATA);
                _t=_t.getFirstChild();
                AST tmp133_AST_in=(AST)_t;
                match(_t,COLON);
                _t=_t.getNextSibling();
                b=textAST(_t,obj);
                _t=_retTree;
                obj.setData(b);
                s+=b;
                s+="\n";
                _t=__t555;
                _t=_t.getNextSibling();
              }
 else               if ((_t.getType() == PRIORITY)) {
                AST __t556=_t;
                AST tmp134_AST_in=(AST)_t;
                match(_t,PRIORITY);
                _t=_t.getFirstChild();
                AST tmp135_AST_in=(AST)_t;
                match(_t,COLON);
                _t=_t.getNextSibling();
                b=doubleAST(_t,obj);
                _t=_retTree;
                obj.setPriority(b);
                s+=b;
                s+="\n";
                _t=__t556;
                _t=_t.getNextSibling();
              }
 else               if ((_t.getType() == LOGIC)) {
                AST __t557=_t;
                AST tmp136_AST_in=(AST)_t;
                match(_t,LOGIC);
                _t=_t.getFirstChild();
                AST tmp137_AST_in=(AST)_t;
                match(_t,COLON);
                _t=_t.getNextSibling();
                b=textAST(_t,obj);
                _t=_retTree;
                obj.setLogic(b);
                s+=b;
                s+="\n";
                _t=__t557;
                _t=_t.getNextSibling();
              }
 else               if ((_t.getType() == ACTION)) {
                AST __t558=_t;
                AST tmp138_AST_in=(AST)_t;
                match(_t,ACTION);
                _t=_t.getFirstChild();
                AST tmp139_AST_in=(AST)_t;
                match(_t,COLON);
                _t=_t.getNextSibling();
                b=textAST(_t,obj);
                _t=_retTree;
                obj.setAction(b);
                s+=b;
                s+="\n";
                _t=__t558;
                _t=_t.getNextSibling();
              }
 else               if ((_t.getType() == AGE_MIN)) {
                AST __t559=_t;
                AST tmp140_AST_in=(AST)_t;
                match(_t,AGE_MIN);
                _t=_t.getFirstChild();
                AST tmp141_AST_in=(AST)_t;
                match(_t,COLON);
                _t=_t.getNextSibling();
                b=doubleAST(_t,obj);
                _t=_retTree;
                obj.setAgeMin(b);
                s+=b;
                s+="\n";
                _t=__t559;
                _t=_t.getNextSibling();
              }
 else               if ((_t.getType() == AGE_MAX)) {
                AST __t560=_t;
                AST tmp142_AST_in=(AST)_t;
                match(_t,AGE_MAX);
                _t=_t.getFirstChild();
                AST tmp143_AST_in=(AST)_t;
                match(_t,COLON);
                _t=_t.getNextSibling();
                b=doubleAST(_t,obj);
                _t=_retTree;
                obj.setAgeMax(b);
                s+=b;
                s+="\n";
                _t=__t560;
                _t=_t.getNextSibling();
              }
 else               if (((_t.getType() >= AND && _t.getType() <= TERM_LITERAL))) {
                a=textAST(_t,obj);
                _t=_retTree;
                s+=a;
                AST tmp144_AST_in=(AST)_t;
                match(_t,ENDBLOCK);
                _t=_t.getNextSibling();
                s+="\n";
              }
 else {
                throw new NoViableAltException(_t);
              }
            }
          }
 else {
            break _loop561;
          }
        }
 while (true);
      }
      _t=__t552;
      _t=_t.getNextSibling();
    }
  }
 catch (  RecognitionException ex) {
    reportError(ex);
    if (_t != null) {
      _t=_t.getNextSibling();
    }
  }
  _retTree=_t;
  return s;
}
