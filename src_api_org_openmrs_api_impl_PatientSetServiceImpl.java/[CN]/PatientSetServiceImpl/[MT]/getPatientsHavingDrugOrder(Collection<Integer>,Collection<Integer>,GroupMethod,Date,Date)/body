{
  Map<Integer,Collection<Integer>> activeDrugs=getPatientSetDAO().getActiveDrugIds(patientIds,fromDate,toDate);
  Set<Integer> ret=new HashSet<Integer>();
  if (drugIds == null)   drugIds=new ArrayList();
  if (drugIds.size() == 0) {
    if (groupMethod == GroupMethod.NONE) {
      if (patientIds == null) {
        patientIds=getAllPatients().getMemberIds();
      }
      patientIds.removeAll(activeDrugs.keySet());
      ret.addAll(patientIds);
    }
 else {
      ret.addAll(activeDrugs.keySet());
    }
  }
 else {
    if (groupMethod == GroupMethod.NONE) {
      ret.addAll(patientIds);
      ret.removeAll(activeDrugs.keySet());
      for (      Map.Entry<Integer,Collection<Integer>> e : activeDrugs.entrySet())       if (!OpenmrsUtil.containsAny(e.getValue(),drugIds))       ret.add(e.getKey());
    }
 else     if (groupMethod == GroupMethod.ALL) {
      for (      Map.Entry<Integer,Collection<Integer>> e : activeDrugs.entrySet())       if (e.getValue().containsAll(drugIds))       ret.add(e.getKey());
    }
 else {
      for (      Map.Entry<Integer,Collection<Integer>> e : activeDrugs.entrySet())       if (OpenmrsUtil.containsAny(e.getValue(),drugIds))       ret.add(e.getKey());
    }
  }
  Cohort ps=new Cohort(ret);
  return ps;
}
