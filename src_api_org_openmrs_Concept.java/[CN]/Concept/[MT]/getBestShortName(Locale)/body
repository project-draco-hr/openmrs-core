{
  if (names == null || names.size() == 0) {
    if (log.isDebugEnabled())     log.debug("there are no names defined for: " + conceptId);
    return null;
  }
  if (log.isDebugEnabled())   log.debug("Getting short conceptName for locale: " + locale);
  ConceptName bestMatch=null;
  if (locale == null)   locale=Context.getLocale();
  ConceptNameTag desiredLanguageTag=ConceptNameTag.shortLanguageTagFor(locale);
  ConceptNameTag desiredCountryTag=ConceptNameTag.shortCountryTagFor(locale);
  List<ConceptName> compatibleNames=getCompatibleNames(locale);
  if (compatibleNames.size() == 0) {
    Iterator<ConceptName> nameIt=names.iterator();
    bestMatch=nameIt.next();
  }
 else   if (compatibleNames.size() == 1) {
    bestMatch=compatibleNames.get(0);
  }
 else {
    for (    ConceptName possibleName : getCompatibleNames(locale)) {
      if (desiredCountryTag != null) {
        if (possibleName.hasTag(desiredCountryTag)) {
          bestMatch=possibleName;
          break;
        }
 else         if (possibleName.hasTag(desiredLanguageTag)) {
          bestMatch=possibleName;
        }
 else         if (possibleName.isShort()) {
          bestMatch=possibleName;
        }
 else         if (bestMatch == null) {
          bestMatch=possibleName;
        }
      }
 else {
        if (possibleName.hasTag(desiredLanguageTag)) {
          bestMatch=possibleName;
          break;
        }
 else         if (bestMatch.isShort()) {
          bestMatch=possibleName;
        }
 else         if (bestMatch == null) {
          bestMatch=possibleName;
        }
      }
    }
  }
  if (bestMatch == null) {
    log.warn("No compatible concept name found for default locale for concept id " + conceptId);
  }
  return bestMatch;
}
