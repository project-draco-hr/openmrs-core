{
  SessionFactory sessionFactory=(SessionFactory)applicationContext.getBean("sessionFactory");
  Session session=sessionFactory.getCurrentSession();
class TestClass extends BaseOpenmrsObject {
    private Integer id;
    TestClass(){
    }
    public Integer getId(){
      return id;
    }
    public void setId(    Integer id){
      this.id=id;
    }
    public int hashCode(){
      if (getUuid() == null) {
        return super.hashCode();
      }
      return getUuid().hashCode();
    }
    public boolean equals(    Object obj){
      if (this == obj) {
        return true;
      }
      if (!(obj instanceof TestClass)) {
        return false;
      }
      TestClass other=(TestClass)obj;
      if (getUuid() == null) {
        return false;
      }
      return getUuid().equals(other.getUuid());
    }
    public String toString(){
      return new org.apache.commons.lang3.builder.ToStringBuilder(this,org.apache.commons.lang3.builder.ToStringStyle.SHORT_PREFIX_STYLE).append("hashCode",Integer.toHexString(hashCode())).append("uuid",getUuid()).build();
    }
  }
  Patient patient=(Patient)session.get(Patient.class,2);
  String uid=patient.getUuid();
  TestClass obj=new TestClass();
  obj.setUuid(uid);
  Assert.assertFalse(obj.equals((session.load(Patient.class,2))));
  Assert.assertFalse((session.load(Patient.class,2)).equals(obj));
}
