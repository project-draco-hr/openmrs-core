{
class TestClass extends BaseOpenmrsObject {
    private Integer id;
    TestClass(){
    }
    public Integer getId(){
      return id;
    }
    public void setId(    Integer id){
      this.id=id;
    }
    public int hashCode(){
      if (getUuid() == null) {
        return super.hashCode();
      }
      return getUuid().hashCode();
    }
    public boolean equals(    Object obj){
      if (this == obj) {
        return true;
      }
      if (!(obj instanceof TestClass)) {
        return false;
      }
      TestClass other=(TestClass)obj;
      if (getUuid() == null) {
        return false;
      }
 else {
        return getUuid().equals(other.getUuid());
      }
    }
    public String toString(){
      return new org.apache.commons.lang3.builder.ToStringBuilder(this,org.apache.commons.lang3.builder.ToStringStyle.SHORT_PREFIX_STYLE).append("hashCode",Integer.toHexString(hashCode())).append("uuid",getUuid()).build();
    }
  }
class AnotherTestClass extends BaseOpenmrsObject {
    private int id;
    public boolean equals(    Object obj){
      if (this == obj) {
        return true;
      }
      if (!(obj instanceof AnotherTestClass)) {
        return false;
      }
      AnotherTestClass other=(AnotherTestClass)obj;
      if (getUuid() == null) {
        return false;
      }
      return getUuid().equals(other.getUuid());
    }
    public Integer getId(){
      return id;
    }
    public void setId(    Integer id){
      this.id=id;
    }
  }
  TestClass testObj=new TestClass();
  String uuid=testObj.getUuid();
  TestClass testObjsameuuid=new TestClass();
  testObjsameuuid.setUuid(uuid);
  AnotherTestClass anotherTestObj=new AnotherTestClass();
  anotherTestObj.setUuid(uuid);
  AnotherTestClass anotherTestObjectsameUuid=new AnotherTestClass();
  anotherTestObjectsameUuid.setUuid(uuid);
  Assert.assertFalse(anotherTestObj.equals(testObj));
  Assert.assertFalse(testObj.equals(anotherTestObj));
  Assert.assertTrue(testObj.equals(testObjsameuuid));
  Assert.assertTrue(anotherTestObj.equals(anotherTestObjectsameUuid));
  Assert.assertTrue(testObjsameuuid.equals(testObj));
  Assert.assertTrue(anotherTestObjectsameUuid.equals(anotherTestObj));
}
