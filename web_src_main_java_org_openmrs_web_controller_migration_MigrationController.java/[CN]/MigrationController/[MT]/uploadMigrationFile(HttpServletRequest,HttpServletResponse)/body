{
  String filename=request.getParameter("filename");
  if (filename == null || filename.length() == 0)   throw new IllegalArgumentException("Must specify a 'filename' parameter");
  boolean autoCreateUsers=false;
  boolean autoAddRole=false;
  try {
    autoCreateUsers=request.getParameter("auto_create_users").toLowerCase().startsWith("t");
  }
 catch (  Exception ex) {
  }
  try {
    autoAddRole=request.getParameter("add_role_when_creating_users").toLowerCase().startsWith("t");
  }
 catch (  Exception ex) {
  }
  List<String> relationships=new ArrayList<String>();
  List<String> programWorkflow=new ArrayList<String>();
  BufferedReader r=new BufferedReader(new FileReader(filename));
  while (true) {
    String s=r.readLine();
    if (s == null)     break;
    s=s.trim();
    if (s.length() == 0)     continue;
    if (s.startsWith("RELATIONSHIP:")) {
      relationships.add(s);
    }
 else     if (s.startsWith("ENROLLMENT:") || s.startsWith("STATUS:")) {
      programWorkflow.add(s);
    }
 else {
      throw new IllegalArgumentException("Don't know how to handle '" + s + "'");
    }
  }
  int numRels=MigrationHelper.importRelationships(relationships,autoCreateUsers,autoAddRole);
  String message="";
  message+="Uploaded " + numRels + " relationships<br/>";
  int numProgram=MigrationHelper.importProgramsAndStatuses(programWorkflow);
  message+="Uploaded " + numProgram + " programs and statuses<br/>";
  return new ModelAndView(new RedirectView("migration.form?message=" + URLEncoder.encode(message,"UTF-8")));
}
