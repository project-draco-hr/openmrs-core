{
  log.debug("Transforming form entry queue");
  String formData=formEntryQueue.getFormData();
  FormService formService=context.getFormService();
  Integer formId=null;
  String errorDetails=null;
  try {
    DocumentBuilderFactory dbf=getDocumentBuilderFactory();
    DocumentBuilder db=dbf.newDocumentBuilder();
    XPathFactory xpf=getXPathFactory();
    XPath xp=xpf.newXPath();
    Document doc=db.parse(IOUtils.toInputStream(formData));
    formId=Integer.parseInt(xp.evaluate("/form/@id",doc));
  }
 catch (  Exception e) {
    errorDetails=e.getMessage();
    log.error(e);
  }
  if (formId == null) {
    setFatalError(formEntryQueue,"Error retrieving form ID from data",errorDetails);
    return;
  }
  String xsltDoc=formService.getForm(formId).getXslt();
  StringWriter outWriter=new StringWriter();
  Source source=new StreamSource(IOUtils.toInputStream(formData));
  Source xslt=new StreamSource(IOUtils.toInputStream(xsltDoc));
  Result result=new StreamResult(outWriter);
  TransformerFactory tf=getTransformerFactory();
  String out=null;
  errorDetails=null;
  try {
    Transformer t=tf.newTransformer(xslt);
    t.transform(source,result);
    out=outWriter.toString();
  }
 catch (  TransformerConfigurationException e) {
    errorDetails=e.getMessage();
    log.error(e);
  }
catch (  TransformerException e) {
    errorDetails=e.getMessage();
    log.error(e);
  }
  if (out == null) {
    setFatalError(formEntryQueue,"Unable to transform to HL7",errorDetails);
    return;
  }
  HL7InQueue hl7InQueue=new HL7InQueue();
  hl7InQueue.setHL7Data(out.toString());
  hl7InQueue.setHL7Source(context.getHL7Service().getHL7Source(1));
  hl7InQueue.setHL7SourceKey(String.valueOf(formEntryQueue.getFormEntryQueueId()));
  context.getHL7Service().createHL7InQueue(hl7InQueue);
  FormEntryArchive formEntryArchive=new FormEntryArchive(formEntryQueue);
  context.getFormEntryService().createFormEntryArchive(formEntryArchive);
  context.getFormEntryService().deleteFormEntryQueue(formEntryQueue);
  context.getFormEntryService().garbageCollect();
}
