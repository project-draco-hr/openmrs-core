{
  executeDataSet(INITIAL_OBS_XML);
  EncounterService es=Context.getEncounterService();
  LocationService locationService=Context.getLocationService();
  ObsService obsService=Context.getObsService();
  ConceptService conceptService=Context.getConceptService();
  Obs o=new Obs();
  Order order1=null;
  Concept concept1=conceptService.getConcept(1);
  Patient patient1=new Patient(2);
  Encounter encounter1=(Encounter)es.getEncounter(1);
  Date datetime1=new Date();
  Location location1=locationService.getLocation(1);
  Integer groupId1=new Integer(1);
  Integer valueGroupId1=new Integer(5);
  Date valueDatetime1=new Date();
  Concept valueCoded1=conceptService.getConcept(2);
  Double valueNumeric1=1.0;
  String valueModifier1="a1";
  String valueText1="value text1";
  String comment1="commenting1";
  o.setOrder(order1);
  o.setConcept(concept1);
  o.setPerson(patient1);
  o.setEncounter(encounter1);
  o.setObsDatetime(datetime1);
  o.setLocation(location1);
  o.setValueGroupId(valueGroupId1);
  o.setValueDatetime(valueDatetime1);
  o.setValueCoded(valueCoded1);
  o.setValueNumeric(valueNumeric1);
  o.setValueModifier(valueModifier1);
  o.setValueText(valueText1);
  o.setComment(comment1);
  Obs oSaved=obsService.saveObs(o,null);
  assertTrue(oSaved.getObsId().equals(o.getObsId()));
  assertNotNull(o.getDateCreated());
  assertNotNull(o.getCreator());
  Obs o1ToUpdate=obsService.getObs(o.getObsId());
  assertNotNull(o1ToUpdate);
  Order order2=null;
  Concept concept2=conceptService.getConcept(2);
  Patient patient2=new Patient(1);
  System.out.println("patient2: " + patient2.getPatientId());
  Encounter encounter2=(Encounter)es.getEncounter(2);
  Date datetime2=new Date();
  Location location2=locationService.getLocation(1);
  Integer valueGroupId2=new Integer(3);
  Date valueDatetime2=new Date();
  Concept valueCoded2=conceptService.getConcept(2);
  Double valueNumeric2=2.0;
  String valueModifier2="cc";
  String valueText2="value text2";
  String comment2="commenting2";
  o1ToUpdate.setOrder(order2);
  o1ToUpdate.setConcept(concept2);
  o1ToUpdate.setPerson(patient2);
  o1ToUpdate.setEncounter(encounter2);
  o1ToUpdate.setObsDatetime(datetime2);
  o1ToUpdate.setLocation(location2);
  o1ToUpdate.setValueGroupId(valueGroupId2);
  o1ToUpdate.setValueDatetime(valueDatetime2);
  o1ToUpdate.setValueCoded(valueCoded2);
  o1ToUpdate.setValueNumeric(valueNumeric2);
  o1ToUpdate.setValueModifier(valueModifier2);
  o1ToUpdate.setValueText(valueText2);
  o1ToUpdate.setComment(comment2);
  Obs o1ToUpdateSaved=obsService.saveObs(o1ToUpdate,"Updating o1 with all new values");
  assertFalse(o1ToUpdateSaved.getObsId().equals(o1ToUpdate.getObsId()));
  assertTrue(o1ToUpdateSaved.getValueNumeric().equals(valueNumeric2));
  Obs o3=obsService.getObs(o1ToUpdateSaved.getObsId());
  System.out.println("o3.isComplex? " + o3.isComplexObs());
  assertTrue(o1ToUpdateSaved.equals(o3));
  assertFalse(o1ToUpdateSaved.equals(o));
  assertFalse(o3.equals(o));
  if (order2 != null)   assertTrue(o3.getOrder().equals(order2));
  assertTrue(o3.getPerson().equals(patient2));
  assertTrue(o3.getComment().equals(comment2));
  assertTrue(o3.getConcept().equals(concept2));
  assertTrue(o3.getEncounter().equals(encounter2));
  assertTrue(o3.getObsDatetime().equals(datetime2));
  assertTrue(o3.getLocation().equals(location2));
  assertTrue(o3.getValueGroupId().equals(valueGroupId2));
  assertTrue(o3.getValueDatetime().equals(valueDatetime2));
  assertTrue(o3.getValueCoded().equals(valueCoded2));
  assertTrue(o3.getValueNumeric().equals(valueNumeric2));
  assertTrue(o3.getValueModifier().equals(valueModifier2));
  assertTrue(o3.getValueText().equals(valueText2));
  obsService.voidObs(o3,"testing void function");
  Obs o4=obsService.getObs(o3.getObsId());
  assertTrue(o4.getVoidReason().equals("testing void function"));
  assertTrue(o4.getVoidedBy().equals(o3.getVoidedBy()));
  assertTrue(o4.isVoided());
}
