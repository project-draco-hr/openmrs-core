{
  PatientState lastState=getCurrentState(programWorkflowState.getProgramWorkflow());
  if (lastState != null && onDate == null) {
    throw new IllegalArgumentException("You can't change from a non-null state without giving a change date");
  }
  if (lastState != null && lastState.getEndDate() != null) {
    throw new IllegalArgumentException("You can't change out of a state that has an end date already");
  }
  if (lastState != null && lastState.getStartDate() != null && OpenmrsUtil.compare(lastState.getStartDate(),onDate) > 0) {
    throw new IllegalArgumentException("You can't change out of a state before that state started");
  }
  if (lastState != null && !programWorkflowState.getProgramWorkflow().isLegalTransition(lastState.getState(),programWorkflowState)) {
    throw new IllegalArgumentException("You can't change from state " + lastState.getState() + " to "+ programWorkflowState);
  }
  if (lastState != null) {
    lastState.setEndDate(onDate);
  }
  PatientState newState=new PatientState();
  newState.setPatientProgram(this);
  newState.setState(programWorkflowState);
  newState.setStartDate(onDate);
  getStates().add(newState);
}
