{
  HttpSession httpSession=request.getSession();
  Context context=(Context)httpSession.getAttribute(WebConstants.OPENMRS_CONTEXT_HTTPSESSION_ATTR);
  Alert alert=(Alert)obj;
  context.addProxyPrivilege(OpenmrsConstants.PRIV_VIEW_USERS);
  try {
    UserService us=context.getUserService();
    if (context != null && context.isAuthenticated()) {
      String[] userIdValues=request.getParameter("userIds").split(" ");
      List<Integer> userIds=new Vector<Integer>();
      String[] roleValues=request.getParameter("newRoles").split(",");
      List<String> roles=new Vector<String>();
      if (userIdValues != null)       for (      String userId : userIdValues) {
        if (!userId.trim().equals(""))         userIds.add(Integer.valueOf(userId.trim()));
      }
      if (roleValues != null)       for (      String role : roleValues) {
        if (!role.trim().equals(""))         roles.add(role.trim());
      }
      List<AlertRecipient> recipientsToRemove=new Vector<AlertRecipient>();
      if (alert.getRecipients() != null) {
        for (        AlertRecipient recipient : alert.getRecipients()) {
          Integer userId=recipient.getRecipient().getUserId();
          if (!userIds.contains(userId))           recipientsToRemove.add(recipient);
        }
      }
      for (      AlertRecipient ar : recipientsToRemove)       alert.removeRecipient(ar);
      if (userIds != null) {
        for (        Integer userId : userIds) {
          alert.addRecipient(us.getUser(userId));
        }
      }
      if (roles != null) {
        for (        String roleStr : roles) {
          Role role=us.getRole(roleStr);
          List<User> users=us.getUsersByRole(role);
          for (          User user : users)           alert.addRecipient(user);
        }
      }
    }
    if (alert.getRecipients() == null || alert.getRecipients().size() == 0) {
      errors.rejectValue("user","Alert.recipientRequired");
    }
  }
 catch (  Exception e) {
    log.error(e);
    errors.reject(e.getMessage());
  }
 finally {
    context.removeProxyPrivilege(OpenmrsConstants.PRIV_VIEW_USERS);
  }
  return super.processFormSubmission(request,reponse,alert,errors);
}
