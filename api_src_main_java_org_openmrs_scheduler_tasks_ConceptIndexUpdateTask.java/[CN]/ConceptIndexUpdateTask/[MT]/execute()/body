{
  if (!isExecuting) {
    isExecuting=true;
    shouldExecute=true;
    AdministrationService as=Context.getAdministrationService();
    ConceptService cs=Context.getConceptService();
    GlobalProperty gp=as.getGlobalPropertyObject(OpenmrsConstants.GP_CONCEPT_INDEX_UPDATE_TASK_LAST_UPDATED_CONCEPT);
    if (gp == null)     gp=new GlobalProperty(OpenmrsConstants.GP_CONCEPT_INDEX_UPDATE_TASK_LAST_UPDATED_CONCEPT);
    if (log.isDebugEnabled())     log.debug("Updating concept words ... ");
    try {
      Concept currentConcept=null;
      try {
        currentConcept=cs.getConcept(Integer.valueOf(gp.getPropertyValue()));
      }
 catch (      NumberFormatException e) {
      }
      if (currentConcept == null)       currentConcept=new Concept(0);
      currentConcept=cs.getNextConcept(currentConcept);
      int counter=0;
      while (currentConcept != null && shouldExecute) {
        if (log.isDebugEnabled())         log.debug("updateConceptWords() : current concept: " + currentConcept);
        cs.updateConceptIndex(currentConcept);
        if (counter++ > 25) {
          gp.setPropertyValue(currentConcept.getConceptId().toString());
          as.saveGlobalProperty(gp);
          Context.flushSession();
          Context.clearSession();
          counter=0;
        }
        currentConcept=cs.getNextConcept(currentConcept);
      }
      if (currentConcept == null)       as.purgeGlobalProperty(gp);
    }
 catch (    APIException e) {
      log.error("ConceptWordUpdateTask failed, because:",e);
      throw e;
    }
 finally {
      isExecuting=false;
      shouldExecute=false;
      SchedulerService ss=Context.getSchedulerService();
      TaskDefinition conceptWordUpdateTaskDef=ss.getTaskByName(ConceptServiceImpl.CONCEPT_WORD_UPDATE_TASK_NAME);
      conceptWordUpdateTaskDef.setStarted(false);
      if (conceptWordUpdateTaskDef.getStartOnStartup())       conceptWordUpdateTaskDef.setStartOnStartup(false);
      ss.saveTask(conceptWordUpdateTaskDef);
      log.debug("Task set to stopped.");
    }
  }
}
