{
  AdministrationService as=Context.getAdministrationService();
  String key=module.getModuleId() + ".database_version";
  GlobalProperty gp=as.getGlobalPropertyObject(key);
  boolean executeSQL=false;
  if (gp != null && StringUtils.hasLength(gp.getPropertyValue())) {
    String currentDbVersion=gp.getPropertyValue();
    if (log.isDebugEnabled()) {
      log.debug("version:column " + version + ":"+ currentDbVersion);
      log.debug("compare: " + ModuleUtil.compareVersion(version,currentDbVersion));
    }
    if (ModuleUtil.compareVersion(version,currentDbVersion) > 0)     executeSQL=true;
  }
 else {
    executeSQL=true;
  }
  if (executeSQL) {
    log.debug("Executing sql: " + sql);
    String[] sqlStatements=sql.split(";");
    for (    String sqlStatement : sqlStatements) {
      if (sqlStatement.trim().length() > 0)       as.executeSQL(sqlStatement,false);
    }
    try {
      Context.addProxyPrivilege(OpenmrsConstants.PRIV_MANAGE_GLOBAL_PROPERTIES);
      String description="DO NOT MODIFY.  Current database version number for the " + module.getModuleId() + " module.";
      if (gp == null) {
        log.info("Global property " + key + " was not found. Creating one now.");
        gp=new GlobalProperty(key,version,description);
        as.saveGlobalProperty(gp);
      }
 else       if (gp.getPropertyValue().equals(version) == false) {
        log.info("Updating global property " + key + " to version: "+ version);
        gp.setDescription(description);
        gp.setPropertyValue(version);
        as.saveGlobalProperty(gp);
      }
 else {
        log.error("Should not be here. GP property value and sqldiff version should not be equal");
      }
    }
  finally {
      Context.removeProxyPrivilege(OpenmrsConstants.PRIV_MANAGE_GLOBAL_PROPERTIES);
    }
  }
}
