{
  if (getLoadedModules().size() > 0) {
    Context.addProxyPrivilege("");
    AdministrationService as=Context.getAdministrationService();
    List<Module> leftoverModules=new Vector<Module>();
    for (    Module mod : getLoadedModules()) {
      String key=mod.getModuleId() + ".started";
      String prop=as.getGlobalProperty(key,"false");
      if (prop.equals("true")) {
        if (requiredModulesStarted(mod))         try {
          log.debug("starting module: " + mod.getModuleId());
          startModule(mod);
        }
 catch (        Exception e) {
          log.error("Error while starting module: " + mod.getName(),e);
          mod.setStartupErrorMessage("Error while starting module: " + e.getMessage());
        }
 else {
          log.debug("cannot start because required modules are not started: " + mod.getModuleId());
          leftoverModules.add(mod);
        }
      }
    }
    Context.removeProxyPrivilege("");
    boolean atLeastOneModuleLoaded=true;
    while (leftoverModules.size() > 0 && atLeastOneModuleLoaded) {
      log.debug("Trying to start leftover modules: " + leftoverModules);
      atLeastOneModuleLoaded=false;
      List<Module> modulesJustLoaded=new Vector<Module>();
      for (      Module leftoverModule : leftoverModules) {
        if (requiredModulesStarted(leftoverModule)) {
          log.debug("starting leftover module: " + leftoverModule.getModuleId());
          try {
            startModule(leftoverModule);
            atLeastOneModuleLoaded=true;
            modulesJustLoaded.add(leftoverModule);
          }
 catch (          Exception e) {
            log.error("Error while starting leftover module: " + leftoverModule.getName(),e);
          }
        }
 else {
          log.debug("cannot start leftover module because required modules are not started: " + leftoverModule.getModuleId());
        }
      }
      leftoverModules.removeAll(modulesJustLoaded);
    }
    if (leftoverModules.size() > 0)     for (    Module leftoverModule : leftoverModules) {
      String message="Unable to start module '" + leftoverModule.getName() + "'.  All required modules are not available: "+ OpenmrsUtil.join(leftoverModule.getRequiredModules(),", ");
      log.error(message);
      leftoverModule.setStartupErrorMessage(message);
    }
  }
}
