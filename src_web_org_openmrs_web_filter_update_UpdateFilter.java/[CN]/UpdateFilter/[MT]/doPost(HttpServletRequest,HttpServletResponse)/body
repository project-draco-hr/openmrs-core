{
  String page=httpRequest.getParameter("page");
  Map<String,Object> referenceMap=new HashMap<String,Object>();
  Writer writer=httpResponse.getWriter();
  if (DEFAULT_PAGE.equals(page)) {
    String username=httpRequest.getParameter("username");
    String password=httpRequest.getParameter("password");
    log.debug("Attempting to authenticate user: " + username);
    if (authenticateAsSuperUser(username,password)) {
      log.debug("Authentication successful.  Redirecting to 'reviewupdates' page.");
      authenticatedSuccessfully=true;
      renderTemplate(REVIEW_CHANGES,referenceMap,writer);
      return;
    }
 else {
      try {
        log.debug("Sleeping for 3 seconds because of a bad username/password");
        Thread.sleep(3000);
      }
 catch (      InterruptedException e) {
        log.error("Unable to sleep",e);
        throw new ServletException("Got interrupted while trying to sleep thread",e);
      }
      errors.add("Unable to authenticate as a " + OpenmrsConstants.SUPERUSER_ROLE + ". Invalid username or password");
      renderTemplate(DEFAULT_PAGE,referenceMap,writer);
      return;
    }
  }
 else   if (REVIEW_CHANGES.equals(page)) {
    if (!authenticatedSuccessfully) {
      renderTemplate(DEFAULT_PAGE,referenceMap,writer);
    }
    try {
      DatabaseUpdater.executeChangelog();
    }
 catch (    InputRequiredException inputRequired) {
      log.error("Not implemented",inputRequired);
      errors.add("Input during database updates is not yet implemented. " + inputRequired.getMessage());
      model.updateChanges();
      renderTemplate(REVIEW_CHANGES,referenceMap,writer);
      return;
    }
catch (    DatabaseUpdateException e) {
      log.error("Unable to update the database",e);
      errors.add("Unable to update the database.  See server error logs for the full stacktrace.");
      errors.addAll(Arrays.asList(e.getMessage().split("\n")));
      model.updateChanges();
      renderTemplate(REVIEW_CHANGES,referenceMap,writer);
      return;
    }
  }
  try {
    startOpenmrs(filterConfig.getServletContext());
  }
 catch (  Throwable t) {
    log.error("Unable to complete the startup.",t);
    errors.add("Unable to complete the startup.  See the server error log for the complete stacktrace." + t.getMessage());
    renderTemplate(DEFAULT_PAGE,null,writer);
    return;
  }
  updatesRequired=false;
  httpResponse.sendRedirect("/" + WebConstants.WEBAPP_NAME);
}
