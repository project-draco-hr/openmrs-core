{
  if (patient == null) {
    throw new APIException("Patient.null",(Object[])null);
  }
  if (deathDate == null) {
    throw new APIException("Patient.death.date.null",(Object[])null);
  }
  if (cause == null) {
    throw new APIException("Patient.cause.null",(Object[])null);
  }
  if (!patient.getDead()) {
    patient.setDead(true);
    patient.setDeathDate(deathDate);
    patient.setCauseOfDeath(cause);
  }
  log.debug("Patient is dead, so let's make sure there's an Obs for it");
  String codProp=Context.getAdministrationService().getGlobalProperty("concept.causeOfDeath");
  Concept causeOfDeath=Context.getConceptService().getConcept(codProp);
  if (causeOfDeath != null) {
    List<Obs> obssDeath=Context.getObsService().getObservationsByPersonAndConcept(patient,causeOfDeath);
    if (obssDeath != null) {
      if (obssDeath.size() > 1) {
        log.error("Multiple causes of death (" + obssDeath.size() + ")?  Shouldn't be...");
      }
 else {
        Obs obsDeath=null;
        if (obssDeath.size() == 1) {
          log.debug("Already has a cause of death, so changing it");
          obsDeath=obssDeath.iterator().next();
        }
 else {
          log.debug("No cause of death yet, let's create one.");
          obsDeath=new Obs();
          obsDeath.setPerson(patient);
          obsDeath.setConcept(causeOfDeath);
          Location location=Context.getLocationService().getDefaultLocation();
          if (location != null) {
            obsDeath.setLocation(location);
          }
 else {
            log.error("Could not find a suitable location for which to create this new Obs");
          }
        }
        Concept currCause=patient.getCauseOfDeath();
        if (currCause == null) {
          log.debug("Current cause is null, attempting to set to NONE");
          String noneConcept=Context.getAdministrationService().getGlobalProperty("concept.none");
          currCause=Context.getConceptService().getConcept(noneConcept);
        }
        if (currCause != null) {
          log.debug("Current cause is not null, setting to value_coded");
          obsDeath.setValueCoded(currCause);
          obsDeath.setValueCodedName(currCause.getName());
          Date dateDeath=patient.getDeathDate();
          if (dateDeath == null) {
            dateDeath=new Date();
          }
          obsDeath.setObsDatetime(dateDeath);
          String otherConcept=Context.getAdministrationService().getGlobalProperty("concept.otherNonCoded");
          Concept conceptOther=Context.getConceptService().getConcept(otherConcept);
          if (conceptOther != null) {
            if (conceptOther.equals(currCause)) {
              log.debug("Setting value_text as " + otherReason);
              obsDeath.setValueText(otherReason);
            }
 else {
              log.debug("New concept is NOT the OTHER concept, so setting to blank");
              obsDeath.setValueText("");
            }
          }
 else {
            log.debug("Don't seem to know about an OTHER concept, so deleting value_text");
            obsDeath.setValueText("");
          }
          Context.getObsService().saveObs(obsDeath,"updated by PatientService.saveCauseOfDeathObs");
        }
 else {
          log.debug("Current cause is still null - aborting mission");
        }
      }
    }
  }
 else {
    log.debug("Cause of death is null - should not have gotten here without throwing an error on the form.");
  }
}
