{
  log.info("Create new observation ");
  Date obsDate=null;
  if (obsDateStr != null) {
    SimpleDateFormat sdf=new SimpleDateFormat("MM/dd/yyyy");
    try {
      obsDate=sdf.parse(obsDateStr);
    }
 catch (    ParseException e) {
      log.error("Error parsing date ... " + obsDate);
      obsDate=new Date();
    }
  }
  Person person=Context.getPersonService().getPerson(personId);
  Concept concept=Context.getConceptService().getConcept(conceptId);
  Encounter encounter=encounterId == null ? null : Context.getEncounterService().getEncounter(encounterId);
  Obs obs=new Obs();
  obs.setPerson(person);
  obs.setConcept(concept);
  obs.setObsDatetime(obsDate);
  if (encounter != null) {
    obs.setEncounter(encounter);
    obs.setLocation(encounter.getLocation());
  }
 else {
    Location unknown=Context.getEncounterService().getLocationByName("Unknown Location");
    if (unknown == null)     unknown=Context.getEncounterService().getLocationByName("Unknown");
    obs.setLocation(unknown);
  }
  obs.setCreator(Context.getAuthenticatedUser());
  obs.setDateCreated(new Date());
  String hl7DataType=concept.getDatatype().getHl7Abbreviation();
  if ("NM".equals(hl7DataType)) {
    obs.setValueNumeric(Double.valueOf(valueText));
  }
 else {
    obs.setValueText(valueText);
  }
  Context.getObsService().createObs(obs);
}
