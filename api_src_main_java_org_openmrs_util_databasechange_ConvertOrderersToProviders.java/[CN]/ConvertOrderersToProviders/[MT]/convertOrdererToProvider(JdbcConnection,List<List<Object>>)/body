{
  final int batchSize=1000;
  int index=0;
  PreparedStatement updateStatement=null;
  Statement statement=connection.createStatement();
  Boolean autoCommit=null;
  try {
    autoCommit=connection.getAutoCommit();
    connection.setAutoCommit(false);
    updateStatement=connection.prepareStatement("UPDATE orders SET orderer = ? WHERE orderer = ?");
    boolean supportsBatchUpdate=connection.getMetaData().supportsBatchUpdates();
    for (    List<Object> row : usersAndProviders) {
      updateStatement.setInt(1,(Integer)row.get(1));
      updateStatement.setInt(2,(Integer)row.get(0));
      if (supportsBatchUpdate) {
        updateStatement.addBatch();
        index++;
        if (index % batchSize == 0) {
          updateStatement.executeBatch();
        }
      }
 else {
        updateStatement.executeUpdate();
      }
    }
    if (supportsBatchUpdate) {
      updateStatement.executeBatch();
    }
    statement.execute("UPDATE orders SET orderer = " + "(SELECT provider_id FROM provider WHERE uuid =" + "(SELECT property_value FROM global_property WHERE property = '"+ "" + OpenmrsConstants.GP_UNKNOWN_PROVIDER_UUID + "')) "+ "WHERE orderer IS NULL");
    connection.commit();
  }
 catch (  DatabaseException e) {
    handleError(connection,e);
  }
catch (  SQLException e) {
    handleError(connection,e);
  }
 finally {
    if (autoCommit != null) {
      connection.setAutoCommit(autoCommit);
    }
    if (updateStatement != null) {
      updateStatement.close();
    }
    if (statement != null) {
      statement.close();
    }
  }
}
