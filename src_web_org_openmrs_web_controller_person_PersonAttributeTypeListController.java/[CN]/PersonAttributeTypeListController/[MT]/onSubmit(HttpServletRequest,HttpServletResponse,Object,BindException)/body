{
  HttpSession httpSession=request.getSession();
  String view=getFormView();
  if (Context.isAuthenticated()) {
    MessageSourceAccessor msa=getMessageSourceAccessor();
    String action=request.getParameter("action");
    String success="";
    String error="";
    if ("delete".equals(action)) {
      PersonService ps=Context.getPersonService();
      String[] attrTypeList=request.getParameterValues("personAttributeTypeId");
      String type=msa.getMessage("PersonAttributeType.title");
      String deleted=msa.getMessage("general.deleted");
      String notDeleted=msa.getMessage("general.cannot.delete");
      for (      String p : attrTypeList) {
        try {
          ps.deletePersonAttributeType(Integer.valueOf(p));
          if (!success.equals(""))           success+="<br/>";
          success+=type + " #" + p+ " "+ deleted;
        }
 catch (        Exception e) {
          log.warn("Error deleting person attribute type",e);
          if (!error.equals(""))           error+="<br/>";
          error+=type + " #" + p+ " "+ notDeleted;
        }
      }
    }
 else     if ("attrs".equals(action)) {
      AdministrationService as=Context.getAdministrationService();
      as.setGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_PATIENT_LISTING_ATTRIBUTES,request.getParameter("patient.listingAttributeTypes"));
      as.setGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_PATIENT_VIEWING_ATTRIBUTES,request.getParameter("patient.viewingAttributeTypes"));
      as.setGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_USER_LISTING_ATTRIBUTES,request.getParameter("user.listingAttributeTypes"));
      as.setGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_USER_VIEWING_ATTRIBUTES,request.getParameter("user.viewingAttributeTypes"));
      success=msa.getMessage("PersonAttributeType.viewingListing.saved");
    }
    view=getSuccessView();
    if (!success.equals(""))     httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,success);
    if (!error.equals(""))     httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,error);
  }
  return new ModelAndView(new RedirectView(view));
}
