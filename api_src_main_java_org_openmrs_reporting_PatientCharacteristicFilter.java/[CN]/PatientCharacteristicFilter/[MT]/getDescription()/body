{
  MessageSourceService msa=Context.getMessageSourceService();
  if (gender == null && minBirthdate == null && maxBirthdate == null && minAge == null && maxAge == null && aliveOnly == null && deadOnly == null) {
    return msa.getMessage("reporting.allPatients");
  }
  StringBuffer ret=new StringBuffer();
  if (gender != null) {
    if ("M".equals(gender)) {
      ret.append(msa.getMessage("reporting.male"));
    }
 else {
      ret.append(msa.getMessage("reporting.female"));
    }
  }
  ret.append(gender == null ? msa.getMessage("reporting.patients") + " " : " " + msa.getMessage("reporting.patients").toLowerCase() + " ");
  DateFormat df=DateFormat.getDateInstance(DateFormat.SHORT,Context.getLocale());
  if (minBirthdate != null) {
    if (maxBirthdate != null) {
      ret.append(" ").append(msa.getMessage("reporting.bornBetween",new Object[]{(Object)df.format(minBirthdate),(Object)df.format(maxBirthdate)},Context.getLocale()));
    }
 else {
      ret.append(" ").append(msa.getMessage("reporting.bornAfter")).append(" ").append(df.format(minBirthdate));
    }
  }
 else {
    if (maxBirthdate != null) {
      ret.append(" ").append(msa.getMessage("reporting.bornBefore")).append(" ").append(df.format(maxBirthdate));
    }
  }
  if (minAge != null) {
    if (maxAge != null) {
      ret.append(" ").append(msa.getMessage("reporting.betweenTheAgesOf",new Object[]{(Object)minAge,(Object)maxAge},Context.getLocale()));
    }
 else {
      ret.append(" ").append(msa.getMessage("reporting.atLeastYearsOld",new Object[]{minAge},Context.getLocale()));
    }
  }
 else {
    if (maxAge != null) {
      ret.append(" ").append(msa.getMessage("reporting.atMostYearsOld",new Object[]{maxAge},Context.getLocale()));
    }
  }
  if (aliveOnly != null && aliveOnly) {
    ret.append(" ").append(msa.getMessage("reporting.whoAreAlive"));
  }
  if (deadOnly != null && deadOnly) {
    ret.append(" ").append(msa.getMessage("reporting.whoAreDead"));
  }
  return ret.toString();
}
