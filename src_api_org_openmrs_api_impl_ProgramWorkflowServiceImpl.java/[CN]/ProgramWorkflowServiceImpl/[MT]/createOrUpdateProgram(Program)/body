{
  if (!Context.getUserContext().hasPrivilege(OpenmrsConstants.PRIV_MANAGE_PROGRAMS))   throw new APIAuthenticationException("Privilege required: " + OpenmrsConstants.PRIV_MANAGE_PROGRAMS);
  log.debug("Creating new program");
  if (p.getWorkflows() != null) {
    log.debug("\twith " + p.getWorkflows().size() + " workflows: "+ p.getWorkflows());
  }
  Date now=new Date();
  if (p.getProgramId() == null) {
    if (p.getCreator() == null) {
      p.setCreator(Context.getAuthenticatedUser());
    }
    p.setDateCreated(now);
  }
 else {
    p.setChangedBy(Context.getAuthenticatedUser());
    p.setDateChanged(now);
  }
  if (p.getVoided()) {
    if (p.getDateVoided() == null) {
      p.setDateVoided(now);
    }
    if (p.getVoidedBy() == null) {
      p.setVoidedBy(Context.getAuthenticatedUser());
    }
  }
 else {
    p.setDateVoided(null);
    p.setVoidedBy(null);
    p.setVoidReason(null);
  }
  if (p.getWorkflows() != null) {
    for (    ProgramWorkflow w : p.getWorkflows()) {
      if (w.getProgramWorkflowId() == null) {
        if (w.getCreator() == null) {
          w.setCreator(Context.getAuthenticatedUser());
        }
        w.setDateCreated(now);
      }
      if (w.getProgram() == null) {
        w.setProgram(p);
      }
 else       if (!w.getProgram().getProgramId().equals(p.getProgramId())) {
        throw new IllegalArgumentException("This Program contains a ProgramWorkflow whose parent Program is already assigned to " + w.getProgram());
      }
    }
  }
  getProgramWorkflowDAO().createOrUpdateProgram(p);
}
