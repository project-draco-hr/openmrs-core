{
  Log log=LogFactory.getLog(Listener.class);
  String realPath=servletContext.getRealPath("");
  Map<String,String> custom=new HashMap<String,String>();
  custom.put("custom.template.dir","/WEB-INF/template");
  custom.put("custom.index.jsp.file","/WEB-INF/view/index.jsp");
  custom.put("custom.login.jsp.file","/WEB-INF/view/login.jsp");
  custom.put("custom.patientDashboardForm.jsp.file","/WEB-INF/view/patientDashboardForm.jsp");
  custom.put("custom.images.dir","/images");
  custom.put("custom.style.css.file","/style.css");
  custom.put("custom.messages","/WEB-INF/custom_messages.properties");
  custom.put("custom.messages_fr","/WEB-INF/custom_messages_fr.properties");
  custom.put("custom.messages_es","/WEB-INF/custom_messages_es.properties");
  custom.put("custom.messages_de","/WEB-INF/custom_messages_de.properties");
  for (  Map.Entry<String,String> entry : custom.entrySet()) {
    String prop=entry.getKey();
    String webappPath=entry.getValue();
    String userOverridePath=props.getProperty(prop);
    if (userOverridePath != null) {
      String absolutePath=realPath + webappPath;
      File file=new File(userOverridePath);
      if (file.exists() && !userOverridePath.startsWith(".")) {
        log.debug("Overriding file: " + absolutePath);
        log.debug("Overriding file with: " + userOverridePath);
        if (file.isDirectory()) {
          for (          File f : file.listFiles()) {
            userOverridePath=f.getAbsolutePath();
            if (!f.getName().startsWith(".")) {
              String tmpAbsolutePath=absolutePath + "/" + f.getName();
              if (!copyFile(userOverridePath,tmpAbsolutePath)) {
                log.warn("Unable to copy file in folder defined by runtime property: " + prop);
                log.warn("Your source directory (or a file in it) '" + userOverridePath + " cannot be loaded or destination '"+ tmpAbsolutePath+ "' cannot be found");
              }
            }
          }
        }
 else {
          if (!copyFile(userOverridePath,absolutePath)) {
            log.warn("Unable to copy file defined by runtime property: " + prop);
            log.warn("Your source file '" + userOverridePath + " cannot be loaded or destination '"+ absolutePath+ "' cannot be found");
          }
        }
      }
    }
  }
}
