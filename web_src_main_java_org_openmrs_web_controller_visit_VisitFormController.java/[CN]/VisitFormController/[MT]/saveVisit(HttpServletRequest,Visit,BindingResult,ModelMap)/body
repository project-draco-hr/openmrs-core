{
  String[] ids=ServletRequestUtils.getStringParameters(request,"encounterIds");
  List<Integer> encounterIds=new ArrayList<Integer>();
  EncounterService es=Context.getEncounterService();
  List<Encounter> encountersToSave=new ArrayList<Encounter>();
  if (!ArrayUtils.isEmpty(ids)) {
    for (    String id : ids) {
      if (StringUtils.hasText(id)) {
        encounterIds.add(Integer.valueOf(id));
      }
    }
    List<Encounter> visitEncounters=(List<Encounter>)model.get("visitEncounters");
    for (    Encounter e : visitEncounters) {
      if (!encounterIds.contains(e.getEncounterId())) {
        e.setVisit(null);
        validateEncounter(e,result);
        if (result.hasErrors()) {
          addEncounterAndObservationCounts(visit,encounterIds,model);
          return VISIT_FORM;
        }
        encountersToSave.add(e);
      }
 else {
        encounterIds.remove(e.getEncounterId());
      }
    }
    for (    Integer encounterId : encounterIds) {
      Encounter e=es.getEncounter(encounterId);
      if (e != null) {
        e.setVisit(visit);
        validateEncounter(e,result);
        if (result.hasErrors()) {
          addEncounterAndObservationCounts(visit,encounterIds,model);
          return VISIT_FORM;
        }
        encountersToSave.add(e);
      }
    }
  }
  List<VisitAttributeType> attributeTypes=(List<VisitAttributeType>)model.get("attributeTypes");
  WebAttributeUtil.handleSubmittedAttributesForType(visit,result,VisitAttribute.class,request,attributeTypes);
  new VisitValidator().validate(visit,result);
  if (!result.hasErrors()) {
    try {
      Context.getVisitService().saveVisit(visit);
      if (log.isDebugEnabled()) {
        log.debug("Saved visit: " + visit.toString());
      }
      request.getSession().setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Visit.saved");
      for (      Encounter encounter : encountersToSave) {
        es.saveEncounter(encounter);
      }
      return "redirect:" + "/patientDashboard.form?patientId=" + visit.getPatient().getPatientId();
    }
 catch (    APIException e) {
      log.warn("Error while saving visit(s)",e);
      request.getSession().setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Visit.save.error");
    }
  }
  addEncounterAndObservationCounts(visit,encounterIds,model);
  return VISIT_FORM;
}
