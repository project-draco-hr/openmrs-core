{
  HttpSession httpSession=request.getSession();
  String view=getFormView();
  Locale locale=Context.getLocale();
  MessageSourceAccessor msa=getMessageSourceAccessor();
  if (Context.isAuthenticated()) {
    ConceptProposal cp=(ConceptProposal)obj;
    String finalText=cp.getFinalText();
    ConceptService cs=Context.getConceptService();
    AlertService alertService=Context.getAlertService();
    Concept c=null;
    if (StringUtils.hasText(request.getParameter("conceptId")))     c=cs.getConcept(Integer.valueOf(request.getParameter("conceptId")));
    List<ConceptProposal> allProposals=cs.getConceptProposals(cp.getOriginalText());
    Set<User> uniqueProposers=new HashSet<User>();
    for (    ConceptProposal conceptProposal : allProposals) {
      uniqueProposers.add(conceptProposal.getCreator());
      conceptProposal.setFinalText(finalText);
      conceptProposal.setState(cp.getState());
      cs.mapConceptProposalToConcept(conceptProposal,c);
    }
    String msg="";
    if (c != null) {
      String mappedName=c.getName(locale).getName();
      String[] args=new String[]{cp.getOriginalText(),mappedName,cp.getComments()};
      msg=msa.getMessage("ConceptProposal.alert.mappedTo",args,locale);
    }
 else {
      String[] args=new String[]{cp.getOriginalText(),cp.getComments()};
      msg=msa.getMessage("ConceptProposal.alert.ignored",args,locale);
    }
    try {
      Context.addProxyPrivilege(OpenmrsConstants.PRIV_MANAGE_ALERTS);
      alertService.saveAlert(new Alert(msg,uniqueProposers));
    }
  finally {
      Context.removeProxyPrivilege(OpenmrsConstants.PRIV_MANAGE_ALERTS);
    }
    view=getSuccessView();
    httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"ConceptProposal.saved");
  }
  return new ModelAndView(new RedirectView(view));
}
