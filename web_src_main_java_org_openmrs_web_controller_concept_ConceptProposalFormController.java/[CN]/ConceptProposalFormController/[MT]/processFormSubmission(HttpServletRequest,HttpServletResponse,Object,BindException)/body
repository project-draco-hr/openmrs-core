{
  HttpSession httpSession=request.getSession();
  ConceptProposal cp=(ConceptProposal)obj;
  String action=request.getParameter("action");
  Concept c=null;
  if (StringUtils.hasText(request.getParameter("conceptId")))   c=Context.getConceptService().getConcept(Integer.valueOf(request.getParameter("conceptId")));
  cp.setMappedConcept(c);
  MessageSourceAccessor msa=getMessageSourceAccessor();
  if (action.equals(msa.getMessage("general.cancel"))) {
    httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"general.canceled");
    return new ModelAndView(new RedirectView(getSuccessView()));
  }
 else   if (action.equals(msa.getMessage("ConceptProposal.ignore"))) {
    cp.setState(OpenmrsConstants.CONCEPT_PROPOSAL_REJECT);
  }
 else {
    if (cp.getMappedConcept() == null)     errors.rejectValue("mappedConcept","ConceptProposal.mappedConcept.error");
 else {
      String proposalAction=request.getParameter("actionToTake");
      if (proposalAction.equals("saveAsMapped")) {
        cp.setState(OpenmrsConstants.CONCEPT_PROPOSAL_CONCEPT);
      }
 else       if (proposalAction.equals("saveAsSynonym")) {
        if (cp.getMappedConcept() == null)         errors.rejectValue("mappedConcept","ConceptProposal.mappedConcept.error");
        if (!StringUtils.hasText(cp.getFinalText()))         errors.rejectValue("finalText","error.null");
        cp.setState(OpenmrsConstants.CONCEPT_PROPOSAL_SYNONYM);
      }
    }
  }
  return super.processFormSubmission(request,response,cp,errors);
}
