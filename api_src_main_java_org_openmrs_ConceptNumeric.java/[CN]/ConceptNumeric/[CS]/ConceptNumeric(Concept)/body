{
  this.setChangedBy(c.getChangedBy());
  this.setConceptClass(c.getConceptClass());
  this.setConceptId(c.getConceptId());
  this.setCreator(c.getCreator());
  this.setDatatype(c.getDatatype());
  this.setDateChanged(c.getDateChanged());
  this.setDateCreated(c.getDateCreated());
  this.setSet(c.isSet());
  this.setRetired(c.isRetired());
  this.setRetiredBy(c.getRetiredBy());
  this.setRetireReason(c.getRetireReason());
  this.setVersion(c.getVersion());
  this.setUuid(c.getUuid());
  this.setNames(new HashSet<ConceptName>(c.getNames()));
  for (  ConceptName cName : this.getNames()) {
    cName.setConcept(this);
  }
  this.setAnswers(new HashSet<ConceptAnswer>(c.getAnswers(true)));
  for (  ConceptAnswer cAnswer : this.getAnswers()) {
    cAnswer.setConcept(this);
  }
  this.setConceptSets(new TreeSet<ConceptSet>(c.getConceptSets()));
  for (  ConceptSet cSet : this.getConceptSets()) {
    cSet.setConceptSet(this);
  }
  this.setDescriptions(new HashSet<ConceptDescription>(c.getDescriptions()));
  for (  ConceptDescription cDescription : this.getDescriptions()) {
    cDescription.setConcept(this);
  }
  this.setConceptMappings(new HashSet<ConceptMap>(c.getConceptMappings()));
  for (  ConceptMap cMap : this.getConceptMappings()) {
    cMap.setConcept(this);
  }
  this.hiAbsolute=null;
  this.hiCritical=null;
  this.hiNormal=null;
  this.lowAbsolute=null;
  this.lowCritical=null;
  this.lowNormal=null;
  this.units="";
  this.allowDecimal=false;
}
