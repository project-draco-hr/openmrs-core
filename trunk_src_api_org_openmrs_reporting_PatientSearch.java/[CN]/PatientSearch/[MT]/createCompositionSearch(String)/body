{
  List<Object> tokens=new ArrayList<Object>();
  try {
    StreamTokenizer st=new StreamTokenizer(new StringReader(description));
    st.ordinaryChar('(');
    st.ordinaryChar(')');
    while (st.nextToken() != StreamTokenizer.TT_EOF) {
      if (st.ttype == StreamTokenizer.TT_NUMBER) {
        Integer thisInt=new Integer((int)st.nval);
        if (thisInt < 1) {
          log.error("number < 1");
          return null;
        }
        tokens.add(thisInt);
      }
 else       if (st.ttype == '(') {
        tokens.add("(");
      }
 else       if (st.ttype == ')') {
        tokens.add(")");
      }
 else       if (st.ttype == StreamTokenizer.TT_WORD) {
        String str=st.sval.toLowerCase();
        tokens.add(str);
      }
    }
    return createCompositionSearch(tokens);
  }
 catch (  Exception ex) {
    log.error("Error in description string: " + description,ex);
    return null;
  }
}
