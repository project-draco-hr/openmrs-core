{
  Order order=new Order();
  order.setAction(Order.Action.DISCONTINUE);
  order.setOrderReasonNonCoded("Discontinue this");
  order.setPatient(Context.getPatientService().getPatient(7));
  order.setOrderer(Context.getProviderService().getProvider(1));
  order.setConcept(Context.getConceptService().getConcept(88));
  order.setCareSetting(orderService.getCareSetting(1));
  order.setEncounter(encounterService.getEncounter(3));
  order.setOrderType(orderService.getOrderType(1));
  order.setStartDate(new Date());
  Order expectedPreviousOrder=orderService.getOrder(111);
  Assert.assertNull(expectedPreviousOrder.getDateStopped());
  order=orderService.saveOrder(order,null);
  Assert.assertNotNull("should populate dateStopped in previous order",expectedPreviousOrder.getDateStopped());
  Assert.assertNotNull("should save discontinue order",order.getId());
  Assert.assertEquals(expectedPreviousOrder,order.getPreviousOrder());
  Assert.assertNotNull(expectedPreviousOrder.getDateStopped());
}
