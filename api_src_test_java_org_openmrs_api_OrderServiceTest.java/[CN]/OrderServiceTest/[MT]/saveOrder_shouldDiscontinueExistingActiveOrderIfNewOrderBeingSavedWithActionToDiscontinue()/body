{
  DrugOrder order=new DrugOrder();
  order.setAction(Order.Action.DISCONTINUE);
  order.setOrderReasonNonCoded("Discontinue this");
  order.setEncounter(encounterService.getEncounter(5));
  order.setPatient(patientService.getPatient(7));
  order.setOrderer(providerService.getProvider(1));
  order.setConcept(conceptService.getConcept(88));
  order.setCareSetting(orderService.getCareSetting(1));
  order.setEncounter(encounterService.getEncounter(3));
  order.setOrderType(orderService.getOrderType(1));
  order.setStartDate(new Date());
  order.setDosingType(DrugOrder.DosingType.SIMPLE);
  order.setDose(500.0);
  order.setDoseUnits(conceptService.getConcept(50));
  order.setFrequency(orderService.getOrderFrequency(1));
  order.setRoute(conceptService.getConcept(22));
  order.setNumRefills(10);
  order.setQuantity(20.0);
  order.setQuantityUnits(conceptService.getConcept(51));
  Order expectedPreviousOrder=orderService.getOrder(111);
  Assert.assertNull(expectedPreviousOrder.getDateStopped());
  order=(DrugOrder)orderService.saveOrder(order,null);
  Assert.assertNotNull("should populate dateStopped in previous order",expectedPreviousOrder.getDateStopped());
  Assert.assertNotNull("should save discontinue order",order.getId());
  Assert.assertEquals(expectedPreviousOrder,order.getPreviousOrder());
  Assert.assertNotNull(expectedPreviousOrder.getDateStopped());
}
