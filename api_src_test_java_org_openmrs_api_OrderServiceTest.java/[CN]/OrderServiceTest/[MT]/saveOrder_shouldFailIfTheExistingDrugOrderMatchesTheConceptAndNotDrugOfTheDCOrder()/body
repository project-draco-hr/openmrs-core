{
  final DrugOrder orderToDiscontinue=(DrugOrder)orderService.getOrder(5);
  assertTrue(OrderUtilTest.isActiveOrder(orderToDiscontinue,null));
  Drug discontinuationOrderDrug=new Drug();
  discontinuationOrderDrug.setConcept(orderToDiscontinue.getConcept());
  discontinuationOrderDrug=conceptService.saveDrug(discontinuationOrderDrug);
  assertNotEquals(discontinuationOrderDrug,orderToDiscontinue.getDrug());
  assertNotNull(orderToDiscontinue.getDrug());
  DrugOrder order=orderToDiscontinue.cloneForRevision();
  order.setDateActivated(new Date());
  order.setOrderer(providerService.getProvider(1));
  order.setEncounter(encounterService.getEncounter(6));
  order.setDrug(discontinuationOrderDrug);
  order.setOrderReasonNonCoded("Discontinue this");
  expectedException.expect(APIException.class);
  expectedException.expectMessage("Order.previous.drug");
  orderService.saveOrder(order,null);
}
