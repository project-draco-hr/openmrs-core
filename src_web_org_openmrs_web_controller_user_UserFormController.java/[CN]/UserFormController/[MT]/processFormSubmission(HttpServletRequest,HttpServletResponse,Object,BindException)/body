{
  HttpSession httpSession=request.getSession();
  User user=(User)obj;
  UserService us=Context.getUserService();
  MessageSourceAccessor msa=getMessageSourceAccessor();
  String action=request.getParameter("action");
  if (!Context.isAuthenticated()) {
    errors.reject("auth.invalid");
  }
 else   if (msa.getMessage("User.assumeIdentity").equals(action)) {
    Context.becomeUser(user.getSystemId());
    httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"User.assumeIdentity.success");
    httpSession.setAttribute(WebConstants.OPENMRS_MSG_ARGS,user.getPersonName());
    return new ModelAndView(new RedirectView(request.getContextPath() + "/index.htm"));
  }
 else   if (msa.getMessage("User.delete").equals(action)) {
    us.purgeUser(user);
    return new ModelAndView(new RedirectView(getSuccessView()));
  }
 else {
    if (us.hasDuplicateUsername(user))     errors.rejectValue("username","error.username.taken");
    String password=request.getParameter("userFormPassword");
    if (password == null || password.equals("XXXXXXXXXXXXXXX"))     password="";
    String confirm=request.getParameter("confirm");
    if (confirm == null || confirm.equals("XXXXXXXXXXXXXXX"))     confirm="";
    if (!password.equals(confirm))     errors.reject("error.password.match");
    if (password.length() == 0 && isNewUser(user))     errors.reject("error.password.weak");
    if (password.length() > 0) {
      try {
        OpenmrsUtil.validatePassword(user.getUsername(),password,String.valueOf(user.getUserId()));
      }
 catch (      PasswordException e) {
        errors.reject(e.getMessage());
      }
    }
    String[] roles=request.getParameterValues("roleStrings");
    Set<Role> newRoles=new HashSet<Role>();
    if (roles != null) {
      for (      String r : roles) {
        Role role=null;
        if (user.getRoles() != null)         for (        Role test : user.getRoles())         if (test.getRole().equals(r))         role=test;
        if (role == null) {
          role=us.getRole(r);
          user.addRole(role);
        }
        newRoles.add(role);
      }
    }
    if (user.getRoles() == null)     newRoles.clear();
 else     user.getRoles().retainAll(newRoles);
  }
  return super.processFormSubmission(request,response,user,errors);
}
