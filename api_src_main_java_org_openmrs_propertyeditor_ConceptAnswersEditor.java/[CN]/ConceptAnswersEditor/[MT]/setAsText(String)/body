{
  if (StringUtils.hasText(text)) {
    ConceptService cs=Context.getConceptService();
    String[] conceptIds=text.split(" ");
    List<String> requestConceptIds=new Vector<String>();
    for (    String id : conceptIds) {
      id=id.trim();
      if (!"".equals(id) && !requestConceptIds.contains(id)) {
        requestConceptIds.add(id);
      }
    }
    Collection<ConceptAnswer> deletedConceptAnswers=new HashSet<ConceptAnswer>();
    for (    ConceptAnswer origConceptAnswer : originalConceptAnswers) {
      boolean answerDeleted=true;
      for (      String conceptId : requestConceptIds) {
        Integer id=getConceptId(conceptId);
        Integer drugId=getDrugId(conceptId);
        Drug answerDrug=origConceptAnswer.getAnswerDrug();
        if (id.equals(origConceptAnswer.getAnswerConcept().getConceptId())) {
          if (drugId == null && answerDrug == null) {
            answerDeleted=false;
          }
 else           if ((drugId != null && answerDrug != null) && drugId.equals(origConceptAnswer.getAnswerDrug().getDrugId())) {
            answerDeleted=false;
          }
        }
      }
      if (answerDeleted) {
        deletedConceptAnswers.add(origConceptAnswer);
      }
    }
    for (    ConceptAnswer conceptAnswer : deletedConceptAnswers) {
      originalConceptAnswers.remove(conceptAnswer);
    }
    for (    String conceptId : requestConceptIds) {
      Integer id=getConceptId(conceptId);
      Integer drugId=getDrugId(conceptId);
      boolean newAnswerConcept=true;
      for (      ConceptAnswer origConceptAnswer : originalConceptAnswers) {
        Drug answerDrug=origConceptAnswer.getAnswerDrug();
        if (id.equals(origConceptAnswer.getAnswerConcept().getConceptId())) {
          if (drugId == null && answerDrug == null) {
            newAnswerConcept=false;
          }
 else           if ((drugId != null && answerDrug != null) && drugId.equals(answerDrug.getDrugId())) {
            newAnswerConcept=false;
          }
        }
      }
      if (newAnswerConcept) {
        Concept answer=cs.getConcept(id);
        Drug drug=null;
        if (drugId != null) {
          drug=cs.getDrug(drugId);
        }
        ConceptAnswer ac=new ConceptAnswer(answer,drug);
        originalConceptAnswers.add(ac);
      }
    }
    Double lastWeightSeen=null;
    int startIdx=-1;
    for (int i=0; i < requestConceptIds.size() - 1; i++) {
      Integer id1=getConceptId(requestConceptIds.get(i));
      ConceptAnswer ca1=getConceptAnswerFromOriginal(id1);
      if (ca1.getSortWeight() == null) {
        if (lastWeightSeen == null) {
          lastWeightSeen=1d;
        }
 else {
          lastWeightSeen+=1;
        }
        startIdx=i;
        break;
      }
      Integer id2=getConceptId(requestConceptIds.get(i + 1));
      ConceptAnswer ca2=getConceptAnswerFromOriginal(id2);
      int c=ca1.compareTo(ca2);
      if (c > 0) {
        startIdx=i;
        lastWeightSeen=ca1.getSortWeight();
        break;
      }
      lastWeightSeen=ca1.getSortWeight();
    }
    if (startIdx != -1) {
      for (int i=startIdx; i < requestConceptIds.size(); i++) {
        Integer id=getConceptId(requestConceptIds.get(i));
        ConceptAnswer ca=getConceptAnswerFromOriginal(id);
        ca.setSortWeight(lastWeightSeen++);
      }
    }
    log.debug("originalConceptAnswers.getConceptId(): ");
    for (    ConceptAnswer a : originalConceptAnswers) {
      log.debug("id: " + a.getAnswerConcept().getConceptId());
    }
    log.debug("requestConceptIds: ");
    for (    String i : requestConceptIds) {
      log.debug("id: " + i);
    }
  }
 else {
    originalConceptAnswers.clear();
  }
  setValue(originalConceptAnswers);
}
