{
  log.debug("Entering formBackingObject()");
  List<PersonListItem> personList=new Vector<PersonListItem>();
  if (Context.isAuthenticated()) {
    PersonService ps=Context.getPersonService();
    Integer userId=Context.getAuthenticatedUser().getUserId();
    getParametersFromRequest(request);
    log.debug("name: " + name + " birthdate: "+ birthdate+ " age: "+ age+ " gender: "+ gender);
    if (!name.equals("") || !birthdate.equals("") || !age.equals("")|| !gender.equals("")) {
      log.info(userId + "|" + name+ "|"+ birthdate+ "|"+ age+ "|"+ gender);
      Integer d=null;
      birthdate=birthdate.trim();
      String birthyear="";
      if (birthdate.length() > 6)       birthyear=birthdate.substring(6);
      age=age.trim();
      if (birthyear.length() > 3)       d=Integer.valueOf(birthyear);
 else       if (age.length() > 0) {
        Calendar c=Calendar.getInstance();
        c.setTime(new Date());
        d=c.get(Calendar.YEAR);
        d=d - Integer.parseInt(age);
      }
      if (gender.length() < 1)       gender=null;
      if (!StringUtils.hasLength(personType)) {
        personType="person";
      }
      personList=new Vector<PersonListItem>();
      for (      Person p : ps.getSimilarPeople(name,d,gender,personType)) {
        personList.add(PersonListItem.createBestMatch(p));
      }
    }
  }
  log.debug("Returning personList of size: " + personList.size() + " from formBackingObject");
  return personList;
}
