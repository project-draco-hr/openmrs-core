{
  Rule rule=null;
  if (token == null)   throw new LogicException("Token cannot be null");
  if (token.startsWith("%%"))   return new ReferenceRule(token.substring(2));
  if (!getRuleMap().containsKey(token))   throw new LogicException("No token \"" + token + "\" registered");
  Rule r=getRuleMap().get(token);
  String state=StringUtils.EMPTY;
  if (StatefulRule.class.isAssignableFrom(r.getClass()))   state=((StatefulRule)r).saveToString();
  Class clas=r.getClass();
  try {
    Object obj=clas.newInstance();
    rule=(Rule)obj;
  }
 catch (  InstantiationException e) {
    log.error("Error creating new instance of Rule",e);
  }
catch (  IllegalAccessException e) {
    log.error("Error creating new instance of Rule",e);
  }
  if (StatefulRule.class.isAssignableFrom(r.getClass()))   ((StatefulRule)rule).restoreFromString(state);
  return rule;
}
