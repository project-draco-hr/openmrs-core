{
  Criteria criteria=getCurrentSession().createCriteria(Visit.class);
  if (visitTypes != null)   criteria.add(Restrictions.in("visitType",visitTypes));
  if (patients != null)   criteria.add(Restrictions.in("patient",patients));
  if (locations != null)   criteria.add(Restrictions.in("location",locations));
  if (indications != null)   criteria.add(Restrictions.in("indication",indications));
  if (minStartDatetime != null)   criteria.add(Restrictions.ge("startDatetime",minStartDatetime));
  if (maxStartDatetime != null)   criteria.add(Restrictions.le("startDatetime",maxStartDatetime));
  if (!includeInactive) {
    criteria.add(Restrictions.or(Restrictions.isNull("stopDatetime"),Restrictions.ge("stopDatetime",new Date())));
  }
 else {
    if (minEndDatetime != null)     criteria.add(Restrictions.ge("stopDatetime",minEndDatetime));
    if (maxEndDatetime != null)     criteria.add(Restrictions.le("stopDatetime",maxEndDatetime));
  }
  if (!includeVoided)   criteria.add(Restrictions.eq("voided",false));
  List<Visit> visits=criteria.list();
  if (serializedAttributeValues != null) {
    CollectionUtils.filter(visits,new AttributeMatcherPredicate<Visit,VisitAttributeType>(serializedAttributeValues));
  }
  return visits;
}
