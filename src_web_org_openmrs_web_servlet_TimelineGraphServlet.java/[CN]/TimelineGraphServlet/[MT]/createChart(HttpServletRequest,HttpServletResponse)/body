{
  DataTable hivEnrollmentTable=(DataTable)request.getSession().getAttribute("hivEnrollmentDataTable");
  String chartTitle=request.getParameter("chartTitle") == null ? "" : request.getParameter("chartTitle");
  String rangeAxisTitle=request.getParameter("rangeAxisTitle") == null ? "" : request.getParameter("rangeAxisTitle");
  String domainAxisTitle=request.getParameter("domainAxisTitle") == null ? "" : request.getParameter("domainAxisTitle");
  Day startDate=null;
  Day endDate=null;
  try {
    startDate=Day.parseDay(request.getParameter("startDate"));
    endDate=Day.parseDay(request.getParameter("endDate"));
  }
 catch (  Exception e) {
  }
  TimeSeries series=new TimeSeries(rangeAxisTitle,Month.class);
  TimeSeriesCollection dataset=new TimeSeriesCollection();
  ArrayList<TableRow> hivEnrollmentRows=hivEnrollmentTable.getRows();
  for (  TableRow row : hivEnrollmentRows) {
    try {
      Day day=Day.parseDay("" + row.get("hiv_enrollment_date") + "-01");
      Double dateCount=Double.valueOf("" + row.get("count"));
      log.debug("Adding value: " + dateCount + " for "+ day);
      if (day != null && (startDate == null || startDate.compareTo(day) <= 0) && (endDate == null || endDate.compareTo(day) >= 0)) {
        series.addOrUpdate(new Month(day.getMonth(),day.getYear()),dateCount);
      }
    }
 catch (    Exception e) {
      log.error(e);
    }
  }
  dataset.addSeries(series);
  ChartFactory.setChartTheme(StandardChartTheme.createLegacyTheme());
  JFreeChart chart=ChartFactory.createXYBarChart(chartTitle,domainAxisTitle,true,rangeAxisTitle,dataset,PlotOrientation.VERTICAL,true,false,false);
  XYPlot plot=chart.getXYPlot();
  DateAxis axis=(DateAxis)plot.getDomainAxis();
  axis.setDateFormatOverride(new SimpleDateFormat("MMM-yy"));
  axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);
  axis.setLowerMargin(0.01);
  axis.setUpperMargin(0.01);
  NumberAxis rangeAxis=(NumberAxis)plot.getRangeAxis();
  rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
  double minRange=rangeAxis.getLowerBound();
  double maxRange=rangeAxis.getUpperBound();
  try {
    double userMinRange=Double.parseDouble(request.getParameter("minRange"));
    minRange=(userMinRange < minRange) ? userMinRange : minRange;
  }
 catch (  Exception e) {
  }
  try {
    double userMaxRange=Double.parseDouble(request.getParameter("maxRange"));
    maxRange=(userMaxRange < maxRange) ? userMaxRange : maxRange;
  }
 catch (  Exception e) {
  }
  rangeAxis.setRange(minRange,maxRange);
  return chart;
}
