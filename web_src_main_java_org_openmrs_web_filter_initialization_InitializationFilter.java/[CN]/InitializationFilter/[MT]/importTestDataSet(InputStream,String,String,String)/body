{
  final int BUFFER_SIZE=1024;
  File tempFile=null;
  FileOutputStream fileOut=null;
  byte buffer[]=new byte[BUFFER_SIZE];
  try {
    tempFile=File.createTempFile("testDataSet","dump");
    fileOut=new FileOutputStream(tempFile);
    ZipInputStream zipIn=new ZipInputStream(in);
    ZipEntry zipEntry=zipIn.getNextEntry();
    while (zipEntry != null) {
      int remainingBytes=(int)zipEntry.getSize();
      int bytesRead;
      while (remainingBytes > 0 && (bytesRead=zipIn.read(buffer,0,Math.min(BUFFER_SIZE,remainingBytes))) != -1) {
        fileOut.write(buffer,0,bytesRead);
        remainingBytes-=bytesRead;
      }
      try {
        zipEntry=zipIn.getNextEntry();
      }
 catch (      EOFException ex) {
        zipEntry=null;
      }
    }
    fileOut.close();
    zipIn.close();
    if (connectionUrl.contains(":mxj:")) {
      connectionUrl=connectionUrl.replace(":mxj:",":");
    }
    URI uri=URI.create(connectionUrl.substring(5));
    String host=uri.getHost();
    int port=uri.getPort();
    TestInstallUtil.addTestData(host,port,wizardModel.databaseName,connectionUsername,connectionPassword,tempFile.getAbsolutePath());
  }
  finally {
    IOUtils.closeQuietly(in);
    IOUtils.closeQuietly(fileOut);
    if (tempFile != null) {
      tempFile.delete();
    }
  }
}
