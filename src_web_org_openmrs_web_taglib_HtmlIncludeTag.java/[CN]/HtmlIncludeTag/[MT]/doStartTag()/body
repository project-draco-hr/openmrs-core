{
  log.debug("\n\n");
  if (rewrites.containsKey(file))   file=rewrites.get(file);
  boolean isJs=false;
  boolean isCss=false;
  String fileExt=file.substring(file.lastIndexOf("."));
  if (this.type != null) {
    if (this.type.length() > 0) {
      if (HtmlIncludeTag.POSSIBLE_TYPES_CSS.indexOf(type) >= 0)       isCss=true;
 else       if (HtmlIncludeTag.POSSIBLE_TYPES_JS.indexOf(type) >= 0)       isJs=true;
    }
  }
  if (!isCss && !isJs && fileExt.length() > 0) {
    if (HtmlIncludeTag.POSSIBLE_TYPES_CSS.indexOf(fileExt) >= 0)     isCss=true;
 else     if (HtmlIncludeTag.POSSIBLE_TYPES_JS.indexOf(fileExt) >= 0)     isJs=true;
  }
  if (isJs || isCss) {
    String initialRequestId=getInitialRequestUniqueId();
    HttpServletRequest request=(HttpServletRequest)pageContext.getRequest();
    log.debug("initialRequest id: [" + initialRequestId + "]");
    log.debug("Object at pageContext." + HtmlIncludeTag.OPENMRS_HTML_INCLUDE_MAP_KEY + " is "+ pageContext.getAttribute(HtmlIncludeTag.OPENMRS_HTML_INCLUDE_MAP_KEY,PageContext.SESSION_SCOPE)+ "");
    if (!isAlreadyUsed(file,initialRequestId)) {
      String output="";
      String prefix="";
      try {
        prefix=request.getContextPath();
        if (file.startsWith(prefix + "/"))         prefix="";
      }
 catch (      ClassCastException cce) {
        log.debug("Could not cast request to HttpServletRequest in HtmlIncludeTag");
      }
      if (isJs) {
        output="<script src=\"" + prefix + file+ "?v="+ OpenmrsConstants.OPENMRS_VERSION_SHORT+ "\" type=\"text/javascript\" ></script>";
      }
 else       if (isCss) {
        output="<link href=\"" + prefix + file+ "?v="+ OpenmrsConstants.OPENMRS_VERSION_SHORT+ "\" type=\"text/css\" rel=\"stylesheet\" />";
      }
      log.debug("isAlreadyUsed() is FALSE - printing " + this.file + " to output.");
      try {
        pageContext.getOut().print(output);
      }
 catch (      IOException e) {
        log.debug("Could not produce output in HtmlIncludeTag.java");
      }
    }
 else {
      log.debug("isAlreadyUsed() is TRUE - suppressing file print for " + this.file + "");
    }
  }
  resetValues();
  return SKIP_BODY;
}
