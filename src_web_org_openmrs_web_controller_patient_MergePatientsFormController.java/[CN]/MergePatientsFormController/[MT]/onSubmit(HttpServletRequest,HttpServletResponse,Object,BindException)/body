{
  HttpSession httpSession=request.getSession();
  if (Context.isAuthenticated()) {
    String view=getSuccessView();
    PatientService ps=Context.getPatientService();
    String patient1Id=ServletRequestUtils.getRequiredStringParameter(request,"patient1");
    String patient2Id=ServletRequestUtils.getRequiredStringParameter(request,"patient2");
    String preferredId=ServletRequestUtils.getRequiredStringParameter(request,"preferred");
    Patient preferred=null;
    Patient notPreferred=null;
    if (patient1Id.equals(preferredId)) {
      preferred=ps.getPatient(Integer.valueOf(patient1Id));
      notPreferred=ps.getPatient(Integer.valueOf(patient2Id));
    }
 else {
      notPreferred=ps.getPatient(Integer.valueOf(patient1Id));
      preferred=ps.getPatient(Integer.valueOf(patient2Id));
    }
    try {
      ps.mergePatients(preferred,notPreferred);
    }
 catch (    APIException e) {
      log.error("Unable to merge patients",e);
      httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Patient.merge.fail");
      return new ModelAndView(new RedirectView(view + "?patientId=" + preferred.getPatientId()+ "&patientId="+ notPreferred.getPatientId()));
    }
    httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Patient.merged");
    return new ModelAndView(new RedirectView(view + "?patientId=" + preferred.getPatientId()+ "&patientId="+ notPreferred.getPatientId()));
  }
  return new ModelAndView(new RedirectView(getFormView()));
}
