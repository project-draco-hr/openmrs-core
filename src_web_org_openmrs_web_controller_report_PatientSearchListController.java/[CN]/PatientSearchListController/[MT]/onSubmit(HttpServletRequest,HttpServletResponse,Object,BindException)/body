{
  HttpSession httpSession=request.getSession();
  String view=getFormView();
  if (Context.isAuthenticated()) {
    String[] reportList=request.getParameterValues("patientSearchId");
    String action=request.getParameter("action");
    AdministrationService as=Context.getAdministrationService();
    String success="";
    String error="";
    MessageSourceAccessor msa=getMessageSourceAccessor();
    String deleted=msa.getMessage("general.deleted");
    String notDeleted=msa.getMessage("general.cannot.delete");
    String textPatientSearch=msa.getMessage("Patient.search");
    String noneDeleted=msa.getMessage("PatientSearch.nonedeleted");
    String isInComp=msa.getMessage("PatientSearch.isAnElementInSavedComposition");
    if (msa.getMessage("PatientSearch.delete").equals(action)) {
      if (reportList != null) {
        List<AbstractReportObject> savedSearches=Context.getReportObjectService().getReportObjectsByType(OpenmrsConstants.REPORT_OBJECT_TYPE_PATIENTSEARCH);
        for (        String p : reportList) {
          int compositeTest=0;
          String psUsedInTheseCompositeSearches="";
          for (          ReportObject ro : savedSearches) {
            PatientSearchReportObject psro=(PatientSearchReportObject)ro;
            if (psro.getPatientSearch().isComposition()) {
              List<Object> psList=psro.getPatientSearch().getParsedComposition();
              for (              Object psObj : psList) {
                if (psObj.getClass().getName().contains("org.openmrs.reporting.PatientSearch")) {
                  PatientSearch psInner=(PatientSearch)psObj;
                  if (psInner.getSavedSearchId() != null) {
                    if (psInner.getSavedSearchId() == Integer.valueOf(p).intValue()) {
                      compositeTest=1;
                      if (!psUsedInTheseCompositeSearches.equals(""))                       psUsedInTheseCompositeSearches+=", ";
                      psUsedInTheseCompositeSearches+="'" + Context.getReportObjectService().getReportObject(Integer.valueOf(psro.getReportObjectId())).getName() + "'";
                    }
                  }
                }
              }
            }
          }
          if (compositeTest == 0) {
            try {
              as.deleteReportObject(Integer.valueOf(p));
              if (!success.equals(""))               success+="<br/>";
              success+=textPatientSearch + " " + p+ " "+ deleted;
            }
 catch (            APIException e) {
              log.warn("Error deleting report object",e);
              if (!error.equals(""))               error+="<br/>";
              error+=textPatientSearch + " " + p+ " "+ notDeleted;
            }
          }
 else {
            if (!error.equals(""))             error+="<br/>";
            error+=textPatientSearch + " " + p+ " "+ notDeleted+ ", "+ isInComp+ " "+ psUsedInTheseCompositeSearches;
          }
        }
      }
 else {
        success+=noneDeleted;
      }
    }
    view=getSuccessView();
    if (!success.equals(""))     httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,success);
    if (!error.equals(""))     httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,error);
  }
  return new ModelAndView(new RedirectView(view));
}
