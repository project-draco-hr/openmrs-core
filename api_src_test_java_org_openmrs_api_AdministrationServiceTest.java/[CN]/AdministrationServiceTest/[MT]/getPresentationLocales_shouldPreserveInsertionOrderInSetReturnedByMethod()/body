{
  String globalPropertyLocaleListAllowedData="en_GB, es, ja_JP, it_IT, pl_PL";
  Context.getAdministrationService().saveGlobalProperty(new GlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,globalPropertyLocaleListAllowedData));
  List<Locale> locales=new ArrayList<Locale>();
  locales.add(new Locale("pl","PL"));
  locales.add(new Locale("es"));
  locales.add(new Locale("en"));
  locales.add(new Locale("it","IT"));
  MutableResourceBundleMessageSource mutableResourceBundleMessageSource=Mockito.mock(MutableResourceBundleMessageSource.class);
  Mockito.when(mutableResourceBundleMessageSource.getLocales()).thenReturn(locales);
  MutableMessageSource mutableMessageSource=Context.getMessageSourceService().getActiveMessageSource();
  Context.getMessageSourceService().setActiveMessageSource(mutableResourceBundleMessageSource);
  List<Locale> presentationLocales=new ArrayList<Locale>(Context.getAdministrationService().getPresentationLocales());
  Context.getMessageSourceService().setActiveMessageSource(mutableMessageSource);
  Assert.assertEquals(new Locale("en"),presentationLocales.get(0));
  Assert.assertEquals(new Locale("es"),presentationLocales.get(1));
  Assert.assertEquals(new Locale("it","IT"),presentationLocales.get(2));
  Assert.assertEquals(new Locale("pl","PL"),presentationLocales.get(3));
}
