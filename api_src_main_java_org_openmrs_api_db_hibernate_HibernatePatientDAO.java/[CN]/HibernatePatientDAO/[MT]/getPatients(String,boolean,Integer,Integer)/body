{
  if (StringUtils.isBlank(query) || (length != null && length < 1)) {
    return Collections.emptyList();
  }
  if (start == null || start < 0) {
    start=0;
  }
  if (length == null) {
    length=HibernatePersonDAO.getMaximumSearchResults();
  }
  Criteria criteriaExactMatch=sessionFactory.getCurrentSession().createCriteria(Patient.class);
  criteriaExactMatch=new PatientSearchCriteria(sessionFactory,criteriaExactMatch).prepareCriteria(query,true,false,includeVoided);
  criteriaExactMatch.setProjection(Projections.rowCount());
  Integer listSize=((Number)criteriaExactMatch.uniqueResult()).intValue();
  criteriaExactMatch=sessionFactory.getCurrentSession().createCriteria(Patient.class);
  criteriaExactMatch=new PatientSearchCriteria(sessionFactory,criteriaExactMatch).prepareCriteria(query,true,true,includeVoided);
  LinkedHashSet<Patient> patients=new LinkedHashSet<Patient>();
  if (start < listSize) {
    setFirstAndMaxResult(criteriaExactMatch,start,length);
    patients.addAll(criteriaExactMatch.list());
    length-=patients.size();
  }
  if (length > 0) {
    Criteria criteriaAllMatch=sessionFactory.getCurrentSession().createCriteria(Patient.class);
    criteriaAllMatch=new PatientSearchCriteria(sessionFactory,criteriaAllMatch).prepareCriteria(query,null,false,includeVoided);
    criteriaAllMatch.setProjection(Projections.rowCount());
    start-=listSize;
    listSize=((Number)criteriaAllMatch.uniqueResult()).intValue();
    criteriaAllMatch=sessionFactory.getCurrentSession().createCriteria(Patient.class);
    criteriaAllMatch=new PatientSearchCriteria(sessionFactory,criteriaAllMatch).prepareCriteria(query,null,true,includeVoided);
    if (start < listSize) {
      setFirstAndMaxResult(criteriaAllMatch,start,length);
      List<Patient> patientsList=criteriaAllMatch.list();
      patients.addAll(patientsList);
      length-=patientsList.size();
    }
  }
  if (length > 0) {
    Criteria criteriaNoExactMatch=sessionFactory.getCurrentSession().createCriteria(Patient.class);
    criteriaNoExactMatch=new PatientSearchCriteria(sessionFactory,criteriaNoExactMatch).prepareCriteria(query,false,false,includeVoided);
    criteriaNoExactMatch.setProjection(Projections.rowCount());
    start-=listSize;
    listSize=((Number)criteriaNoExactMatch.uniqueResult()).intValue();
    criteriaNoExactMatch=sessionFactory.getCurrentSession().createCriteria(Patient.class);
    criteriaNoExactMatch=new PatientSearchCriteria(sessionFactory,criteriaNoExactMatch).prepareCriteria(query,false,true,includeVoided);
    if (start < listSize) {
      setFirstAndMaxResult(criteriaNoExactMatch,start,length);
      patients.addAll(criteriaNoExactMatch.list());
    }
  }
  return new ArrayList<Patient>(patients);
}
