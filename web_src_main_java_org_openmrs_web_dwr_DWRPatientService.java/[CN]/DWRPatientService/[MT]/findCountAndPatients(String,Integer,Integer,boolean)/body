{
  Map<String,Object> resultsMap=new HashMap<String,Object>();
  Collection<Object> objectList=new Vector<Object>();
  try {
    PatientService ps=Context.getPatientService();
    int patientCount=0;
    if (getMatchCount) {
      patientCount+=ps.getCountOfPatients(searchValue);
      if (patientCount == 0 && start == 0 && !searchValue.matches(".*\\d+.*")) {
        String[] names=searchValue.split(" ");
        StringBuilder newSearch=new StringBuilder("");
        for (        String name : names) {
          if (name.length() > 3)           name=name.substring(0,3);
          newSearch.append(name);
        }
        String newSearchStr=newSearch.toString().trim();
        if (!newSearchStr.equals(searchValue)) {
          int newPatientCount=ps.getCountOfPatients(newSearchStr);
          if (newPatientCount > 0) {
            resultsMap.put("searchAgain",newSearchStr);
            resultsMap.put("notification",Context.getMessageSourceService().getMessage("searchWidget.noResultsFoundFor",new Object[]{searchValue,newSearchStr},Context.getLocale()));
          }
        }
      }
 else       if (patientCount == 0 && searchValue.matches(".*\\d+.*")) {
        Collection<IdentifierValidator> pivs=ps.getAllIdentifierValidators();
        boolean shouldWarnUser=true;
        boolean validCheckDigit=false;
        boolean identifierMatchesValidationScheme=false;
        for (        IdentifierValidator piv : pivs) {
          try {
            if (piv.isValid(searchValue)) {
              shouldWarnUser=false;
              validCheckDigit=true;
            }
            identifierMatchesValidationScheme=true;
          }
 catch (          UnallowedIdentifierException e) {
          }
        }
        if (identifierMatchesValidationScheme) {
          if (shouldWarnUser)           resultsMap.put("notification","<b>" + Context.getMessageSourceService().getMessage("Patient.warning.inValidIdentifier") + "<b/>");
 else           if (validCheckDigit)           resultsMap.put("notification","<b style=\"color:green;\">" + Context.getMessageSourceService().getMessage("Patient.message.validIdentifier") + "<b/>");
        }
      }
 else {
        if (maximumResults == null)         setMaximumResults(getMaximumSearchResults());
        if (length != null && length > maximumResults)         length=maximumResults;
        if (patientCount > maximumResults) {
          patientCount=maximumResults;
          if (log.isDebugEnabled())           log.debug("Limitng the size of matching patients to " + maximumResults);
        }
      }
    }
    if (patientCount > 0 || !getMatchCount)     objectList=findBatchOfPatients(searchValue,false,start,length);
    resultsMap.put("count",patientCount);
    resultsMap.put("objectList",objectList);
  }
 catch (  Exception e) {
    log.error("Error while searching for patients",e);
    objectList.clear();
    objectList.add(Context.getMessageSourceService().getMessage("Patient.search.error") + " - " + e.getMessage());
    resultsMap.put("count",0);
    resultsMap.put("objectList",objectList);
  }
  return resultsMap;
}
