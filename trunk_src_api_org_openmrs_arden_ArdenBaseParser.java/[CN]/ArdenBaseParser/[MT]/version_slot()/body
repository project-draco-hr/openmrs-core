{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST version_slot_AST=null;
  try {
    AST tmp181_AST=null;
    tmp181_AST=astFactory.create(LT(1));
    astFactory.makeASTRoot(currentAST,tmp181_AST);
    match(VERSION);
    AST tmp182_AST=null;
    tmp182_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp182_AST);
    match(COLON);
    AST tmp183_AST=null;
    tmp183_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp183_AST);
    match(INTLIT);
    AST tmp184_AST=null;
    tmp184_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp184_AST);
    match(DOT);
    AST tmp185_AST=null;
    tmp185_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp185_AST);
    match(INTLIT);
    AST tmp186_AST=null;
    tmp186_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp186_AST);
    match(ENDBLOCK);
    version_slot_AST=(AST)currentAST.root;
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_8);
    }
 else {
      throw ex;
    }
  }
  returnAST=version_slot_AST;
}
