{
  if (log.isDebugEnabled()) {
    log.debug(this.getClass().getName() + ".validate...");
  }
  if (obj == null) {
    return;
  }
  super.validate(obj,errors);
  Patient patient=(Patient)obj;
  ValidationUtils.rejectIfEmptyOrWhitespace(errors,"gender","Person.gender.required");
  Boolean preferredIdentifierChosen=false;
  Collection<PatientIdentifier> identifiers=patient.isVoided() ? patient.getIdentifiers() : patient.getActiveIdentifiers();
  for (  PatientIdentifier pi : identifiers) {
    if (pi.isPreferred()) {
      preferredIdentifierChosen=true;
    }
  }
  if (!preferredIdentifierChosen && identifiers.size() != 1) {
    errors.reject("error.preferredIdentifier");
  }
  if (!errors.hasErrors()) {
    if (patient.getIdentifiers() != null) {
      for (      PatientIdentifier identifier : patient.getIdentifiers()) {
        patientIdentifierValidator.validate(identifier,errors);
      }
    }
  }
}
