{
  person.addName(Context.getPersonService().parsePersonName(name));
  person.setGender(gender);
  Date birthdate=null;
  boolean birthdateEstimated=false;
  if (StringUtils.isNotEmpty(date)) {
    try {
      if (date.length() < 5) {
        Calendar c=Calendar.getInstance();
        c.set(Calendar.YEAR,Integer.valueOf(date));
        c.set(Calendar.MONTH,0);
        c.set(Calendar.DATE,1);
        birthdate=c.getTime();
        birthdateEstimated=true;
      }
 else {
        birthdate=Context.getDateFormat().parse(date);
        birthdateEstimated=false;
      }
    }
 catch (    ParseException e) {
      log.debug("Error getting date from birthdate",e);
    }
  }
 else   if (age != null && !"".equals(age)) {
    Calendar c=Calendar.getInstance();
    c.setTime(new Date());
    Integer d=c.get(Calendar.YEAR);
    d=d - Integer.parseInt(age);
    try {
      birthdate=DateFormat.getDateInstance(DateFormat.SHORT).parse("01/01/" + d);
      birthdateEstimated=true;
    }
 catch (    ParseException e) {
      log.debug("Error getting date from age",e);
    }
  }
  if (birthdate != null) {
    person.setBirthdate(birthdate);
  }
  person.setBirthdateEstimated(birthdateEstimated);
}
