{
  name=name.replaceAll("  "," ");
  name=name.replace(", "," ");
  String[] names=name.split(" ");
  if (log.isDebugEnabled())   log.debug("name: " + name);
  Criteria criteria=sessionFactory.getCurrentSession().createCriteria(Patient.class).createAlias("names","name");
  String nameSoFar=names[0];
  for (int i=0; i < names.length; i++) {
    String n=names[i];
    if (n != null && n.length() > 0) {
      LogicalExpression searchExpression;
      LogicalExpression oneNameSearch=getNameSearch(n);
      searchExpression=oneNameSearch;
      if (i > 0) {
        nameSoFar+=" " + n;
        LogicalExpression fullNameSearch=getNameSearch(nameSoFar);
        searchExpression=Expression.or(oneNameSearch,fullNameSearch);
      }
      criteria.add(searchExpression);
    }
  }
  criteria.add(Expression.eq("name.voided",false));
  if (includeVoided == false)   criteria.add(Expression.eq("voided",new Boolean(false)));
  criteria.addOrder(Order.asc("name.givenName"));
  criteria.addOrder(Order.asc("name.middleName"));
  criteria.addOrder(Order.asc("name.familyName"));
  criteria.setFirstResult(0);
  criteria.setMaxResults(getMaximumSearchResults());
  return criteria.list();
}
