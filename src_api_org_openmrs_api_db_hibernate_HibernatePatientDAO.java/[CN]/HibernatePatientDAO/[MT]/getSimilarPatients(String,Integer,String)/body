{
  Session session=HibernateUtil.currentSession();
  if (birthyear == null)   birthyear=0;
  Set<Patient> patients=new LinkedHashSet<Patient>();
  name.replace(", "," ");
  String[] names=name.split(" ");
  Criteria criteria=session.createCriteria(Patient.class).createAlias("names","name");
  Disjunction disjunction=Expression.disjunction();
  for (  String n : names) {
    if (n != null && n.length() > 0) {
      disjunction.add(Expression.or(Expression.like("name.familyName",n,MatchMode.START),Expression.or(Expression.like("name.middleName",n,MatchMode.START),Expression.like("name.givenName",n,MatchMode.START))));
    }
  }
  criteria.add(disjunction);
  LogicalExpression birthdayMatch=Expression.or(Expression.sql("year(birthdate) between " + (birthyear - 1) + " and "+ (birthyear + 1)),Expression.isNull("birthdate"));
  SimpleExpression genderMatch=Expression.eq("gender",gender);
  if (birthyear != 0 && gender != null) {
    criteria.add(Expression.and(birthdayMatch,genderMatch));
  }
 else   if (birthyear != 0) {
    criteria.add(birthdayMatch);
  }
 else   if (gender != null) {
    criteria.add(genderMatch);
  }
  criteria.addOrder(Order.asc("name.givenName"));
  criteria.addOrder(Order.asc("name.middleName"));
  criteria.addOrder(Order.asc("name.familyName"));
  patients.addAll(criteria.list());
  return patients;
}
