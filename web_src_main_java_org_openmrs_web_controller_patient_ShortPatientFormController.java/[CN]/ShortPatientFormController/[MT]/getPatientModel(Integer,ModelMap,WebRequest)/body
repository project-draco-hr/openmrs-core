{
  Patient patient;
  if (patientId != null) {
    patient=Context.getPatientService().getPatientOrPromotePerson(patientId);
    if (patient == null) {
      throw new IllegalArgumentException("No patient or person with the given id");
    }
  }
 else {
    patient=new Patient();
    String name=request.getParameter("addName");
    if (!StringUtils.isBlank(name)) {
      String gender=request.getParameter("addGender");
      String date=request.getParameter("addBirthdate");
      String age=request.getParameter("addAge");
      PersonFormController.getMiniPerson(patient,name,gender,date,age);
    }
  }
  if (patient.getPersonName() != null && patient.getPersonName().getId() != null)   model.addAttribute("personNameCache",PersonName.newInstance(patient.getPersonName()));
 else   model.addAttribute("personNameCache",new PersonName());
  if (patient.getPersonAddress() != null && patient.getPersonAddress().getId() != null)   model.addAttribute("personAddressCache",patient.getPersonAddress().clone());
 else   model.addAttribute("personAddressCache",new PersonAddress());
  String propCause=Context.getAdministrationService().getGlobalProperty("concept.causeOfDeath");
  Concept conceptCause=Context.getConceptService().getConcept(propCause);
  String causeOfDeathOther="";
  if (conceptCause != null && patient.getPatientId() != null) {
    List<Obs> obssDeath=Context.getObsService().getObservationsByPersonAndConcept(patient,conceptCause);
    if (obssDeath.size() == 1) {
      Obs obsDeath=obssDeath.iterator().next();
      causeOfDeathOther=obsDeath.getValueText();
      if (causeOfDeathOther == null) {
        log.debug("cod is null, so setting to empty string");
        causeOfDeathOther="";
      }
 else {
        log.debug("cod is valid: " + causeOfDeathOther);
      }
    }
 else {
      log.debug("obssDeath is wrong size: " + obssDeath.size());
    }
  }
 else {
    log.debug("No concept cause found");
  }
  model.addAttribute("causeOfDeathOther",causeOfDeathOther);
  return new ShortPatientModel(patient);
}
