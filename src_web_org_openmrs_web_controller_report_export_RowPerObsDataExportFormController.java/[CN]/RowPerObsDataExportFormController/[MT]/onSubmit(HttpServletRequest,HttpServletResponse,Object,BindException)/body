{
  HttpSession httpSession=request.getSession();
  String view=getFormView();
  if (Context.isAuthenticated()) {
    RowPerObsDataExportReportObject report=(RowPerObsDataExportReportObject)obj;
    String[] patientIds=request.getParameterValues("patientId");
    report.setPatientIds(new Vector<Integer>());
    if (patientIds != null)     for (    String patientId : patientIds)     if (patientId != null && !patientId.equals(""))     report.addPatientId(Integer.valueOf(patientId));
    Integer location=ServletRequestUtils.getIntParameter(request,"location",0);
    if (location > 0)     report.setLocation(Context.getLocationService().getLocation(location));
    String[] columnIds=request.getParameterValues("columnId");
    report.setColumns(new Vector<ExportColumn>());
    if (columnIds != null) {
      for (      String columnId : columnIds) {
        String columnName=request.getParameter("simpleName_" + columnId);
        if (columnName != null)         report.addSimpleColumn(columnName,request.getParameter("simpleValue_" + columnId));
 else {
          columnName=request.getParameter("conceptColumnName_" + columnId);
          if (columnName != null) {
            String conceptId=request.getParameter("conceptId_" + columnId);
            try {
              Integer.valueOf(conceptId);
            }
 catch (            NumberFormatException e) {
              Concept c=Context.getConceptService().getConceptByName(conceptId);
              if (c == null)               throw new APIException("Concept name : + '" + conceptId + "' could not be found in the dictionary");
              conceptId=c.getConceptId().toString();
            }
            String[] extras=request.getParameterValues("conceptExtra_" + columnId);
            report.setRowPerObsColumn(columnName,conceptId,extras);
          }
 else {
            columnName=request.getParameter("calculatedName_" + columnId);
            if (columnName != null) {
              String columnValue=request.getParameter("calculatedValue_" + columnId);
              report.addCalculatedColumn(columnName,columnValue);
            }
 else {
              columnName=request.getParameter("cohortName_" + columnId);
              if (columnName != null) {
                String cohortIdValue=request.getParameter("cohortIdValue_" + columnId);
                String filterIdValue=request.getParameter("filterIdValue_" + columnId);
                String searchIdValue=request.getParameter("patientSearchIdValue_" + columnId);
                String valueIfTrue=request.getParameter("cohortIfTrue_" + columnId);
                String valueIfFalse=request.getParameter("cohortIfFalse_" + columnId);
                Integer cohortId=null;
                Integer filterId=null;
                Integer searchId=null;
                try {
                  cohortId=Integer.valueOf(cohortIdValue);
                }
 catch (                Exception ex) {
                }
                try {
                  filterId=Integer.valueOf(filterIdValue);
                }
 catch (                Exception ex) {
                }
                try {
                  searchId=Integer.valueOf(searchIdValue);
                }
 catch (                Exception ex) {
                }
                if (cohortId != null || filterId != null || searchId != null)                 report.addCohortColumn(columnName,cohortId,filterId,searchId,valueIfTrue,valueIfFalse);
              }
 else               log.warn("Cannot determine column type for column: " + columnId);
            }
          }
        }
      }
    }
    String saveAsNew=ServletRequestUtils.getStringParameter(request,"saveAsNew","");
    if (!saveAsNew.equals(""))     report.setReportObjectId(null);
    Context.getReportObjectService().saveReportObject(report);
    String action=ServletRequestUtils.getRequiredStringParameter(request,"action");
    MessageSourceAccessor msa=getMessageSourceAccessor();
    if (action.equals(msa.getMessage("DataExport.save"))) {
      view=getSuccessView();
      httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"DataExport.saved");
    }
  }
  return new ModelAndView(new RedirectView(view));
}
