{
  if (!Order.Action.DISCONTINUE.equals(order.getAction()))   return;
  Order previousOrder=order.getPreviousOrder();
  if (previousOrder != null) {
    if (!previousOrder.getConcept().equals(order.getConcept())) {
      throw new APIException("Concept of previous order and this order should be the same");
    }
    if (previousOrder.getDateStopped() == null) {
      discontinue(previousOrder,order.getStartDate());
    }
    return;
  }
  List<? extends Order> orders=getActiveOrders(order.getPatient(),order.getClass(),order.getCareSetting(),null);
  for (  Order activeOrder : orders) {
    if (activeOrder.getConcept().equals(order.getConcept())) {
      order.setPreviousOrder(activeOrder);
      discontinue(activeOrder,order.getStartDate());
      return;
    }
  }
  throw new APIException("Could not find an active order with the concept " + order.getConcept() + " to discontinue. ");
}
