{
  if (!Order.Action.DISCONTINUE.equals(order.getAction())) {
    return;
  }
  Order previousOrder=order.getPreviousOrder();
  if (previousOrder != null) {
    if (!previousOrder.getConcept().equals(order.getConcept())) {
      throw new APIException("Concept of previous order and this order should be the same");
    }
    stopOrder(previousOrder,order.getStartDate());
    return;
  }
  List<? extends Order> orders=getActiveOrders(order.getPatient(),order.getOrderType(),order.getCareSetting(),null);
  boolean isDrugOrderAndHasADrug=DrugOrder.class.isAssignableFrom(order.getClass()) && ((DrugOrder)order).getDrug() != null;
  for (  Order activeOrder : orders) {
    boolean shouldMarkAsDiscontinued=false;
    if (isDrugOrderAndHasADrug) {
      DrugOrder drugOrder1=(DrugOrder)order;
      System.out.println("ID:" + activeOrder.getId());
      DrugOrder drugOrder2=(DrugOrder)activeOrder;
      if (OpenmrsUtil.nullSafeEquals(drugOrder1.getDrug(),drugOrder2.getDrug())) {
        shouldMarkAsDiscontinued=true;
      }
    }
 else     if (activeOrder.getConcept().equals(order.getConcept())) {
      shouldMarkAsDiscontinued=true;
    }
    if (shouldMarkAsDiscontinued) {
      order.setPreviousOrder(activeOrder);
      stopOrder(activeOrder,order.getStartDate());
      return;
    }
  }
  String errorMessage="Could not find an active order with the concept \"" + order.getConcept().getDisplayString() + "\" to discontinue.";
  if (isDrugOrderAndHasADrug) {
    errorMessage="Could not find an active drug order with the drug \"" + ((DrugOrder)order).getDrug().getName() + "\" to discontinue.";
  }
  throw new APIException(errorMessage);
}
