{
  Properties props=super.getRuntimeProperties();
  props.setProperty(ModuleConstants.RUNTIMEPROPERTY_MODULE_LIST_TO_LOAD,"org/openmrs/hl7/include/examplehl7handlers-0.1.omod");
  ModuleUtil.startup(props);
  Class<Application> c=(Class<Application>)Context.loadClass("org.openmrs.module.examplehl7handlers.ADRHandler");
  Application classInstance=c.newInstance();
  HashMap<String,Application> map=new HashMap<String,Application>();
  map.put("ADR_A19",classInstance);
  HL7ServiceImpl.getInstance().setHL7Handlers(map);
  HL7Service hl7service=Context.getHL7Service();
  Message message=hl7service.parseHL7String("MSH|^~\\&|FORMENTRY|AMRS.ELD|HL7LISTENER|AMRS.ELD|20080226102656||ADR^A19|JqnfhKKtouEz8kzTk6Zo|P|2.5|1||||||||16^AMRS.ELD.FORMID\r" + "PID|||3^^^^||John3^Doe^||\r" + "PV1||O|1^Unknown Location||||1^Super User (1-8)|||||||||||||||||||||||||||||||||||||20080212|||||||V\r"+ "ORC|RE||||||||20080226102537|1^Super User\r"+ "OBR|1|||1238^MEDICAL RECORD OBSERVATIONS^99DCT\r"+ "OBX|1|NM|5497^CD4, BY FACS^99DCT||450|||||||||20080206\r"+ "OBX|2|DT|5096^RETURN VISIT DATE^99DCT||20080229|||||||||20080212");
  Assert.assertNotNull(message);
  try {
    Message result=hl7service.processHL7Message(message);
    Assert.fail("Should not be here. The ADR_A19 parser provided by the module throws an ApplicationException.");
  }
 catch (  HL7Exception e) {
    if (e.getCause() != null)     Assert.assertEquals("In ADR A19 parser",e.getCause().getMessage());
 else {
      log.error("unable to parse message",e);
      Assert.fail("something bad happened, check the log statement 1 line up");
    }
  }
  ModuleUtil.shutdown();
}
