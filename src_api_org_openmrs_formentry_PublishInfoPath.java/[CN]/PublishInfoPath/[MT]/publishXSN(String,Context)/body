{
  log.debug("publishing xsn at: " + xsnFilePath);
  File tempDir=FormEntryUtil.expandXsn(xsnFilePath);
  if (tempDir == null)   throw new IOException("Filename not found: '" + xsnFilePath + "'");
  Form form=determineForm(tempDir,context);
  String outputFilename=form.getUri();
  String namespace=form.getSchemaNamespace();
  String serverUrl=FormEntryConstants.FORMENTRY_INFOPATH_SERVER_URL;
  String publishUrl=FormEntryConstants.FORMENTRY_INFOPATH_PUBLISH_URL + outputFilename;
  String taskPaneCaption=FormEntryConstants.FORMENTRY_INFOPATH_TASKPANE_CAPTION;
  String taskPaneInitialUrl=FormEntryConstants.FORMENTRY_INFOPATH_TASKPANE_INITIAL_URL;
  String submitUrl=FormEntryConstants.FORMENTRY_INFOPATH_SUBMIT_URL;
  String schemaFilename=FormEntryConstants.FORMENTRY_DEFAULT_SCHEMA_NAME;
  String outputDir=FormEntryConstants.FORMENTRY_INFOPATH_OUTPUT_DIR;
  String solutionVersion=prepareManifest(tempDir,publishUrl,namespace,taskPaneCaption,taskPaneInitialUrl,submitUrl);
  log.debug("\nsolution version: " + solutionVersion);
  File schema=FormEntryUtil.findFile(tempDir,schemaFilename);
  if (schema == null)   throw new IOException("Schema: '" + schemaFilename + "' cannot be null");
  String tag="xs:schema";
  setNamespace(schema,tag,namespace);
  Map<String,String> vars=new HashMap<String,String>();
  vars.put("SERVER_URL",serverUrl);
  setVariables(tempDir,"openmrs-infopath.js",vars);
  FormEntryUtil.createDdf(tempDir,outputDir,outputFilename);
  String archiveDir=FormEntryConstants.FORMENTRY_INFOPATH_ARCHIVE_DIR;
  if (archiveDir != null) {
    File xsnFile=new File(xsnFilePath);
    String xsnArchiveFilePath=form.getUri() + "-" + form.getVersion()+ "-"+ form.getBuild()+ "-"+ new SimpleDateFormat(FormEntryConstants.FORMENTRY_INFOPATH_ARCHIVE_DATE_FORMAT,context.getLocale()).format(new Date())+ ".xsn";
    File xsnArchiveFile=new File(archiveDir,xsnArchiveFilePath);
    boolean success=copyFile(xsnFile,xsnArchiveFile);
    if (!success) {
      log.warn("Unable to archive XSN " + xsnFilePath + " to "+ xsnArchiveFilePath);
    }
  }
  FormEntryUtil.makeCab(tempDir);
  deleteDirectory(tempDir);
  form.setInfoPathSolutionVersion(solutionVersion);
  form.setBuild(form.getBuild() + 1);
  context.getFormService().updateForm(form);
}
