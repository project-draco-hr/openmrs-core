{
  setUrl(defaultUrl);
  if (fieldGenTag != null) {
    String initialValue="";
    checkEmptyVal("");
    String optionHeader="";
    if (this.fieldGenTag.getParameterMap() != null) {
      optionHeader=(String)this.fieldGenTag.getParameterMap().get("optionHeader");
    }
    if (optionHeader == null)     optionHeader="";
    String onChange="";
    if (this.fieldGenTag.getParameterMap() != null) {
      onChange=(String)this.fieldGenTag.getParameterMap().get("onChange");
    }
    if (onChange == null)     onChange="";
    String reasonProperty="";
    if (this.fieldGenTag.getParameterMap() != null) {
      reasonProperty=(String)this.fieldGenTag.getParameterMap().get("globalProp");
    }
    if (reasonProperty == null)     reasonProperty="";
    String reasonConceptId=Context.getAdministrationService().getGlobalProperty(reasonProperty);
    Concept reasonConcept=Context.getConceptService().getConcept(reasonConceptId);
    if (reasonConcept == null)     log.debug("Could not get even the default reason concept from global properties");
    if (this.fieldGenTag.getParameterMap() != null) {
      String reasonSetOverride=(String)this.fieldGenTag.getParameterMap().get("reasonSet");
      if (reasonSetOverride != null)       reasonConcept=Context.getConceptService().getConcept(reasonSetOverride);
    }
    List<Concept> possibleReasons=null;
    if (reasonConcept != null) {
      Collection<ConceptAnswer> answers=reasonConcept.getAnswers();
      for (      ConceptAnswer answer : answers) {
        if (possibleReasons == null)         possibleReasons=new ArrayList<Concept>();
        possibleReasons.add(answer.getAnswerConcept());
      }
    }
 else {
      log.debug("No reason concept found, either as global property or override.  Cannot generate list of possible reasons.");
    }
    Map<String,String> reasons=new HashMap<String,String>();
    if (possibleReasons != null) {
      for (      Concept reason : possibleReasons) {
        reasons.put(reason.getConceptId().toString(),reason.getName(Context.getLocale()).getName());
      }
    }
 else {
      log.debug("No possible reasons found.");
    }
    setParameter("initialValue",initialValue);
    setParameter("optionHeader",optionHeader);
    setParameter("onChange",onChange);
    setParameter("reasons",reasons);
  }
}
