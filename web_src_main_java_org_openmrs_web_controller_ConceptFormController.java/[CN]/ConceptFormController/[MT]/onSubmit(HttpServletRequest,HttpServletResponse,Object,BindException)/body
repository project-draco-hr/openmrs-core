{
  HttpSession httpSession=request.getSession();
  ConceptService cs=Context.getConceptService();
  if (Context.isAuthenticated()) {
    ConceptFormBackingObject conceptBackingObject=(ConceptFormBackingObject)obj;
    MessageSourceAccessor msa=getMessageSourceAccessor();
    String action=request.getParameter("action");
    if (action.equals(msa.getMessage("Concept.delete","Delete Concept"))) {
      Concept concept=conceptBackingObject.getConcept();
      try {
        cs.purgeConcept(concept);
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Concept.deleted");
        return new ModelAndView(new RedirectView("index.htm"));
      }
 catch (      ConceptsLockedException cle) {
        log.error("Tried to delete concept while concepts were locked",cle);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.concepts.locked");
      }
catch (      DataIntegrityViolationException e) {
        log.error("Unable to delete a concept because it is in use: " + concept,e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.delete");
      }
catch (      Exception e) {
        log.error("Unable to delete concept because an error occurred: " + concept,e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.delete");
      }
      return new ModelAndView(new RedirectView(getSuccessView() + "?conceptId=" + concept.getConceptId()));
    }
 else {
      Concept concept=conceptBackingObject.getConceptFromFormData();
      if (concept.getConceptId() != null)       concept.getCreator().getPersonName();
      try {
        new ConceptValidator().validate(concept,errors);
        if (!errors.hasErrors()) {
          cs.saveConcept(concept);
          httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Concept.saved");
          return new ModelAndView(new RedirectView(getSuccessView() + "?conceptId=" + concept.getConceptId()));
        }
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.save");
      }
 catch (      ConceptsLockedException cle) {
        log.error("Tried to save concept while concepts were locked",cle);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.concepts.locked");
        errors.reject("concept","Concept.concepts.locked");
      }
catch (      DuplicateConceptNameException e) {
        log.error("Tried to save concept with a duplicate name",e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.save");
        errors.rejectValue("concept","Concept.name.duplicate");
      }
catch (      APIException e) {
        log.error("Error while trying to save concept",e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Concept.cannot.save");
        errors.reject("concept","Concept.cannot.save");
      }
      return showForm(request,response,errors);
    }
  }
  return new ModelAndView(new RedirectView(getFormView()));
}
