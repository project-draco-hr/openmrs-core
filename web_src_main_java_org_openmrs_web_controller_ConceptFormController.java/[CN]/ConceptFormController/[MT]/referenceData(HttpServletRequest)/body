{
  Map<String,Object> map=new HashMap<String,Object>();
  ConceptService cs=Context.getConceptService();
  String defaultVerbose="false";
  if (Context.isAuthenticated()) {
    defaultVerbose=Context.getAuthenticatedUser().getUserProperty(OpenmrsConstants.USER_PROPERTY_SHOW_VERBOSE);
  }
  map.put("defaultVerbose",defaultVerbose.equals("true") ? true : false);
  map.put("tags",cs.getAllConceptNameTags());
  if (Context.hasPrivilege(PrivilegeConstants.VIEW_CONCEPT_CLASSES)) {
    map.put("classes",cs.getAllConceptClasses());
  }
  if (Context.hasPrivilege(PrivilegeConstants.VIEW_CONCEPT_DATATYPES)) {
    map.put("datatypes",cs.getAllConceptDatatypes());
  }
  String conceptId=request.getParameter("conceptId");
  boolean dataTypeReadOnly=false;
  if (Context.hasPrivilege(PrivilegeConstants.VIEW_OBS)) {
    try {
      Concept concept=cs.getConcept(Integer.valueOf(conceptId));
      dataTypeReadOnly=cs.hasAnyObservation(concept);
      if (concept != null && concept.getDatatype().isBoolean()) {
        map.put("isBoolean",true);
      }
    }
 catch (    NumberFormatException ex) {
    }
  }
  map.put("dataTypeReadOnly",dataTypeReadOnly);
  map.put("handlers",Context.getObsService().getHandlers());
  map.put("locale",Context.getLocale());
  return map;
}
