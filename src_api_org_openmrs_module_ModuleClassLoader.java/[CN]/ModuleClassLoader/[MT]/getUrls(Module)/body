{
  List<URL> result=new LinkedList<URL>();
  File tmpModuleDir=getLibCacheFolderForModule(module);
  File tmpModuleJar=new File(tmpModuleDir,module.getModuleId() + ".jar");
  log.debug("Copying module file into: " + tmpModuleDir.getAbsolutePath());
  if (!tmpModuleJar.exists()) {
    try {
      tmpModuleJar.createNewFile();
    }
 catch (    IOException io) {
      log.warn("Unable to create tmpModuleFile",io);
    }
  }
  FileInputStream in=null;
  FileOutputStream out=null;
  try {
    in=new FileInputStream(module.getFile());
    out=new FileOutputStream(tmpModuleJar);
    OpenmrsUtil.copyFile(in,out);
  }
 catch (  IOException io) {
    log.warn("Unable to copy tmpModuleFile",io);
  }
 finally {
    try {
      if (in != null)       in.close();
    }
 catch (    IOException e) {
      log.error("Error while closing in stream for jar",e);
    }
    try {
      if (out != null)       out.close();
    }
 catch (    IOException e) {
      log.error("Error while closing out stream for jar",e);
    }
  }
  URL moduleFileURL=null;
  try {
    moduleFileURL=ModuleUtil.file2url(tmpModuleJar);
    result.add(moduleFileURL);
  }
 catch (  MalformedURLException e) {
    log.warn("Unable to add files from module to URL list: " + module.getModuleId(),e);
  }
  try {
    log.debug("Expanding /lib folder in module");
    ModuleUtil.expandJar(module.getFile(),tmpModuleDir,"lib",true);
    File libdir=new File(tmpModuleDir,"lib");
    if (libdir != null && libdir.exists())     for (    File file : libdir.listFiles()) {
      log.debug("Adding file to results: " + file.getAbsolutePath());
      result.add(ModuleUtil.file2url(file));
    }
  }
 catch (  MalformedURLException e) {
    log.warn("Error while adding module 'lib' folder to URL result list");
  }
catch (  IOException io) {
    log.warn("Error while expanding lib folder",io);
  }
  return result;
}
