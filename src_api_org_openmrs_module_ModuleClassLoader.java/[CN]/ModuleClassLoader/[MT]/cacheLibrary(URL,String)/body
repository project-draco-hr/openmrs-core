{
  File cacheFolder=OpenmrsClassLoader.getLibCacheFolder();
  if (libraryCache.containsKey(libUrl)) {
    return libraryCache.get(libUrl);
  }
  File result=null;
  try {
    if (cacheFolder == null) {
      throw new IOException("can't initialize libraries cache folder");
    }
    File libCacheModuleFolder=new File(cacheFolder,getModule().getModuleId());
    if (!libCacheModuleFolder.exists() && !libCacheModuleFolder.mkdirs()) {
      throw new IOException("can't create cache folder " + libCacheModuleFolder);
    }
    result=new File(libCacheModuleFolder,libname);
    InputStream in=OpenmrsUtil.getResourceInputStream(libUrl);
    try {
      FileOutputStream fileOut=new FileOutputStream(result);
      OutputStream out=new BufferedOutputStream(fileOut);
      try {
        OpenmrsUtil.copyFile(in,out);
      }
  finally {
        try {
          out.close();
        }
 catch (        Exception e) {
        }
        try {
          fileOut.close();
        }
 catch (        Exception e) {
        }
      }
    }
  finally {
      try {
        in.close();
      }
 catch (      Exception e) {
      }
    }
    libraryCache.put(libUrl,result);
    if (log.isDebugEnabled()) {
      log.debug("library " + libname + " successfully cached from URL "+ libUrl+ " and saved to local file "+ result);
    }
  }
 catch (  IOException ioe) {
    log.error("can't cache library " + libname + " from URL "+ libUrl,ioe);
    libraryCache.put(libUrl,null);
    result=null;
  }
  return result;
}
