{
  executeDataSet("org/openmrs/api/include/OrderServiceTest-otherEncounters.xml");
  Patient patient=Context.getPatientService().getPatient(7);
  EncounterService es=Context.getEncounterService();
  OrderService os=Context.getOrderService();
  Encounter testEncounter=es.getEncountersByPatient(patient).get(0);
  Assert.assertFalse(testEncounter.isVoided());
  Assert.assertNull(testEncounter.getDateVoided());
  Assert.assertNull(testEncounter.getVoidedBy());
  Assert.assertNull(testEncounter.getVoidReason());
  Assert.assertFalse(testEncounter.getOrders().isEmpty());
  Order testOrder=testEncounter.getOrders().iterator().next();
  Assert.assertFalse(testOrder.isVoided());
  Context.getOrderService().voidOrder(testOrder,"testing");
  Assert.assertTrue(testOrder.isVoided());
  TestUtil.waitForClockTick();
  es.voidEncounter(testEncounter,"random reason");
  Assert.assertTrue(testEncounter.isVoided());
  Assert.assertTrue(testOrder.isVoided());
  List<Patient> patients=new ArrayList<Patient>();
  patients.add(patient);
  TestUtil.waitForClockTick();
  patient=Context.getPatientService().voidPatient(patient,"Void Reason");
  Assert.assertTrue(patient.isVoided());
  new PatientDataUnvoidHandler().handle(patient,patient.getVoidedBy(),patient.getDateVoided(),null);
  testEncounter=es.getEncounter(testEncounter.getId());
  Assert.assertTrue(testEncounter.isVoided());
  Assert.assertNotNull(testEncounter.getDateVoided());
  Assert.assertNotNull(testEncounter.getVoidedBy());
  Assert.assertNotNull(testEncounter.getVoidReason());
  Assert.assertTrue(testOrder.isVoided());
  Assert.assertNotNull(testOrder.getDateVoided());
  Assert.assertNotNull(testOrder.getVoidedBy());
  Assert.assertNotNull(testOrder.getVoidReason());
}
