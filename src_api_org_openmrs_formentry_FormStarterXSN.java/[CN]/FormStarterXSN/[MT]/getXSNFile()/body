{
  String xsnFolderPath=FormEntryConstants.FORMENTRY_STARTER_XSN_FOLDER_PATH;
  log.debug("Getting starter XSN contents: " + xsnFolderPath);
  File tempDir=copyFile(xsnFolderPath);
  if (tempDir == null)   throw new IOException("Filename not found: '" + xsnFolderPath + "'");
  String outputDir=tempDir.getAbsolutePath();
  String outputFilename="starter_template.xsn";
  String namespace=form.getSchemaNamespace();
  String serverUrl=FormEntryConstants.FORMENTRY_INFOPATH_SERVER_URL;
  String publishUrl=FormEntryConstants.FORMENTRY_INFOPATH_PUBLISH_URL + outputFilename;
  String submitUrl=FormEntryConstants.FORMENTRY_INFOPATH_SUBMIT_URL;
  String schemaFilename=FormEntryConstants.FORMENTRY_DEFAULT_SCHEMA_NAME;
  String templateFilename=FormEntryConstants.FORMENTRY_DEFAULT_TEMPLATE_NAME;
  String sampleDataFilename=FormEntryConstants.FORMENTRY_DEFAULT_SAMPLEDATA_NAME;
  String solutionVersion=prepareManifest(tempDir,publishUrl,namespace);
  if (solutionVersion == null)   log.warn("Solution Version is null");
  log.debug("\nsolution version: " + solutionVersion);
  File schemaFile=FormEntryUtil.findFile(tempDir,schemaFilename);
  if (schemaFile == null)   throw new IOException("Schema: '" + schemaFilename + "' cannot be null");
  FileWriter schemaOutput=new FileWriter(schemaFile,false);
  schemaOutput.write(schema);
  schemaOutput.close();
  File templateFile=FormEntryUtil.findFile(tempDir,templateFilename);
  if (templateFile == null)   throw new IOException("Template: '" + templateFilename + "' cannot be null");
  FileWriter templateOutput=new FileWriter(templateFile,false);
  log.debug(template);
  templateOutput.write(template);
  templateOutput.close();
  File sampleDataFile=FormEntryUtil.findFile(tempDir,sampleDataFilename);
  if (sampleDataFile == null)   throw new IOException("Template: '" + sampleDataFilename + "' cannot be null");
  FileWriter sampleDataOutput=new FileWriter(sampleDataFile,false);
  sampleDataOutput.write(template);
  sampleDataOutput.close();
  Map<String,String> vars=new HashMap<String,String>();
  vars.put("SERVER_URL",serverUrl);
  setVariables(tempDir,"openmrs-infopath.js",vars);
  FormEntryUtil.createDdf(tempDir,outputDir,outputFilename);
  FormEntryUtil.makeCab(tempDir);
  return FormEntryUtil.findFile(tempDir,outputFilename);
}
