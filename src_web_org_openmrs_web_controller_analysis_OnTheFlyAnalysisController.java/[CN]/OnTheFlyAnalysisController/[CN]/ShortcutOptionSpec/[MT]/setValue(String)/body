{
  this.value=value;
  concrete=value == null || !value.startsWith("@");
  remove=value == null || "*".equals(value);
  if (concrete) {
    args=null;
  }
 else {
    try {
      List<String> temp=new ArrayList<String>();
      List<String> tempHidden=new ArrayList<String>();
      List<String> tempHiddenNames=new ArrayList<String>();
      className=value.substring(1,value.indexOf('('));
      String s=value.substring(value.indexOf('(') + 1,value.lastIndexOf(')'));
      String[] t=s.split(",");
      for (      String arg : t) {
        String[] u=arg.split("\\$");
        if (u.length != 2) {
          StringBuilder msg=new StringBuilder();
          msg.append(arg);
          msg.append(" -> ");
          for (          String str : u) {
            msg.append(str).append(" , ");
          }
          throw new IllegalArgumentException("shortcut option arguments must be label$Type. " + msg);
        }
        if (u[0].indexOf('=') > 0) {
          String[] v=u[0].split("=");
          if (v.length != 2) {
            StringBuilder msg=new StringBuilder();
            msg.append(arg);
            msg.append(" -> ");
            for (            String str : u) {
              msg.append(str).append(" , ");
            }
            throw new IllegalArgumentException("shortcut option arguments has an incorrect equal sign. " + msg);
          }
          String hidden="<input type=hidden name=\"" + v[0] + "\" value=\""+ v[1]+ "\"/>";
          tempHidden.add(hidden);
          tempHiddenNames.add(v[0]);
          log.debug("hidden arg " + v[0] + " -> "+ v[1]);
        }
 else {
          temp.add(u[0]);
        }
      }
      if (temp.size() > 0) {
        args=temp;
      }
      if (tempHidden.size() > 0) {
        hiddenArgs=tempHidden;
        hiddenArgNames=tempHiddenNames;
      }
    }
 catch (    IndexOutOfBoundsException ex) {
      log.warn("Error parsing arguments list in " + value);
      log.warn(ex);
    }
  }
}
