{
  executeDataSet(OBS_DATASET_XML);
  final String newValueText="some new value that for sure is different";
  final Integer encounterId=201;
  Encounter encounter=encounterService.getEncounter(encounterId);
  final int initialAllObsCount=encounter.getAllObs(true).size();
  final int c=obsService.getObservationsByPerson(encounter.getPatient()).size();
  Obs alreadyVoidedObs=obsService.getObs(101);
  Obs toBeVoidedObs=obsService.getObs(103);
  Obs unVoidedObsToUpdate=obsService.getObs(102);
  Obs unVoidedObs=obsService.getObs(104);
  assertTrue(encounter.getAllObs(true).contains(alreadyVoidedObs));
  assertTrue(encounter.getAllObs(true).contains(toBeVoidedObs));
  assertTrue(encounter.getAllObs(true).contains(unVoidedObsToUpdate));
  assertTrue(encounter.getAllObs(true).contains(unVoidedObs));
  assertNotEquals(newValueText,alreadyVoidedObs.getValueText());
  assertNotEquals(newValueText,toBeVoidedObs.getValueText());
  assertNotEquals(newValueText,unVoidedObsToUpdate.getValueText());
  assertNotEquals(newValueText,unVoidedObs.getValueText());
  assertTrue(alreadyVoidedObs.getVoided());
  assertNotNull(alreadyVoidedObs.getVoidedBy());
  assertNotNull(alreadyVoidedObs.getDateVoided());
  assertNotNull(alreadyVoidedObs.getVoidReason());
  assertFalse(toBeVoidedObs.getVoided());
  assertNull(toBeVoidedObs.getVoidedBy());
  assertNull(toBeVoidedObs.getDateVoided());
  assertNull(toBeVoidedObs.getVoidReason());
  assertFalse(unVoidedObsToUpdate.getVoided());
  assertNull(unVoidedObsToUpdate.getVoidedBy());
  assertNull(unVoidedObsToUpdate.getDateVoided());
  assertNull(unVoidedObsToUpdate.getVoidReason());
  assertFalse(unVoidedObs.getVoided());
  assertNull(unVoidedObs.getVoidedBy());
  assertNull(unVoidedObs.getDateVoided());
  assertNull(unVoidedObs.getVoidReason());
  alreadyVoidedObs.setValueText(newValueText);
  toBeVoidedObs.setValueText(newValueText);
  unVoidedObsToUpdate.setValueText(newValueText);
  toBeVoidedObs.setVoided(true);
  encounter.setEncounterDatetime(new Date());
  encounterService.saveEncounter(encounter);
  Context.evictFromSession(encounter);
  encounter=encounterService.getEncounter(encounterId);
  assertEquals(initialAllObsCount + 1,encounter.getAllObs(true).size());
  assertEquals(newValueText,alreadyVoidedObs.getValueText());
  assertEquals(newValueText,toBeVoidedObs.getValueText());
  assertNotEquals(newValueText,unVoidedObsToUpdate.getValueText());
  assertTrue(unVoidedObsToUpdate.getVoided());
  assertNotNull(unVoidedObsToUpdate.getVoidedBy());
  assertNotNull(unVoidedObsToUpdate.getDateVoided());
  assertNotNull(unVoidedObsToUpdate.getVoidReason());
  assertFalse(unVoidedObs.getVoided());
  assertNull(unVoidedObs.getVoidedBy());
  assertNull(unVoidedObs.getDateVoided());
  assertNull(unVoidedObs.getVoidReason());
}
