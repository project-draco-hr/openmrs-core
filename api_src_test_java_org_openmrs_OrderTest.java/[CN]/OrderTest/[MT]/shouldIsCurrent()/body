{
  DateFormat ymd=new SimpleDateFormat("yyyy-MM-dd");
  Order o=new Order();
  assertTrue("dateActivated==null && no end date should always be current",o.isCurrent(ymd.parse("2007-10-26")));
  o.setDateActivated(ymd.parse("2007-01-01"));
  assertFalse("shouldn't be current before dateActivated",o.isCurrent(ymd.parse("2006-10-26")));
  assertTrue("should be current after dateActivated",o.isCurrent(ymd.parse("2007-10-26")));
  o.setAutoExpireDate(ymd.parse("2007-12-31"));
  assertFalse("shouldn't be current before dateActivated",o.isCurrent(ymd.parse("2006-10-26")));
  assertTrue("should be current between dateActivated and autoExpireDate",o.isCurrent(ymd.parse("2007-10-26")));
  assertFalse("shouldn't be current after autoExpireDate",o.isCurrent(ymd.parse("2008-10-26")));
  OrderUtilTest.setDateStopped(o,ymd.parse("2007-11-01"));
  assertFalse("shouldn't be current before dateActivated",o.isCurrent(ymd.parse("2006-10-26")));
  assertTrue("should be current between dateActivated and dateStopped",o.isCurrent(ymd.parse("2007-10-26")));
  assertFalse("shouldn't be current after dateStopped",o.isCurrent(ymd.parse("2007-11-26")));
  OrderUtilTest.setDateStopped(o,ymd.parse("2007-11-01"));
  assertFalse("shouldn't be current before dateActivated",o.isCurrent(ymd.parse("2006-10-26")));
  assertTrue("should be current between dateActivated and dateStopped",o.isCurrent(ymd.parse("2007-10-26")));
  assertFalse("shouldn't be current after dateStopped",o.isCurrent(ymd.parse("2007-11-26")));
}
