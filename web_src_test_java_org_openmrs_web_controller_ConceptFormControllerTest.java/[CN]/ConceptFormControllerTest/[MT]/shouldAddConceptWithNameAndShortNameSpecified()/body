{
  updateSearchIndex();
  final String EXPECTED_PREFERRED_NAME="no such concept";
  final String EXPECTED_SHORT_NAME="nonesuch";
  ConceptService cs=Context.getConceptService();
  Concept conceptToAdd=cs.getConceptByName(EXPECTED_PREFERRED_NAME);
  assertNull(conceptToAdd);
  ConceptFormController conceptFormController=(ConceptFormController)applicationContext.getBean("conceptForm");
  MockHttpServletRequest mockRequest=new MockHttpServletRequest();
  mockRequest.setMethod("POST");
  mockRequest.setParameter("action","");
  mockRequest.setParameter("shortNamesByLocale[en].name",EXPECTED_SHORT_NAME);
  mockRequest.setParameter("namesByLocale[en].name",EXPECTED_PREFERRED_NAME);
  mockRequest.setParameter("concept.datatype","1");
  ModelAndView mav=conceptFormController.handleRequest(mockRequest,new MockHttpServletResponse());
  assertNotNull(mav);
  assertTrue(mav.getModel().isEmpty());
  Concept actualConcept=cs.getConceptByName(EXPECTED_PREFERRED_NAME);
  assertNotNull(actualConcept);
  Collection<ConceptName> actualNames=actualConcept.getNames();
  assertEquals(2,actualNames.size());
  assertEquals(EXPECTED_PREFERRED_NAME,actualConcept.getFullySpecifiedName(Locale.ENGLISH).getName());
  assertNotNull(actualConcept.getShortNameInLocale(Locale.ENGLISH));
  assertEquals(EXPECTED_SHORT_NAME,actualConcept.getShortNameInLocale(Locale.ENGLISH).getName());
  assertNull(actualConcept.getDescription(Locale.ENGLISH));
}
