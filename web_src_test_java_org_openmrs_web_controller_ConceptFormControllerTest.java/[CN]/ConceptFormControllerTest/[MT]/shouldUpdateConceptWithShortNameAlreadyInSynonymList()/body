{
  final String EXPECTED_PREFERRED_NAME="no such concept";
  final String EXPECTED_SHORT_NAME="nonesuch";
  final String EXPECTED_DESCRIPTION="this is not really a concept";
  final String EXPECTED_SYNONYM_A="phantom";
  final String EXPECTED_SYNONYM_B=EXPECTED_SHORT_NAME;
  final String EXPECTED_SYNONYM_C="mock";
  ConceptService cs=Context.getConceptService();
  Concept conceptToAdd=cs.getConceptByName(EXPECTED_PREFERRED_NAME);
  assertNull(conceptToAdd);
  ConceptFormController conceptFormController=(ConceptFormController)applicationContext.getBean("conceptForm");
  MockHttpServletRequest mockRequest=new MockHttpServletRequest();
  MockHttpServletResponse response=new MockHttpServletResponse();
  mockRequest.setMethod("POST");
  mockRequest.setParameter("action","");
  mockRequest.setParameter("synonymsByLocale[en_GB][0].name",EXPECTED_SYNONYM_A);
  mockRequest.setParameter("synonymsByLocale[en_GB][1].name",EXPECTED_SYNONYM_B);
  mockRequest.setParameter("synonymsByLocale[en_GB][2].name",EXPECTED_SYNONYM_C);
  mockRequest.setParameter("shortNamesByLocale[en_GB].name",EXPECTED_SHORT_NAME);
  mockRequest.setParameter("descriptionsByLocale[en_GB].description",EXPECTED_DESCRIPTION);
  mockRequest.setParameter("namesByLocale[en_GB].name",EXPECTED_PREFERRED_NAME);
  mockRequest.setParameter("concept.datatype","1");
  ModelAndView mav=conceptFormController.handleRequest(mockRequest,response);
  assertNotNull(mav);
  assertTrue(mav.getModel().isEmpty());
  Concept actualConcept=cs.getConceptByName(EXPECTED_PREFERRED_NAME);
  assertNotNull(actualConcept);
  Collection<ConceptName> actualNames=actualConcept.getNames();
  assertEquals(4,actualNames.size());
  assertEquals(EXPECTED_PREFERRED_NAME,actualConcept.getFullySpecifiedName(new Locale("en","GB")).getName());
  assertNotNull(actualConcept.getShortNameInLocale(new Locale("en","GB")));
  assertEquals(EXPECTED_SHORT_NAME,actualConcept.getShortNameInLocale(new Locale("en","GB")).getName());
}
