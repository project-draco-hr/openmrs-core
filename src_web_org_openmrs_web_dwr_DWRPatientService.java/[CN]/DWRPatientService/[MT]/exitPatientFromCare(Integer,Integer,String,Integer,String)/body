{
  log.debug("Entering exitfromcare with [" + patientId + "] ["+ reasonForExitId+ "] ["+ dateOfExit+ "]");
  String ret="";
  PatientService ps=Context.getPatientService();
  ConceptService cs=Context.getConceptService();
  Patient p=null;
  try {
    p=ps.getPatient(patientId);
  }
 catch (  Exception e) {
    p=null;
  }
  if (p == null) {
    ret="Unable to find valid patient with the supplied identification information - cannot exit patient from care";
  }
  Concept c=null;
  try {
    c=cs.getConcept(reasonForExitId);
  }
 catch (  Exception e) {
    c=null;
  }
  if (c == null) {
    ret="Unable to locate reason for exit in dictionary - cannot exit patient from care";
  }
  Date exitDate=null;
  if (dateOfExit != null) {
    String datePattern=OpenmrsConstants.OPENMRS_LOCALE_DATE_PATTERNS().get(Context.getLocale().toString().toLowerCase());
    SimpleDateFormat sdf=new SimpleDateFormat(datePattern);
    try {
      exitDate=sdf.parse(dateOfExit);
    }
 catch (    ParseException e) {
      exitDate=null;
    }
  }
  if (exitDate == null) {
    ret="Invalid date supplied - cannot exit patient from care without a valid date.";
  }
  if (p != null && c != null && exitDate != null) {
    String deathProp=Context.getAdministrationService().getGlobalProperty("concept.patientDied");
    Concept deathConcept=null;
    if (deathProp != null) {
      deathConcept=cs.getConceptByIdOrName(deathProp);
    }
    if (deathConcept != null) {
      if (c.equals(deathConcept)) {
        Concept causeConcept=null;
        try {
          causeConcept=cs.getConcept(causeOfDeath);
        }
 catch (        Exception e) {
          causeConcept=null;
        }
        if (causeConcept == null) {
          ret="Unable to locate cause of death in dictionary - cannot proceed";
        }
 else {
          try {
            ps.processDeath(p,exitDate,causeConcept,otherReason);
          }
 catch (          Exception e) {
            log.debug("Caught error",e);
            ret="Internal error while trying to process patient death - unable to proceed.";
          }
        }
      }
 else {
        try {
          ps.exitFromCare(p,exitDate,c);
        }
 catch (        Exception e) {
          log.debug("Caught error",e);
          ret="Internal error while trying to exit patient from care - unable to exit patient from care at this time.";
        }
      }
    }
 else {
      try {
        ps.exitFromCare(p,exitDate,c);
      }
 catch (      Exception e) {
        log.debug("Caught error",e);
        ret="Internal error while trying to exit patient from care - unable to exit patient from care at this time.";
      }
    }
    log.debug("Exited from care, it seems");
  }
  return ret;
}
