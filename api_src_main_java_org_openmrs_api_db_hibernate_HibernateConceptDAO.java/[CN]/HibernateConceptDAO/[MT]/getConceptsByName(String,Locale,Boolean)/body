{
  if (exactLocale == null) {
    exactLocale=true;
  }
  Criteria criteria=sessionFactory.getCurrentSession().createCriteria(ConceptName.class);
  criteria.add(Restrictions.ilike("name",name));
  criteria.add(Restrictions.eq("voided",false));
  criteria.createAlias("concept","concept");
  criteria.add(Restrictions.eq("concept.retired",false));
  if (locale != null) {
    if (exactLocale) {
      criteria.add(Restrictions.eq("locale",locale));
    }
 else {
      if (!StringUtils.isEmpty(locale.getCountry())) {
        criteria.add(Restrictions.or(Restrictions.eq("locale",locale),Restrictions.eq("locale",new Locale(locale.getLanguage()))));
      }
    }
  }
  criteria.addOrder(Order.asc("concept"));
  criteria.setProjection(Projections.distinct(Projections.property("concept")));
  @SuppressWarnings("unchecked") List<Concept> concepts=criteria.list();
  if (locale != null && !exactLocale && StringUtils.isEmpty(locale.getCountry())) {
    for (Iterator<Concept> it=concepts.iterator(); it.hasNext(); ) {
      Concept concept=it.next();
      boolean found=false;
      for (      ConceptName conceptName : concept.getNames()) {
        if (conceptName.getLocale().getLanguage().equals(locale.getLanguage())) {
          found=true;
          break;
        }
      }
      if (!found) {
        it.remove();
      }
    }
  }
  return concepts;
}
