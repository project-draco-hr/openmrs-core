{
  Criteria criteria=sessionFactory.getCurrentSession().createCriteria(ConceptMap.class);
  criteria.setProjection(Projections.property("concept"));
  criteria.createAlias("conceptReferenceTerm","term");
  if (Context.getAdministrationService().isDatabaseStringComparisonCaseSensitive()) {
    criteria.add(Restrictions.eq("term.code",code).ignoreCase());
  }
 else {
    criteria.add(Restrictions.eq("term.code",code));
  }
  criteria.createAlias("term.conceptSource","source");
  if (Context.getAdministrationService().isDatabaseStringComparisonCaseSensitive()) {
    criteria.add(Restrictions.or(Restrictions.eq("source.name",sourceName).ignoreCase(),Restrictions.eq("source.hl7Code",sourceName).ignoreCase()));
  }
 else {
    criteria.add(Restrictions.or(Restrictions.eq("source.name",sourceName),Restrictions.eq("source.hl7Code",sourceName)));
  }
  criteria.createAlias("concept","concept");
  if (!includeRetired) {
    criteria.add(Restrictions.eq("concept.retired",false));
  }
 else {
    criteria.addOrder(Order.asc("concept.retired"));
  }
  criteria.setResultTransformer(DistinctRootEntityResultTransformer.INSTANCE);
  return (List<Concept>)criteria.list();
}
