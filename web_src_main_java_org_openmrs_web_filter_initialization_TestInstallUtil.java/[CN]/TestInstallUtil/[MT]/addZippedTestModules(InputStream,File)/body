{
  ZipFile zipFile=null;
  FileOutputStream out=null;
  File tempFile=null;
  boolean successfullyAdded=true;
  try {
    tempFile=File.createTempFile("modules",null);
    out=new FileOutputStream(tempFile);
    IOUtils.copy(in,out);
    zipFile=new ZipFile(tempFile);
    Enumeration entries=zipFile.entries();
    while (entries.hasMoreElements()) {
      ZipEntry entry=(ZipEntry)entries.nextElement();
      if (entry.isDirectory()) {
        if (log.isDebugEnabled())         log.debug("Skipping directory: " + entry.getName());
        continue;
      }
      String fileName=entry.getName();
      if (fileName.endsWith(".omod")) {
        if (fileName.contains(System.getProperty("file.separator")))         fileName=new File(entry.getName()).getName();
        if (log.isDebugEnabled())         log.debug("Extracting module file: " + fileName);
        OpenmrsUtil.copyFile(zipFile.getInputStream(entry),new BufferedOutputStream(new FileOutputStream(new File(moduleRepository,fileName))));
      }
 else {
        if (log.isDebugEnabled())         log.debug("Ignoring file that is not a .omod '" + fileName);
      }
    }
  }
 catch (  IOException e) {
    log.error("An error occured while copying modules to the test system:",e);
    successfullyAdded=false;
  }
 finally {
    IOUtils.closeQuietly(in);
    IOUtils.closeQuietly(out);
    if (zipFile != null) {
      try {
        zipFile.close();
      }
 catch (      IOException e) {
        log.error("Failed to close zip file: ",e);
      }
    }
    if (tempFile != null) {
      tempFile.delete();
    }
  }
  return successfullyAdded;
}
