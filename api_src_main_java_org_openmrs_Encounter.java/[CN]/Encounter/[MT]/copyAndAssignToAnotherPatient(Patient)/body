{
  Map<Order,Order> oldNewOrderMap=new HashMap<Order,Order>();
  Encounter target=new Encounter();
  target.setChangedBy(getChangedBy());
  target.setCreator(getCreator());
  target.setDateChanged(getDateChanged());
  target.setDateCreated(getDateCreated());
  target.setDateVoided(getDateVoided());
  target.setVoided(getVoided());
  target.setVoidedBy(getVoidedBy());
  target.setVoidReason(getVoidReason());
  target.setEncounterDatetime(getEncounterDatetime());
  target.setEncounterType(getEncounterType());
  target.setForm(getForm());
  target.setLocation(getLocation());
  target.setPatient(patient);
  for (  EncounterProvider encounterProvider : getEncounterProviders()) {
    EncounterProvider encounterProviderCopy=encounterProvider.copy();
    encounterProviderCopy.setEncounter(target);
    target.getEncounterProviders().add(encounterProviderCopy);
  }
  for (  Order order : getOrders()) {
    Order orderCopy=order.copy();
    orderCopy.setEncounter(target);
    orderCopy.setPatient(patient);
    target.addOrder(orderCopy);
    oldNewOrderMap.put(order,orderCopy);
  }
  Context.getEncounterService().saveEncounter(target);
  for (  Obs obs : getAllObs()) {
    Obs obsCopy=Obs.newInstance(obs);
    obsCopy.setEncounter(target);
    obsCopy.setPerson(patient);
    Order oldOrder=obsCopy.getOrder();
    Order newOrder=oldNewOrderMap.get(oldOrder);
    obsCopy.setOrder(newOrder);
    target.addObs(obsCopy);
  }
  return target;
}
