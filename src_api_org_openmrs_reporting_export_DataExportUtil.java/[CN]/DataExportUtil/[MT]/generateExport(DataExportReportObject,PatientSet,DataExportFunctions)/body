{
  Log log=LogFactory.getLog(DataExportUtil.class);
  VelocityEngine velocityEngine=new VelocityEngine();
  try {
    velocityEngine.init();
  }
 catch (  Exception e) {
    log.error("Error initializing Velocity engine",e);
  }
  File file=getGeneratedFile(dataExport);
  PrintWriter report=new PrintWriter(file);
  VelocityContext velocityContext=new VelocityContext();
  if (patientSet == null) {
    patientSet=dataExport.generatePatientSet();
    functions.setAllPatients(dataExport.isAllPatients());
  }
  EventCartridge ec=new EventCartridge();
  ec.addEventHandler(new VelocityExceptionHandler());
  velocityContext.attachEventCartridge(ec);
  Locale locale=Context.getLocale();
  velocityContext.put("locale",locale);
  velocityContext.put("fn",functions);
  velocityContext.put("patientSet",patientSet);
  String template=dataExport.generateTemplate();
  if (log.isDebugEnabled())   log.debug("Template: " + template.substring(0,template.length() < 3500 ? template.length() : 3500) + "...");
  try {
    velocityEngine.evaluate(velocityContext,report,DataExportUtil.class.getName(),template);
  }
 catch (  Exception e) {
    log.error("Error evaluating data export " + dataExport.getReportObjectId(),e);
    log.error("Template: " + template.substring(0,template.length() < 3500 ? template.length() : 3500) + "...");
    report.print("\n\nError: \n" + e.toString() + "\n Stacktrace: \n");
    e.printStackTrace(report);
  }
 finally {
    report.close();
    velocityContext.remove("fn");
    velocityContext.remove("patientSet");
    velocityContext=null;
    velocityEngine.init();
    velocityEngine=null;
    patientSet=null;
    functions.clear();
    functions=null;
    template=null;
    dataExport=null;
    log.debug("Clearing hibernate session");
    Context.clearSession();
    System.gc();
    System.gc();
  }
}
