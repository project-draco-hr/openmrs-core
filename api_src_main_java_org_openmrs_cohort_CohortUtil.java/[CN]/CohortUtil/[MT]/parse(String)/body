{
  List<Object> tokens=new ArrayList<Object>();
{
    StringBuilder thisElement=null;
    for (int i=0; i < spec.length(); ++i) {
      char c=spec.charAt(i);
switch (c) {
case '(':
case ')':
        if (thisElement != null) {
          tokens.add(thisElement.toString().trim());
          thisElement=null;
        }
      tokens.add("" + c);
    break;
case ' ':
case '\t':
case '\n':
  if (thisElement != null) {
    thisElement.append(c);
  }
break;
case '[':
if (thisElement != null) {
tokens.add(thisElement.toString().trim());
}
thisElement=new StringBuilder();
thisElement.append(c);
break;
default :
if (thisElement == null) {
thisElement=new StringBuilder();
}
thisElement.append(c);
if (c == ']') {
tokens.add(thisElement.toString().trim());
thisElement=null;
}
break;
}
}
if (thisElement != null) {
tokens.add(thisElement.toString().trim());
}
}
for (ListIterator<Object> i=tokens.listIterator(); i.hasNext(); ) {
Object o=i.next();
if (o instanceof String) {
String s=(String)o;
if (s.startsWith("[") && s.endsWith("]")) {
s=s.substring(1,s.length() - 1);
String name=null;
Map<String,String> paramValues=new HashMap<String,String>();
StringTokenizer st=new StringTokenizer(s,"|");
while (st.hasMoreTokens()) {
String t=st.nextToken();
if (name == null) {
name=t;
}
 else {
int ind=t.indexOf('=');
if (ind < 0) {
throw new IllegalArgumentException("The fragment '" + t + "' in "+ s+ " has no =");
}
paramValues.put(t.substring(0,ind),t.substring(ind + 1));
}
}
if (name == null) {
throw new IllegalArgumentException("Could not find a cohort name in " + s);
}
PatientSearch search=Context.getReportObjectService().getPatientSearch(name);
if (search == null) {
throw new IllegalArgumentException("Could not load a cohort named " + name);
}
for (Map.Entry<String,String> e : paramValues.entrySet()) {
search.setParameterValue(e.getKey(),e.getValue());
}
i.set(search);
}
}
}
return PatientSearch.createCompositionSearch(tokens);
}
