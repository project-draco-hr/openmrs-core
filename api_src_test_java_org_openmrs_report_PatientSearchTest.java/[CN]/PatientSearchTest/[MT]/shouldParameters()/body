{
  ObsService obsService=Context.getObsService();
  Calendar inRange=new GregorianCalendar();
  inRange.add(Calendar.DATE,-45);
  Obs firstObs=obsService.getObs(1);
  firstObs.setObsDatetime(inRange.getTime());
  obsService.saveObs(firstObs,"Creating obs");
  Calendar outOfRange=new GregorianCalendar();
  outOfRange.add(Calendar.DATE,-95);
  Obs secondObs=obsService.getObs(2);
  secondObs.setObsDatetime(outOfRange.getTime());
  obsService.saveObs(secondObs,"Creating obs");
  Map<Parameter,Object> globalParamValues=new HashMap<Parameter,Object>();
{
    Parameter p=new Parameter("howManyDays","How many days?",Integer.class,30);
    globalParamValues.put(p,60);
  }
  PatientSearch search=new PatientSearch();
{
    search.setFilterClass(ObsPatientFilter.class);
    List<SearchArgument> args=new ArrayList<SearchArgument>();
    args.add(new SearchArgument("timeModifier","ANY",PatientSetService.TimeModifier.class));
    args.add(new SearchArgument("question",Context.getConceptService().getConceptByName("NEW CD4 COUNT").getConceptId().toString(),Concept.class));
    args.add(new SearchArgument("withinLastDays","${howManyDays}",Integer.class));
    search.setArguments(args);
  }
  EvaluationContext ec=new EvaluationContext();
  for (  Map.Entry<Parameter,Object> e : globalParamValues.entrySet())   ec.addParameterValue(e.getKey(),e.getValue());
  for (  Parameter p : search.getParameters()) {
    ec.addParameterValue(search,p,ec.evaluateExpression(p.getDefaultValue().toString()));
  }
  PatientFilter filterToRun=OpenmrsUtil.toPatientFilter(search,null,ec);
  Cohort result=filterToRun.filter(Context.getPatientSetService().getAllPatients(),ec);
  assertEquals(1,result.size());
  assertTrue(result.getMemberIds().contains(2));
}
