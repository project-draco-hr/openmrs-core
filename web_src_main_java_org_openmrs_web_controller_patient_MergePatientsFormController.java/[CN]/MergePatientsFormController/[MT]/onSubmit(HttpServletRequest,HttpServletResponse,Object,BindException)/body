{
  HttpSession httpSession=request.getSession();
  if (Context.isAuthenticated()) {
    String view=getSuccessView();
    PatientService ps=Context.getPatientService();
    String pref=request.getParameter("preferred");
    String[] nonPreferred=request.getParameter("nonPreferred").split(",");
    String redirectURL=request.getParameter("redirectURL");
    Patient preferred=ps.getPatient(Integer.valueOf(pref));
    List<Patient> notPreferred=new ArrayList<Patient>();
    view=view + "?patientId=" + preferred.getPatientId();
    for (int i=0; i < nonPreferred.length; i++) {
      notPreferred.add(ps.getPatient(Integer.valueOf(nonPreferred[i])));
      view=view + "&patientId=" + nonPreferred[i];
    }
    try {
      ps.mergePatients(preferred,notPreferred);
    }
 catch (    APIException e) {
      log.error("Unable to merge patients",e);
      httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Patient.merge.fail");
      return showForm(request,response,errors);
    }
    int index=redirectURL.indexOf(request.getContextPath(),2);
    if (index != -1) {
      redirectURL=redirectURL.substring(index);
      if (redirectURL.contains(getSuccessView()))       redirectURL="findDuplicatePatients.htm";
    }
 else     redirectURL=view;
    httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Patient.merged");
    return new ModelAndView(new RedirectView(redirectURL));
  }
  return new ModelAndView(new RedirectView(getFormView()));
}
