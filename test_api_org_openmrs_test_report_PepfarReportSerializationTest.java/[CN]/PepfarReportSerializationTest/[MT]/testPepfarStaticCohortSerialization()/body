{
  ReportSchema pepfarReportSchema=new ReportSchema();
  List<DataSetDefinition> dataSets=new ArrayList<DataSetDefinition>();
  CohortDataSetDefinition cohortDataSetDef=new CohortDataSetDefinition();
  cohortDataSetDef.setName("Sheet1");
  cohortDataSetDef.addStrategy("1.a",new StaticCohortDefinition(new Cohort()));
  pepfarReportSchema.setDataSetDefinitions(dataSets);
  Parameter startDateParam=new Parameter("report.startDate","When does the report period start?",Date.class,null);
  Parameter endDateParam=new Parameter("report.endDate","When does the report period end?",Date.class,null);
  Parameter locationParam=new Parameter("report.location","For which clinic is this report?",Location.class,null);
  List<Parameter> parameters=new ArrayList<Parameter>();
  parameters.add(startDateParam);
  parameters.add(endDateParam);
  parameters.add(locationParam);
  pepfarReportSchema.setReportParameters(parameters);
  Cohort inputStaticCohort=new Cohort(1);
  inputStaticCohort.addMember(1001);
  inputStaticCohort.addMember(1002);
  inputStaticCohort.addMember(1003);
  pepfarReportSchema.setFilter(new StaticCohortDefinition(inputStaticCohort));
  pepfarReportSchema.setReportSchemaId(123);
  pepfarReportSchema.setName("PEPFAR report");
  pepfarReportSchema.setDescription("The PEPFAR description is(n't) here.");
  Serializer serializer=OpenmrsUtil.getSerializer();
  StringWriter writer=new StringWriter();
  serializer.write(pepfarReportSchema,writer);
  String correctOutput="<reportSchema id=\"1\" reportSchemaId=\"123\">\n" + "   <dataSets class=\"java.util.ArrayList\" id=\"2\"/>\n" + "   <description id=\"3\"><![CDATA[The PEPFAR description is(n't) here.]]></description>\n"+ "   <name id=\"4\"><![CDATA[PEPFAR report]]></name>\n"+ "   <parameters class=\"java.util.ArrayList\" id=\"5\">\n"+ "      <parameter id=\"6\" clazz=\"java.util.Date\">\n"+ "         <name id=\"7\"><![CDATA[report.startDate]]></name>\n"+ "         <label id=\"8\"><![CDATA[When does the report period start?]]></label>\n"+ "      </parameter>\n"+ "      <parameter id=\"9\" clazz=\"java.util.Date\">\n"+ "         <name id=\"10\"><![CDATA[report.endDate]]></name>\n"+ "         <label id=\"11\"><![CDATA[When does the report period end?]]></label>\n"+ "      </parameter>\n"+ "      <parameter id=\"12\" clazz=\"org.openmrs.Location\">\n"+ "         <name id=\"13\"><![CDATA[report.location]]></name>\n"+ "         <label id=\"14\"><![CDATA[For which clinic is this report?]]></label>\n"+ "      </parameter>\n"+ "   </parameters>\n"+ "   <filter class=\"org.openmrs.cohort.StaticCohortDefinition\" id=\"15\">\n"+ "      <cohort id=\"16\" cohortId=\"1\" voided=\"false\">\n"+ "         <memberIds class=\"java.util.HashSet\" id=\"17\">\n"+ "            <integer id=\"18\">1001</integer>\n"+ "            <integer id=\"19\">1003</integer>\n"+ "            <integer id=\"20\">1002</integer>\n"+ "         </memberIds>\n"+ "      </cohort>\n"+ "   </filter>\n"+ "</reportSchema>";
  assertEquals("The output is not right.",correctOutput,writer.toString());
  ReportSchema deserializedSchema=serializer.read(ReportSchema.class,correctOutput);
  assertTrue("The # of params shouldn't be: " + deserializedSchema.getReportParameters().size(),deserializedSchema.getReportParameters().size() == 3);
  assertTrue("The name shouldn't be: " + deserializedSchema.getName(),deserializedSchema.getName().equals("PEPFAR report"));
  Cohort idsFromStaticCohort=((StaticCohortDefinition)deserializedSchema.getFilter()).getCohort();
  int size=idsFromStaticCohort.getMemberIds().size();
  assertTrue("There should be 3 patients in the static cohort, not: " + size,size == 3);
}
