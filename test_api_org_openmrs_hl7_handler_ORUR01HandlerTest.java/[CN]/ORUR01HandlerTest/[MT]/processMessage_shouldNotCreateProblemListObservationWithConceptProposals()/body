{
  ObsService obsService=Context.getObsService();
  ConceptService conceptService=Context.getConceptService();
  EncounterService encService=Context.getEncounterService();
  String hl7String="MSH|^~\\&|FORMENTRY|AMRS.ELD|HL7LISTENER|AMRS.ELD|20080630094800||ORU^R01|kgWdFt0SVwwClOfJm3pe|P|2.5|1||||||||15^AMRS.ELD.FORMID\rPID|||3^^^^~d3811480^^^^||John3^Doe^||\rPV1||O|1^Unknown||||1^Super User (admin)|||||||||||||||||||||||||||||||||||||20080208|||||||V\rORC|RE||||||||20080208000000|1^Super User\rOBR|1|||\rOBR|1|||1284^PROBLEM LIST^99DCT\rOBX|1|CWE|6042^PROBLEM ADDED^99DCT||PROPOSED^SEVERO DOLOR DE CABEZA^99DCT|||||||||20080208";
  Message hl7message=parser.parse(hl7String);
  router.processMessage(hl7message);
  Patient patient=new Patient(3);
  assertEquals("There should not be any obs created for #3",0,obsService.getObservationsByPerson(patient).size());
  assertEquals("There should be 1 new encounter created for #3",1,encService.getEncountersByPatient(patient).size());
  List<ConceptProposal> proposedConcepts=conceptService.getConceptProposals("SEVERO DOLOR DE CABEZA");
  assertEquals("There should be a proposed concept by this name",1,proposedConcepts.size());
  assertEquals(encService.getEncountersByPatient(patient).get(0),proposedConcepts.get(0).getEncounter());
}
