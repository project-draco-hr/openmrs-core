{
  Context.requirePrivilege(PrivilegeConstants.CONFIGURE_VISITS);
  String visitEncounterHandler=administrationService.getGlobalProperty(OpenmrsConstants.GP_VISIT_ASSIGNMENT_HANDLER);
  String enableVisits=administrationService.getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_ENABLE_VISITS,Boolean.FALSE.toString());
  TaskDefinition closeVisitsTask=Context.getSchedulerService().getTaskByName(OpenmrsConstants.AUTO_CLOSE_VISITS_TASK_NAME);
  VisitEncounterHandlerForm form=new VisitEncounterHandlerForm();
  form.setEnableVisits(Boolean.valueOf(enableVisits));
  if (closeVisitsTask != null)   form.setCloseVisitsTaskStarted(closeVisitsTask.getStarted());
  for (  EncounterVisitHandler visitHandler : getEncounterVisitHandlers()) {
    if (visitHandler.getClass().getName().equals(visitEncounterHandler)) {
      form.setVisitEncounterHandler(visitHandler.getClass().getName());
      break;
    }
  }
  String gpValue=Context.getAdministrationService().getGlobalProperty(OpenmrsConstants.GP_VISIT_TYPES_TO_AUTO_CLOSE);
  if (StringUtils.isNotBlank(gpValue)) {
    List<VisitType> visitTypes=new ArrayList<VisitType>();
    String[] visitTypeNames=StringUtils.split(gpValue.trim(),",");
    for (int i=0; i < visitTypeNames.length; i++) {
      String currName=visitTypeNames[i];
      visitTypeNames[i]=currName.trim().toLowerCase();
    }
    List<VisitType> allVisitTypes=visitService.getAllVisitTypes();
    for (    VisitType visitType : allVisitTypes) {
      if (ArrayUtils.contains(visitTypeNames,visitType.getName().toLowerCase()))       visitTypes.add(visitType);
    }
    form.setVisitTypesToClose(visitTypes);
  }
  model.addAttribute(VISIT_ENCOUNTER_HANDLER_FORM,form);
}
