{
  if (openmrsObject.getUuid() == null)   openmrsObject.setUuid(UUID.randomUUID().toString());
  PropertyDescriptor[] properties=PropertyUtils.getPropertyDescriptors(openmrsObject);
  for (  PropertyDescriptor property : properties) {
    if (property.getPropertyType() == null) {
      continue;
    }
    if (property.getWriteMethod() == null) {
      continue;
    }
    if (!property.getPropertyType().getName().equals("java.lang.String")) {
      continue;
    }
    try {
      Object value=PropertyUtils.getProperty(openmrsObject,property.getName());
      if (value != null && ((String)value).isEmpty()) {
        if (!(openmrsObject instanceof Voidable && ((Voidable)openmrsObject).isVoided())) {
          PropertyUtils.setProperty(openmrsObject,property.getName(),null);
        }
      }
    }
 catch (    InvocationTargetException ex) {
      if (ex.getTargetException() instanceof TransientObjectException) {
        log.error("Failed to change property value from empty string to null for " + property.getName(),ex);
      }
 else {
        throw new APIException("Failed to change property value from empty string to null for " + property.getName(),ex);
      }
    }
catch (    Exception ex) {
      throw new APIException("Failed to change property value from empty string to null for " + property.getName(),ex);
    }
  }
}
