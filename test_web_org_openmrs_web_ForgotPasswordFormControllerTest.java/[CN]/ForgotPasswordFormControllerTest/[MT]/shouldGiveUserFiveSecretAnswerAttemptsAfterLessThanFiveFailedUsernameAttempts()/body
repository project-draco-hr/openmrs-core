{
  ForgotPasswordFormController controller=new ForgotPasswordFormController();
  for (int x=1; x <= 4; x++) {
    MockHttpServletRequest request=new MockHttpServletRequest("POST","/forgotPassword.form");
    request.addParameter("uname","invaliduser");
    controller.handleRequest(request,new MockHttpServletResponse());
  }
  MockHttpServletRequest request=new MockHttpServletRequest("POST","/forgotPassword.form");
  request.addParameter("uname","validuser");
  controller.handleRequest(request,new MockHttpServletResponse());
  Assert.assertNotNull(request.getAttribute("secretQuestion"));
  MockHttpServletRequest request5=new MockHttpServletRequest("POST","/forgotPassword.form");
  request5.addParameter("uname","validuser");
  request5.addParameter("secretAnswer","invalid answer");
  controller.handleRequest(request5,new MockHttpServletResponse());
  Assert.assertNotNull(request5.getAttribute("secretQuestion"));
  MockHttpServletRequest request6=new MockHttpServletRequest("POST","/forgotPassword.form");
  request6.addParameter("uname","validuser");
  request6.addParameter("secretAnswer","invalid answer");
  controller.handleRequest(request6,new MockHttpServletResponse());
  Assert.assertNotNull(request6.getAttribute("secretQuestion"));
  MockHttpServletRequest request7=new MockHttpServletRequest("POST","/forgotPassword.form");
  request7.addParameter("uname","validuser");
  request7.addParameter("secretAnswer","valid secret answer");
  controller.handleRequest(request7,new MockHttpServletResponse());
  Assert.assertTrue(Context.isAuthenticated());
}
