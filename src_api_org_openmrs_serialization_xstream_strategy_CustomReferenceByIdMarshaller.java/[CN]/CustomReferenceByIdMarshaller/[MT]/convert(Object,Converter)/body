{
  if (getMapper().isImmutableValueType(item.getClass())) {
    converter.marshal(item,writer,this);
  }
 else {
    Path currentPath=pathTracker.getPath();
    Object existingReferenceKey=references.lookupId(item);
    if (existingReferenceKey != null) {
      String attributeName=null;
      if (this.isCGlibEhanced(item)) {
        SerializationMethodInvoker serializationMethodInvoker=new SerializationMethodInvoker();
        Object newObj=(Object)serializationMethodInvoker.callWriteReplace(item);
        if (!newObj.getClass().equals(item.getClass().getSuperclass())) {
          attributeName=getMapper().aliasForSystemAttribute("resolves-to");
          if (attributeName != null) {
            String actualClassName=getMapper().serializedClass(newObj.getClass());
            writer.addAttribute(attributeName,actualClassName);
          }
        }
      }
      attributeName=getMapper().aliasForSystemAttribute("reference");
      if (attributeName != null) {
        writer.addAttribute(attributeName,createReference(currentPath,existingReferenceKey));
      }
    }
 else     if (implicitElements.lookupId(item) != null) {
      throw new ReferencedImplicitElementException(item,currentPath);
    }
 else {
      Object newReferenceKey=createReferenceKey(currentPath,item);
      if (lastPath == null || !currentPath.isAncestor(lastPath)) {
        fireValidReference(newReferenceKey);
        lastPath=currentPath;
        references.associateId(item,newReferenceKey);
      }
 else {
        implicitElements.associateId(item,newReferenceKey);
      }
      converter.marshal(item,writer,this);
    }
  }
}
