{
  CommandObject command=(CommandObject)commandObj;
  String[] paramNames=request.getParameterValues("parameterName");
  String[] paramLabels=request.getParameterValues("parameterLabel");
  String[] paramClasses=request.getParameterValues("parameterClass");
  List<Parameter> params=new ArrayList<Parameter>();
  if (paramNames != null) {
    for (int i=0; i < paramNames.length; ++i) {
      if (StringUtils.hasText(paramNames[i]) || StringUtils.hasText(paramLabels[i]) || StringUtils.hasText(paramClasses[i])) {
        try {
          Class<?> clz=null;
          if (StringUtils.hasText(paramClasses[i]))           clz=Class.forName(paramClasses[i]);
          Parameter p=new Parameter(paramNames[i],paramLabels[i],clz,null);
          params.add(p);
        }
 catch (        Exception ex) {
          errors.rejectValue("parameters",null,"Parameter error: " + ex.toString());
        }
      }
    }
  }
  command.setParameters(params);
  String[] rowNames=request.getParameterValues("rowName");
  String[] rowDescriptions=request.getParameterValues("rowDescription");
  String[] rowQueries=request.getParameterValues("rowQuery");
  List<CohortReportRow> rows=new ArrayList<CohortReportRow>();
  if (rowNames != null) {
    for (int i=0; i < rowNames.length; ++i) {
      try {
        CohortReportRow row=new CohortReportRow();
        row.setName(rowNames[i]);
        row.setDescription(rowDescriptions[i]);
        row.setQuery(rowQueries[i]);
        rows.add(row);
      }
 catch (      Exception ex) {
        errors.rejectValue("rows",null,"Row error: " + ex.toString());
      }
    }
  }
  command.setRows(rows);
}
