{
  Map<String,Object> ret=new HashMap<String,Object>();
  List<Class<?>> classes=new ArrayList<Class<?>>();
  classes.add(Date.class);
  classes.add(Integer.class);
  classes.add(Double.class);
  classes.add(Location.class);
  ret.put("parameterClasses",classes);
  List<AbstractReportObject> searches=Context.getReportObjectService().getReportObjectsByType(OpenmrsConstants.REPORT_OBJECT_TYPE_PATIENTSEARCH);
  Map<String,String> map=new LinkedHashMap<String,String>();
  for (  AbstractReportObject o : searches) {
    if (o instanceof PatientSearchReportObject) {
      StringBuilder searchName=new StringBuilder(o.getName());
      List<Parameter> parameters=((PatientSearchReportObject)o).getPatientSearch().getParameters();
      if (parameters != null && !parameters.isEmpty()) {
        searchName.append("|");
        for (Iterator<Parameter> i=parameters.iterator(); i.hasNext(); ) {
          Parameter p=i.next();
          searchName.append(p.getName()).append("=${?}");
          if (i.hasNext()) {
            searchName.append(",");
          }
        }
      }
      map.put(searchName.toString(),o.getDescription());
    }
 else {
      map.put(o.getName(),o.getDescription());
    }
  }
  ret.put("patientSearches",map);
  Properties macros=Context.getReportService().getReportXmlMacros();
  map=new LinkedHashMap<String,String>();
  for (  Map.Entry<Object,Object> e : macros.entrySet()) {
    if (!e.getKey().toString().equals("macroPrefix") && !e.getKey().toString().equals("macroSuffix"))     map.put(e.getKey().toString(),e.getValue().toString());
  }
  ret.put("macros",map);
  ret.put("macroPrefix",macros.get("macroPrefix"));
  ret.put("macroSuffix",macros.get("macroSuffix"));
  return ret;
}
