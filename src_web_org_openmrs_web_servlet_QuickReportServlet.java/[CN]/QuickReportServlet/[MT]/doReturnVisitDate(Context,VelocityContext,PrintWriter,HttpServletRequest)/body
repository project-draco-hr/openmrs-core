{
  ObsService os=context.getObsService();
  ConceptService cs=context.getConceptService();
  Locale locale=context.getLocale();
  DateFormat dateFormat=new SimpleDateFormat(OpenmrsConstants.OPENMRS_LOCALE_DATE_PATTERNS().get(locale.toString().toLowerCase()),locale);
  velocityContext.put("date",dateFormat);
  Concept c=cs.getConcept(new Integer("5096"));
  Calendar cal=Calendar.getInstance();
  Date start=new Date();
  Date end=new Date();
  String startDate=request.getParameter("startDate");
  String endDate=request.getParameter("endDate");
  String location=request.getParameter("location");
  if (startDate != null && startDate.length() != 0) {
    try {
      cal.setTime(dateFormat.parse(startDate));
    }
 catch (    ParseException e) {
      throw new ServletException("Error parsing 'Start Date'",e);
    }
  }
 else   cal.setTime(new Date());
  if (endDate == null || endDate.equals("")) {
    while (cal.get(Calendar.DAY_OF_WEEK) != Calendar.SUNDAY) {
      cal.add(Calendar.DAY_OF_MONTH,-1);
    }
    start=cal.getTime();
    cal.add(Calendar.DAY_OF_MONTH,7);
    end=cal.getTime();
  }
 else {
    start=cal.getTime();
    try {
      cal.setTime(dateFormat.parse(endDate));
    }
 catch (    ParseException e) {
      throw new ServletException("Error parsing 'End Date'",e);
    }
    end=cal.getTime();
  }
  List<Obs> allObs=null;
  if (location == null || location.equals(""))   allObs=os.getObservations(c,"location_id asc, value_datetime asc");
 else {
    Location locationObj=os.getLocation(Integer.valueOf(location));
    allObs=os.getObservations(c,locationObj,"location_id asc, value_datetime asc");
  }
  List<Obs> obs=new Vector<Obs>();
  for (  Obs o : allObs) {
    log.debug("location: " + o.getLocation().getLocationId());
    if (o.getValueDatetime().after(start) && o.getValueDatetime().before(end))     obs.add(o);
  }
  if (obs != null) {
    velocityContext.put("observations",obs);
  }
 else {
    report.append("No Observations found");
  }
}
