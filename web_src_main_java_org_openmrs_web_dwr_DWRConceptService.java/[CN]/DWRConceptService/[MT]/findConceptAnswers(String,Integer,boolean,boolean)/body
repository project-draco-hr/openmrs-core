{
  if (includeVoided == true)   throw new APIException("You should not include voideds in the search.");
  Locale locale=Context.getLocale();
  ConceptService cs=Context.getConceptService();
  Concept concept=cs.getConcept(conceptId);
  if (concept == null)   throw new Exception("Unable to find a concept with id: " + conceptId);
  List<ConceptSearchResult> searchResults=cs.findConceptAnswers(text,locale,concept);
  List<Drug> drugAnswers=new Vector<Drug>();
  for (  ConceptAnswer conceptAnswer : concept.getAnswers()) {
    if (conceptAnswer.getAnswerDrug() != null)     drugAnswers.add(conceptAnswer.getAnswerDrug());
  }
  List<Object> items=new Vector<Object>();
  for (  ConceptSearchResult searchResult : searchResults) {
    items.add(new ConceptListItem(searchResult));
    if (includeDrugConcepts) {
      Integer classId=searchResult.getConcept().getConceptClass().getConceptClassId();
      if (classId.equals(OpenmrsConstants.CONCEPT_CLASS_DRUG))       for (      Drug d : cs.getDrugsByConcept(searchResult.getConcept())) {
        if (drugAnswers.contains(d))         items.add(new ConceptDrugListItem(d,locale));
      }
    }
  }
  return items;
}
