{
  if (includeVoided) {
    throw new APIException("You should not include voideds in the search.");
  }
  ConceptService cs=Context.getConceptService();
  Concept concept=cs.getConcept(conceptId);
  if (concept == null) {
    throw new Exception("Unable to find a concept with id: " + conceptId);
  }
  List<ConceptSearchResult> searchResults=new ArrayList<ConceptSearchResult>();
  List<Locale> locales=Context.getAdministrationService().getSearchLocales();
  for (  Locale lc : locales) {
    List<ConceptSearchResult> results=cs.findConceptAnswers(text,lc,concept);
    if (results != null) {
      searchResults.addAll(results);
    }
  }
  List<Drug> drugAnswers=new ArrayList<Drug>();
  for (  ConceptAnswer conceptAnswer : concept.getAnswers(false)) {
    if (conceptAnswer.getAnswerDrug() != null) {
      drugAnswers.add(conceptAnswer.getAnswerDrug());
    }
  }
  List<Object> items=new ArrayList<Object>();
  Set<Integer> uniqueItems=new HashSet<Integer>();
  for (  ConceptSearchResult searchResult : searchResults) {
    if (!uniqueItems.add(searchResult.getConcept().getConceptId())) {
      continue;
    }
    items.add(new ConceptListItem(searchResult));
    if (includeDrugConcepts) {
      Integer classId=searchResult.getConcept().getConceptClass().getConceptClassId();
      if (classId.equals(OpenmrsConstants.CONCEPT_CLASS_DRUG)) {
        for (        Drug d : cs.getDrugsByConcept(searchResult.getConcept())) {
          if (drugAnswers.contains(d)) {
            items.add(new ConceptDrugListItem(d,Context.getLocale()));
          }
        }
      }
    }
  }
  return items;
}
