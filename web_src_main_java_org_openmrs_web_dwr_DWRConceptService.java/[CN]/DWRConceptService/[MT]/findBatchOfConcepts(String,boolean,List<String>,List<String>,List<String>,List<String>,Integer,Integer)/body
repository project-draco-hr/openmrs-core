{
  List<Object> objectList=new ArrayList<Object>();
  Locale defaultLocale=Context.getLocale();
  List<Locale> searchLocales=Context.getAdministrationService().getSearchLocales();
  if (log.isDebugEnabled()) {
    StringBuffer searchLocalesString=new StringBuffer();
    for (    Locale loc : searchLocales) {
      searchLocalesString.append(loc.toString() + " ");
    }
    log.debug("searching locales: " + searchLocalesString);
  }
  if (includeClassNames == null) {
    includeClassNames=new ArrayList<String>();
  }
  if (excludeClassNames == null) {
    excludeClassNames=new ArrayList<String>();
  }
  if (includeDatatypeNames == null) {
    includeDatatypeNames=new ArrayList<String>();
  }
  if (excludeDatatypeNames == null) {
    excludeDatatypeNames=new ArrayList<String>();
  }
  try {
    ConceptService cs=Context.getConceptService();
    List<ConceptSearchResult> searchResults=new ArrayList<ConceptSearchResult>();
    if (phrase.matches("\\d+")) {
      Concept c=cs.getConcept(Integer.valueOf(phrase));
      if (c != null && (!c.isRetired() || includeRetired)) {
        String conceptClassName=null;
        if (c.getConceptClass() != null) {
          conceptClassName=c.getConceptClass().getName();
        }
        String conceptDatatypeName=null;
        if (c.getDatatype() != null) {
          conceptDatatypeName=c.getDatatype().getName();
        }
        if ((includeClassNames.isEmpty() || includeClassNames.contains(conceptClassName)) && (excludeClassNames.isEmpty() || !excludeClassNames.contains(conceptClassName)) && (includeDatatypeNames.isEmpty() || includeDatatypeNames.contains(conceptDatatypeName))&& (excludeDatatypeNames.isEmpty() || !excludeDatatypeNames.contains(conceptDatatypeName))) {
          ConceptName cn=c.getName(defaultLocale);
          ConceptSearchResult searchResult=new ConceptSearchResult(phrase,c,cn);
          searchResults.add(searchResult);
        }
      }
    }
    if (!StringUtils.isBlank(phrase)) {
      List<ConceptClass> includeClasses=new ArrayList<ConceptClass>();
      for (      String name : includeClassNames) {
        if (!"".equals(name)) {
          includeClasses.add(cs.getConceptClassByName(name));
        }
      }
      List<ConceptClass> excludeClasses=new ArrayList<ConceptClass>();
      for (      String name : excludeClassNames) {
        if (!"".equals(name)) {
          excludeClasses.add(cs.getConceptClassByName(name));
        }
      }
      List<ConceptDatatype> includeDatatypes=new ArrayList<ConceptDatatype>();
      for (      String name : includeDatatypeNames) {
        if (!"".equals(name)) {
          includeDatatypes.add(cs.getConceptDatatypeByName(name));
        }
      }
      List<ConceptDatatype> excludeDatatypes=new ArrayList<ConceptDatatype>();
      for (      String name : excludeDatatypeNames) {
        if (!"".equals(name)) {
          excludeDatatypes.add(cs.getConceptDatatypeByName(name));
        }
      }
      searchResults.addAll(cs.getConcepts(phrase,searchLocales,includeRetired,includeClasses,excludeClasses,includeDatatypes,excludeDatatypes,null,start,length));
    }
    if (searchResults.size() < 1) {
      objectList.add(Context.getMessageSourceService().getMessage("general.noMatchesFoundInLocale",new Object[]{"<b>" + phrase + "</b>",OpenmrsUtil.join(searchLocales,", ")},Context.getLocale()));
    }
 else {
      for (      ConceptSearchResult searchResult : searchResults) {
        objectList.add(new ConceptListItem(searchResult));
      }
    }
  }
 catch (  Exception e) {
    log.error("Error while finding concepts + " + e.getMessage(),e);
    objectList.add(Context.getMessageSourceService().getMessage("Concept.search.error") + " - " + e.getMessage());
  }
  if (objectList.size() == 0) {
    objectList.add(Context.getMessageSourceService().getMessage("general.noMatchesFoundInLocale",new Object[]{"<b>" + phrase + "</b>",defaultLocale},Context.getLocale()));
  }
  return objectList;
}
