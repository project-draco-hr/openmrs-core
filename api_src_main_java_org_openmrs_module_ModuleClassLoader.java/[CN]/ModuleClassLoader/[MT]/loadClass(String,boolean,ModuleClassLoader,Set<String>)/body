{
  if (log.isTraceEnabled()) {
    log.trace("Loading " + name + " "+ getModule()+ ", seenModules: "+ seenModules+ ", requestor: "+ requestor+ ", resolve? "+ resolve);
    StringBuilder output=new StringBuilder();
    for (    StackTraceElement element : Thread.currentThread().getStackTrace()) {
      if (element.getClassName().contains("openmrs")) {
        output.append("+ ");
      }
      output.append(element);
      output.append("\n");
    }
    log.trace("Stacktrace: " + output.toString());
  }
  if ((seenModules != null) && seenModules.contains(getModule().getModuleId())) {
    throw new ClassNotFoundException("Can't load class " + name + " from module "+ getModule().getModuleId()+ ". It has been tried before.");
  }
  if ((this != requestor) && !ModuleFactory.isModuleStarted(getModule())) {
    String msg="Can't load class " + name + ", because module "+ getModule().getModuleId()+ " is not yet started.";
    log.warn(msg);
    throw new ClassNotFoundException(msg);
  }
  Class<?> result=findLoadedClass(name);
  if (result == null) {
    try {
      result=findClass(name);
    }
 catch (    ClassNotFoundException e) {
    }
  }
  if (result != null) {
    checkClassVisibility(result,requestor);
    return result;
  }
  if (seenModules == null) {
    seenModules=new HashSet<String>();
  }
  seenModules.add(getModule().getModuleId());
  List<Module> importedModules=new ArrayList<Module>();
  if (requiredModules != null) {
    Collections.addAll(importedModules,requiredModules);
  }
  if (awareOfModules != null) {
    Collections.addAll(importedModules,awareOfModules);
  }
  for (  Module importedModule : importedModules) {
    if (seenModules.contains(importedModule.getModuleId())) {
      continue;
    }
    ModuleClassLoader moduleClassLoader=ModuleFactory.getModuleClassLoader(importedModule);
    if (moduleClassLoader != null) {
      try {
        result=moduleClassLoader.loadClass(name,resolve,requestor,seenModules);
        return result;
      }
 catch (      ClassNotFoundException e) {
      }
    }
  }
  throw new ClassNotFoundException(name);
}
