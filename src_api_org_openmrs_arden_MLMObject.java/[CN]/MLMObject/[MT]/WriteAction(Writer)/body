{
  try {
    w.append("\tpublic void initAction() {\n");
    w.append("\t\tthis.actions = new ArrayList<String>();\n");
    int pos=1;
    for (    Action action : this.actions) {
      w.append("\t\tactions.add(\"" + action.getActionString());
      if (action.getAtVar() != null) {
        w.append("@" + action.getAtVar());
      }
      w.append("\");\n");
      pos++;
    }
    w.append("\t}\n\n");
    w.flush();
    w.append("\tprivate String substituteString(String variable,String outStr){\n");
    w.append("\t\t//see if the variable is in the user map\n");
    w.append("\t\tString value = userVarMap.get(variable);\n");
    w.append("\t\tif (value != null)\n");
    w.append("\t\t{\n");
    w.append("\t\t}\n");
    w.append("\t\t// It must be a result value or date\n");
    w.append("\t\telse if (variable.contains(\"_value\"))\n");
    w.append("\t\t{\n");
    w.append("\t\t\tvariable = variable.replace(\"_value\",\"\").trim();\n");
    w.append("\t\t\tif(resultLookup.get(variable) != null){\n");
    w.append("\t\t\t\tvalue = resultLookup.get(variable).toString();\n");
    w.append("\t\t\t}\n");
    w.append("\t\t}\n");
    w.append("\t\t// It must be a result date\n");
    w.append("\t\telse if (variable.contains(\"_date\"))\n");
    w.append("\t\t{\n");
    w.append("\t\t\tString pattern = \"MM/dd/yy\";\n");
    w.append("\t\t\tSimpleDateFormat dateForm = new SimpleDateFormat(pattern);\n");
    w.append("\t\t\tvariable = variable.replace(\"_date\",\"\").trim();\n");
    w.append("\t\t\tif(resultLookup.get(variable) != null){\n");
    w.append("\t\t\t\tvalue = dateForm.format(resultLookup.get(variable).getResultDate());\n");
    w.append("\t\t\t}\n");
    w.append("\t\t}\n");
    w.append("\t\telse\n");
    w.append("\t\t{\n");
    w.append("\t\t\tif(resultLookup.get(variable) != null){\n");
    w.append("\t\t\t\tvalue = resultLookup.get(variable).toString();\n");
    w.append("\t\t\t}\n");
    w.append("\t\t}\n");
    w.append("\t\tif (value != null)\n");
    w.append("\t\t{\n");
    w.append("\t\t\toutStr += value;\n");
    w.append("\t\t}\n");
    w.append("\t\treturn outStr;\n");
    w.append("\t}\n");
    w.append("\tpublic String doAction(String inStr)\n");
    w.append("\t{\n");
    w.append("\t\tint startindex = -1;\n");
    w.append("\t\tint endindex = -1;\n");
    w.append("\t\tint index = -1;\n");
    w.append("\t\tString outStr = \"\";\n");
    w.append("\t\twhile((index = inStr.indexOf(\"||\"))>-1)\n");
    w.append("\t\t{\n");
    w.append("\t\t\tif(startindex == -1){\n");
    w.append("\t\t\t\tstartindex = 0;\n");
    w.append("\t\t\t\toutStr+=inStr.substring(0,index);\n");
    w.append("\t\t\t}else if(endindex == -1){\n");
    w.append("\t\t\t\tendindex = index-1;\n");
    w.append("\t\t\t\tString variable = inStr.substring(startindex, endindex).trim();\n");
    w.append("\t\t\t\toutStr = substituteString(variable,outStr);\n");
    w.append("\t\t\t\tstartindex = -1;\n");
    w.append("\t\t\t\tendindex = -1;\n");
    w.append("\t\t\t}\n");
    w.append("\t\t\tinStr = inStr.substring(index+2);\n");
    w.append("\t\t}\n");
    w.append("\t\toutStr+=inStr;\n");
    w.append("\t\treturn outStr;\n");
    w.append("\t}\n");
    w.flush();
  }
 catch (  Exception e) {
    System.err.println("Write Action: " + e);
    e.printStackTrace();
  }
}
