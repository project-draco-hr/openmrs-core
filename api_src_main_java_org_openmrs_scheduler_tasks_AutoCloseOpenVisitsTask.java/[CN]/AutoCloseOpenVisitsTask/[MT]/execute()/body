{
  if (isTaskEnabled() && !isExecuting) {
    if (log.isDebugEnabled())     log.debug("Starting Auto Close Open Visits Task...");
    startExecuting();
    try {
      List<VisitType> visitTypesToStop=new ArrayList<VisitType>();
      String gpValue=Context.getAdministrationService().getGlobalProperty(OpenmrsConstants.GP_VISIT_TYPES_TO_AUTO_CLOSE);
      VisitService vs=Context.getVisitService();
      if (StringUtils.isNotBlank(gpValue)) {
        String[] visitTypeNames=StringUtils.split(gpValue.trim(),",");
        for (int i=0; i < visitTypeNames.length; i++) {
          String currName=visitTypeNames[i];
          visitTypeNames[i]=currName.trim().toLowerCase();
        }
        List<VisitType> allVisitTypes=vs.getAllVisitTypes();
        for (        VisitType visitType : allVisitTypes) {
          if (ArrayUtils.contains(visitTypeNames,visitType.getName().toLowerCase()))           visitTypesToStop.add(visitType);
        }
      }
      if (visitTypesToStop.size() > 0) {
        int counter=0;
        Visit lastStoppedVisit=vs.stopNextActiveVisit(new Visit(0),visitTypesToStop);
        while (isExecuting && lastStoppedVisit != null) {
          if (log.isDebugEnabled())           log.debug("Successfully stopped visit with id:" + lastStoppedVisit.getVisitId());
          lastStoppedVisit=vs.stopNextActiveVisit(lastStoppedVisit,visitTypesToStop);
          if (counter++ > 50) {
            Context.flushSession();
            Context.clearSession();
            counter=0;
          }
        }
      }
 else {
        if (log.isWarnEnabled())         log.warn("No valid visit types have been found for auto closing, you can specify them via the '" + OpenmrsConstants.GP_VISIT_TYPES_TO_AUTO_CLOSE + "' global property");
      }
    }
 catch (    Exception e) {
      log.error("Error while auto stopping open visits:",e);
    }
 finally {
      stopExecuting();
    }
  }
 else   if (!isTaskEnabled()) {
    if (log.isWarnEnabled())     log.warn("Can't start Auto Close Open Visits Task because it is disabled");
  }
}
