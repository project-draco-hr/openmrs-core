{
  Criteria searchCriteria=sessionFactory.getCurrentSession().createCriteria(GlobalProperty.class);
  searchCriteria.add(Restrictions.eq("property",OpenmrsConstants.GP_NEXT_ORDER_NUMBER_SEED));
  GlobalProperty globalProperty=(GlobalProperty)sessionFactory.getCurrentSession().get(GlobalProperty.class,OpenmrsConstants.GP_NEXT_ORDER_NUMBER_SEED,LockOptions.UPGRADE);
  if (globalProperty == null) {
    throw new APIException("GlobalProperty.missing ",new Object[]{OpenmrsConstants.GP_NEXT_ORDER_NUMBER_SEED});
  }
  String gpTextValue=globalProperty.getPropertyValue();
  if (StringUtils.isBlank(gpTextValue)) {
    throw new APIException("GlobalProperty.invalid.value",new Object[]{OpenmrsConstants.GP_NEXT_ORDER_NUMBER_SEED});
  }
  Long gpNumericValue=null;
  try {
    gpNumericValue=Long.parseLong(gpTextValue);
  }
 catch (  NumberFormatException ex) {
    throw new APIException("GlobalProperty.invalid.value",new Object[]{OpenmrsConstants.GP_NEXT_ORDER_NUMBER_SEED});
  }
  globalProperty.setPropertyValue(String.valueOf(gpNumericValue + 1));
  sessionFactory.getCurrentSession().save(globalProperty);
  return gpNumericValue;
}
