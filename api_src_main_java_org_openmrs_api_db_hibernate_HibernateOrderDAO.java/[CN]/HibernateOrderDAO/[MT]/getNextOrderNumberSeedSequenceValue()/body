{
  Criteria searchCriteria=sessionFactory.getCurrentSession().createCriteria(GlobalProperty.class);
  searchCriteria.add(Restrictions.eq("property",OpenmrsConstants.GLOBAL_PROPERTY_NEXT_ORDER_NUMBER_SEED));
  searchCriteria.setLockMode(LockMode.PESSIMISTIC_WRITE);
  GlobalProperty globalProperty=(GlobalProperty)searchCriteria.uniqueResult();
  if (globalProperty == null) {
    throw new APIException("Missing global property named: " + OpenmrsConstants.GLOBAL_PROPERTY_NEXT_ORDER_NUMBER_SEED);
  }
  String gpTextValue=globalProperty.getPropertyValue();
  if (StringUtils.isBlank(gpTextValue)) {
    throw new APIException("Invalid value for global property named: " + OpenmrsConstants.GLOBAL_PROPERTY_NEXT_ORDER_NUMBER_SEED);
  }
  Long gpNumericValue=null;
  try {
    gpNumericValue=Long.parseLong(gpTextValue);
  }
 catch (  NumberFormatException ex) {
    throw new APIException("Invalid value for global property named: " + OpenmrsConstants.GLOBAL_PROPERTY_NEXT_ORDER_NUMBER_SEED);
  }
  globalProperty.setPropertyValue(String.valueOf(gpNumericValue + 1));
  sessionFactory.getCurrentSession().save(globalProperty);
  return gpNumericValue;
}
