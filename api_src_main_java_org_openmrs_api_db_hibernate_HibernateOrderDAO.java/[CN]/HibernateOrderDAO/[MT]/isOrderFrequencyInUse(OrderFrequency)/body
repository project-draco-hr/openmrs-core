{
  ClassPathScanningCandidateComponentProvider provider=new ClassPathScanningCandidateComponentProvider(false);
  provider.addIncludeFilter(new AssignableTypeFilter(Order.class));
  Set<BeanDefinition> components=provider.findCandidateComponents("org/openmrs");
  for (  BeanDefinition component : components) {
    try {
      if (Order.class.getName().equals(component.getBeanClassName())) {
        continue;
      }
      Class<?> cls=Context.loadClass(component.getBeanClassName());
      Field[] fields=cls.getDeclaredFields();
      for (      Field field : fields) {
        if (field.getType().equals(OrderFrequency.class)) {
          Criteria criteria=sessionFactory.getCurrentSession().createCriteria(cls);
          criteria.add(Restrictions.eq(field.getName(),orderFrequency));
          criteria.setMaxResults(1);
          if (criteria.list().size() > 0) {
            return true;
          }
        }
      }
    }
 catch (    ClassNotFoundException ex) {
      log.error("Failed to check whether order frequency is in use for: " + component.getBeanClassName(),ex);
    }
  }
  return false;
}
