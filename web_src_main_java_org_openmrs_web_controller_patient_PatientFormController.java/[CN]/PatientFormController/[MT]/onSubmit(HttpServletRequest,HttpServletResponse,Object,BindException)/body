{
  HttpSession httpSession=request.getSession();
  Patient patient=(Patient)obj;
  if (Context.isAuthenticated()) {
    MessageSourceAccessor msa=getMessageSourceAccessor();
    String action=request.getParameter("action");
    PatientService ps=Context.getPatientService();
    if (action.equals(msa.getMessage("Patient.delete"))) {
      try {
        ps.purgePatient(patient);
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Patient.deleted");
        return new ModelAndView(new RedirectView("index.htm"));
      }
 catch (      DataIntegrityViolationException e) {
        log.error("Unable to delete patient because of database FK errors: " + patient,e);
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"Patient.cannot.delete");
        return new ModelAndView(new RedirectView(getSuccessView() + "?patientId=" + patient.getPatientId().toString()));
      }
    }
 else {
      boolean isError=false;
      try {
        Context.getPatientService().savePatient(patient);
      }
 catch (      InvalidIdentifierFormatException iife) {
        log.error(iife);
        patient.removeIdentifier(iife.getPatientIdentifier());
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"PatientIdentifier.error.formatInvalid");
        isError=true;
      }
catch (      IdentifierNotUniqueException inue) {
        log.error(inue);
        patient.removeIdentifier(inue.getPatientIdentifier());
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"PatientIdentifier.error.notUnique");
        isError=true;
      }
catch (      DuplicateIdentifierException die) {
        log.error(die);
        patient.removeIdentifier(die.getPatientIdentifier());
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"PatientIdentifier.error.duplicate");
        isError=true;
      }
catch (      InsufficientIdentifiersException iie) {
        log.error(iie);
        patient.removeIdentifier(iie.getPatientIdentifier());
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"PatientIdentifier.error.insufficientIdentifiers");
        isError=true;
      }
catch (      PatientIdentifierException pie) {
        log.error(pie);
        patient.removeIdentifier(pie.getPatientIdentifier());
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"PatientIdentifier.error.general");
        isError=true;
      }
      if (patient.getDead() && !isError) {
        log.debug("Patient is dead, so let's make sure there's an Obs for it");
        String causeOfDeathConceptId=Context.getAdministrationService().getGlobalProperty("concept.causeOfDeath");
        Concept causeOfDeath=Context.getConceptService().getConcept(causeOfDeathConceptId);
        if (causeOfDeath != null) {
          List<Obs> obssDeath=Context.getObsService().getObservationsByPersonAndConcept(patient,causeOfDeath);
          if (obssDeath != null) {
            if (obssDeath.size() > 1) {
              log.error("Multiple causes of death (" + obssDeath.size() + ")?  Shouldn't be...");
            }
 else {
              Obs obsDeath=null;
              if (obssDeath.size() == 1) {
                log.debug("Already has a cause of death, so changing it");
                obsDeath=obssDeath.iterator().next();
              }
 else {
                log.debug("No cause of death yet, let's create one.");
                obsDeath=new Obs();
                obsDeath.setPerson(patient);
                obsDeath.setConcept(causeOfDeath);
                Location location=Context.getLocationService().getDefaultLocation();
                if (location != null)                 obsDeath.setLocation(location);
 else                 log.error("Could not find a suitable location for which to create this new Obs");
              }
              Concept currCause=patient.getCauseOfDeath();
              if (currCause == null) {
                log.debug("Current cause is null, attempting to set to NONE");
                String noneConcept=Context.getAdministrationService().getGlobalProperty("concept.none");
                currCause=Context.getConceptService().getConcept(noneConcept);
              }
              if (currCause != null) {
                log.debug("Current cause is not null, setting to value_coded");
                obsDeath.setValueCoded(currCause);
                obsDeath.setValueCodedName(currCause.getName());
                Date dateDeath=patient.getDeathDate();
                if (dateDeath == null)                 dateDeath=new Date();
                obsDeath.setObsDatetime(dateDeath);
                String otherConcept=Context.getAdministrationService().getGlobalProperty("concept.otherNonCoded");
                Concept conceptOther=Context.getConceptService().getConcept(otherConcept);
                boolean deathReasonChanged=false;
                if (conceptOther != null) {
                  String otherInfo=ServletRequestUtils.getStringParameter(request,"causeOfDeath_other","");
                  if (conceptOther.equals(currCause)) {
                    deathReasonChanged=!otherInfo.equals(obsDeath.getValueText());
                    log.debug("Setting value_text as " + otherInfo);
                    obsDeath.setValueText(otherInfo);
                  }
 else {
                    deathReasonChanged=!otherInfo.equals("");
                    log.debug("New concept is NOT the OTHER concept, so setting to blank");
                    obsDeath.setValueText("");
                  }
                }
 else {
                  log.debug("Don't seem to know about an OTHER concept, so deleting value_text");
                  obsDeath.setValueText("");
                }
                boolean shouldSaveObs=(null == obsDeath.getId()) || deathReasonChanged;
                if (shouldSaveObs) {
                  if (null == obsDeath.getVoidReason())                   obsDeath.setVoidReason("Changed in patient demographics editor");
                  Context.getObsService().saveObs(obsDeath,obsDeath.getVoidReason());
                }
              }
 else {
                log.debug("Current cause is still null - aborting mission");
              }
            }
          }
        }
 else {
          log.debug("Cause of death is null - should not have gotten here without throwing an error on the form.");
        }
      }
      if (!isError) {
        String view=getSuccessView();
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"Patient.saved");
        view=view + "?patientId=" + patient.getPatientId();
        return new ModelAndView(new RedirectView(view));
      }
 else {
        return showForm(request,response,errors);
      }
    }
  }
  return new ModelAndView(new RedirectView(getFormView()));
}
