{
  int pos=name.lastIndexOf(".");
  String classPackageName;
  if (pos > 0) {
    classPackageName=name.substring(0,pos);
  }
 else {
    classPackageName=name;
  }
  ArrayList<ModuleClassLoader> moduleClassLoaderArrayList=new ArrayList<ModuleClassLoader>(moduleClassLoaders);
  Collections.sort(moduleClassLoaderArrayList,new Comparator<ModuleClassLoader>(){
    @Override public int compare(    ModuleClassLoader o1,    ModuleClassLoader o2){
      return o2.getModule().getPackageName().length() - o1.getModule().getPackageName().length();
    }
  }
);
  for (  ModuleClassLoader classLoader : moduleClassLoaderArrayList) {
    boolean tryToLoad=classPackageName.startsWith(classLoader.getModule().getPackageName());
    if (!tryToLoad) {
      for (      String providedPackage : classLoader.getAdditionalPackages()) {
        if (classPackageName.startsWith(providedPackage)) {
          tryToLoad=true;
          break;
        }
      }
    }
    if (tryToLoad) {
      try {
        Class<?> c=classLoader.loadClass(name);
        loadedClasses.add(c);
        return c;
      }
 catch (      ClassNotFoundException e) {
      }
    }
  }
  return null;
}
