{
  if (libCacheFolder != null)   return libCacheFolderInitialized ? libCacheFolder : null;
synchronized (ModuleClassLoader.class) {
    libCacheFolder=new File(System.getProperty("java.io.tmpdir"),System.currentTimeMillis() + LIBCACHESUFFIX);
    if (log.isDebugEnabled())     log.debug("libraries cache folder is " + libCacheFolder);
    File lockFile=new File(libCacheFolder,"lock");
    if (lockFile.exists()) {
      log.error("can't initialize libraries cache folder " + libCacheFolder + " as lock file indicates that it"+ " is owned by another openmrs instance");
      return null;
    }
    if (libCacheFolder.exists()) {
      try {
        OpenmrsUtil.deleteDirectory(libCacheFolder);
      }
 catch (      IOException io) {
        log.warn("Unable to delete: " + libCacheFolder.getName());
      }
    }
 else {
      deleteOldLibCaches(libCacheFolder);
      libCacheFolder.mkdirs();
    }
    try {
      if (!lockFile.createNewFile()) {
        log.error("can't create lock file in JPF libraries cache folder" + libCacheFolder);
        return null;
      }
    }
 catch (    IOException ioe) {
      log.error("can't create lock file in JPF libraries cache folder " + libCacheFolder,ioe);
      return null;
    }
    lockFile.deleteOnExit();
    libCacheFolder.deleteOnExit();
    libCacheFolderInitialized=true;
  }
  return libCacheFolder;
}
