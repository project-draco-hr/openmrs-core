{
  FilenameFilter cacheDirFilter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(LIBCACHESUFFIX);
    }
  }
;
  FilenameFilter lockFilter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.equals("lock");
    }
  }
;
  File tempLocation=libCacheFolder.getParentFile();
  File[] listFiles=tempLocation.listFiles(cacheDirFilter);
  if (listFiles != null) {
    for (    File cacheDir : listFiles) {
      if (cacheDir.isDirectory() && !cacheDir.equals(libCacheFolder)) {
        if (cacheDir.list(lockFilter).length == 0) {
          try {
            OpenmrsUtil.deleteDirectory(cacheDir);
          }
 catch (          IOException io) {
            log.warn("Unable to delete: " + cacheDir.getName());
          }
        }
      }
    }
  }
}
