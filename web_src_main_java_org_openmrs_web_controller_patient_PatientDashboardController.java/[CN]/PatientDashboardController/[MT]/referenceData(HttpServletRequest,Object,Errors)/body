{
  log.debug("Entering referenceData");
  Patient patient=(Patient)obj;
  log.debug("patient: '" + patient + "'");
  Map<String,Object> map=new HashMap<String,Object>();
  String causeOfDeathOther="";
  if (Context.isAuthenticated()) {
    if (conceptCause == null) {
      String propCause=Context.getAdministrationService().getGlobalProperty("concept.causeOfDeath");
      Concept conceptCause=Context.getConceptService().getConcept(propCause);
    }
    if (conceptCause != null) {
      List<Obs> obssDeath=Context.getObsService().getObservationsByPersonAndConcept(patient,conceptCause);
      if (obssDeath.size() == 1) {
        Obs obsDeath=obssDeath.iterator().next();
        causeOfDeathOther=obsDeath.getValueText();
        if (causeOfDeathOther == null) {
          log.debug("cod is null, so setting to empty string");
          causeOfDeathOther="";
        }
 else {
          log.debug("cod is valid: " + causeOfDeathOther);
        }
      }
 else {
        log.debug("obssDeath is wrong size: " + obssDeath.size());
      }
    }
 else {
      log.debug("No concept cause found");
    }
  }
  String patientVariation="";
  if (reasonForExitConcept == null)   reasonForExitConcept=Context.getConceptService().getConcept(Context.getAdministrationService().getGlobalProperty("concept.reasonExitedCare"));
  if (reasonForExitConcept != null) {
    List<Obs> patientExitObs=Context.getObsService().getObservationsByPersonAndConcept(patient,reasonForExitConcept);
    if (patientExitObs != null) {
      log.debug("Exit obs is size " + patientExitObs.size());
      if (patientExitObs.size() == 1) {
        Obs exitObs=patientExitObs.iterator().next();
        Concept exitReason=exitObs.getValueCoded();
        Date exitDate=exitObs.getObsDatetime();
        if (exitReason != null && exitDate != null) {
          patientVariation="Exited";
        }
      }
 else       if (patientExitObs.size() > 1) {
        log.error("Too many reasons for exit - not putting data into model");
      }
    }
  }
  map.put("patientVariation",patientVariation);
  map.put("emptyIdentifier",new PatientIdentifier());
  map.put("emptyName",new PersonName());
  map.put("emptyAddress",new PersonAddress());
  map.put("causeOfDeathOther",causeOfDeathOther);
  return map;
}
