{
  StringBuilder sb=new StringBuilder();
  sb.append("Patients who stopped or changed ");
  if ((getDrugList() != null && getDrugList().size() > 0) || (getGenericDrugList() != null && getGenericDrugList().size() > 0)) {
    if (getDrugList() != null && getDrugList().size() > 0) {
      if (getDrugList().size() == 1) {
        sb.append(getDrugList().get(0).getName());
      }
 else {
        sb.append("any of [");
        for (Iterator<Drug> i=getDrugList().iterator(); i.hasNext(); ) {
          sb.append(" " + i.next().getName() + " ");
          if (i.hasNext()) {
            sb.append(",");
          }
        }
        sb.append("]");
      }
    }
    if (getGenericDrugList() != null && getGenericDrugList().size() > 0) {
      if (getGenericDrugList().size() == 1) {
        sb.append("any form of " + getGenericDrugList().get(0).getName().getName());
      }
 else {
        sb.append("any form of [");
        for (Iterator<Concept> i=getGenericDrugList().iterator(); i.hasNext(); ) {
          sb.append(" " + i.next().getName().getName() + " ");
          if (i.hasNext()) {
            sb.append(",");
          }
        }
        sb.append(" ]");
      }
    }
  }
 else {
    sb.append("any drug");
  }
  if (getDiscontinuedReasonList() != null && getDiscontinuedReasonList().size() > 0) {
    if (getDiscontinuedReasonList().size() == 1) {
      String reason="[name not defined]";
      ConceptName cn=getDiscontinuedReasonList().get(0).getName();
      if (cn != null) {
        reason=cn.getName();
      }
      sb.append(" because of " + reason);
    }
 else {
      sb.append(" because of any of [");
      for (Iterator<Concept> i=getDiscontinuedReasonList().iterator(); i.hasNext(); ) {
        sb.append(" " + i.next().getName().getName() + " ");
        if (i.hasNext()) {
          sb.append(",");
        }
      }
      sb.append("]");
    }
  }
  if (withinLastMonths != null || withinLastDays != null) {
    sb.append(" within the last ");
    if (withinLastMonths != null) {
      sb.append(withinLastMonths + " month(s) ");
    }
    if (withinLastDays != null) {
      sb.append(withinLastDays + " day(s) ");
    }
  }
  if (sinceDate != null) {
    sb.append(" on or after " + sinceDate + " ");
  }
  if (untilDate != null) {
    sb.append(" on or before " + untilDate + " ");
  }
  return sb.toString();
}
