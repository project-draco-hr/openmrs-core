{
  Locale locale=Context.getLocale();
  Map<String,Object> map=new HashMap<String,Object>();
  String defaultVerbose="false";
  ConceptService cs=Context.getConceptService();
  String conceptId=request.getParameter("conceptId");
  ConceptName conceptName=new ConceptName();
  Collection<ConceptSynonym> conceptSynonyms=new Vector<ConceptSynonym>();
  Map<String,ConceptName> conceptNamesByLocale=new HashMap<String,ConceptName>();
  Map<Locale,Collection<ConceptSynonym>> conceptSynonymsByLocale=new HashMap<Locale,Collection<ConceptSynonym>>();
  Map<Double,Object[]> conceptSets=new TreeMap<Double,Object[]>();
  Map<String,String> conceptAnswers=new TreeMap<String,String>();
  Collection<Form> forms=new HashSet<Form>();
  Map<Integer,String> questionsAnswered=new TreeMap<Integer,String>();
  Map<Integer,String> containedInSets=new TreeMap<Integer,String>();
  boolean isNew=true;
  if (conceptId != null) {
    Concept concept=cs.getConcept(Integer.valueOf(conceptId));
    if (concept != null) {
      isNew=false;
      for (      Locale l : OPENMRS_CONCEPT_LOCALES()) {
        ConceptName cn=concept.getName(l,true);
        if (cn == null) {
          cn=new ConceptName();
        }
        conceptNamesByLocale.put(l.toString(),cn);
      }
      for (      Locale l : OPENMRS_CONCEPT_LOCALES()) {
        conceptSynonymsByLocale.put(l,concept.getSynonyms(l));
      }
      conceptName=concept.getName(locale);
      if (conceptName == null)       conceptName=new ConceptName();
      conceptSynonyms=concept.getSynonyms(locale);
      for (      ConceptSet set : concept.getConceptSets()) {
        Object[] arr={set.getConcept().getConceptId().toString(),set.getConcept().getName(locale)};
        conceptSets.put(set.getSortWeight(),arr);
      }
      for (      ConceptAnswer answer : concept.getAnswers(true)) {
        log.debug("getting answers");
        String key=answer.getAnswerConcept().getConceptId().toString();
        ConceptName cn=answer.getAnswerConcept().getName(locale);
        String name="";
        if (cn != null)         name=cn.toString();
        if (answer.getAnswerDrug() != null) {
          key=key + "^" + answer.getAnswerDrug().getDrugId();
          name=answer.getAnswerDrug().getFullName(locale);
        }
        if (answer.getAnswerConcept().isRetired())         name="<span class='retired'>" + name + "</span>";
        conceptAnswers.put(key,name);
      }
      forms=Context.getFormService().getForms(concept);
      for (      Concept c : Context.getConceptService().getQuestionsForAnswer(concept)) {
        ConceptName cn=c.getName(locale);
        if (cn == null)         questionsAnswered.put(c.getConceptId(),"No Name Defined");
 else         questionsAnswered.put(c.getConceptId(),cn.getName());
      }
      for (      ConceptSet set : Context.getConceptService().getSetsContainingConcept(concept)) {
        Concept c=set.getConceptSet();
        ConceptName cn=c.getName(locale);
        if (cn == null)         containedInSets.put(c.getConceptId(),"No Name Defined");
 else         containedInSets.put(c.getConceptId(),cn.getName());
      }
    }
    if (Context.isAuthenticated())     defaultVerbose=Context.getAuthenticatedUser().getUserProperty(OpenmrsConstants.USER_PROPERTY_SHOW_VERBOSE);
  }
  if (isNew) {
    for (    Locale l : OPENMRS_CONCEPT_LOCALES()) {
      conceptNamesByLocale.put(l.toString(),new ConceptName());
    }
    for (    Locale l : OPENMRS_CONCEPT_LOCALES()) {
      conceptSynonymsByLocale.put(l,new HashSet<ConceptSynonym>());
    }
  }
  map.put("locales",OPENMRS_CONCEPT_LOCALES());
  map.put("conceptName",conceptName);
  for (  Map.Entry<String,ConceptName> e : conceptNamesByLocale.entrySet()) {
    map.put("conceptName_" + e.getKey(),e.getValue());
  }
  map.put("conceptSynonyms",conceptSynonyms);
  map.put("conceptSynonymsByLocale",conceptSynonymsByLocale);
  map.put("conceptSets",conceptSets);
  map.put("conceptAnswers",conceptAnswers);
  map.put("formsInUse",forms);
  map.put("questionsAnswered",questionsAnswered);
  map.put("containedInSets",containedInSets);
  map.put("classes",cs.getConceptClasses());
  map.put("datatypes",cs.getAllConceptDatatypes());
  map.put("locale",locale.getLanguage().substring(0,2));
  map.put("defaultVerbose",defaultVerbose.equals("true") ? true : false);
  return map;
}
