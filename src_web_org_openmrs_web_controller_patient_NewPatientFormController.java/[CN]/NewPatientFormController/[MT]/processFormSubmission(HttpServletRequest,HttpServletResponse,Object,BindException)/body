{
  HttpSession httpSession=request.getSession();
  Context context=(Context)httpSession.getAttribute(WebConstants.OPENMRS_CONTEXT_HTTPSESSION_ATTR);
  PatientListItem pli=(PatientListItem)obj;
  if (context != null && context.isAuthenticated()) {
    FormEntryService ps=context.getFormEntryService();
    MessageSourceAccessor msa=getMessageSourceAccessor();
    if (request.getParameter("action") == null || request.getParameter("action").equals(msa.getMessage("general.save"))) {
      ValidationUtils.rejectIfEmptyOrWhitespace(errors,"familyName","error.name");
      if (pli.getPatientId() == null) {
        boolean invalid=true;
        for (        String identifier : request.getParameterValues("newIdentifier")) {
          if (identifier != null && !identifier.equals("")) {
            invalid=false;
          }
        }
        if (invalid) {
          ValidationUtils.rejectIfEmptyOrWhitespace(errors,"identifier","PatientIdentifier.error.null");
        }
      }
 else {
        String[] identifiers=request.getParameterValues("newIdentifier");
        String[] types=request.getParameterValues("newIdentifierType");
        for (int i=0; i < identifiers.length; i++) {
          if (identifiers[i].length() > 0) {
            if (types[i].equals("") || types[i] == null)             errors.reject("Identifier.identifierType.null");
 else {
              PatientIdentifierType type=ps.getPatientIdentifierType(Integer.valueOf(types[i]));
              String[] args={identifiers[i]};
              try {
                if (type.hasCheckDigit() && !Helper.isValidCheckDigit(identifiers[i])) {
                  log.error("hasCheckDigit and is not valid: " + type.getName() + " "+ identifiers[i]);
                  errors.rejectValue("identifier","error.checkdigits",args,"Invalid Checkdigit " + identifiers[i]);
                }
 else                 if (type.hasCheckDigit() == false && identifiers[i].contains("-")) {
                  log.error("hasn't CheckDigit and contains '-': " + type.getName() + " "+ identifiers[i]);
                  String[] args2={"-",identifiers[i]};
                  errors.rejectValue("identifier","error.character.invalid",args2,"Invalid character '-' in " + identifiers[i]);
                }
              }
 catch (              Exception e) {
                log.error("exception thrown: " + type.getName() + " "+ identifiers[i]);
                log.error(e);
                errors.rejectValue("identifier","error.checkdigits",args,"Invalid Checkdigit " + identifiers[i]);
              }
            }
          }
        }
      }
      ValidationUtils.rejectIfEmptyOrWhitespace(errors,"gender","error.null");
    }
  }
  return super.processFormSubmission(request,response,pli,errors);
}
