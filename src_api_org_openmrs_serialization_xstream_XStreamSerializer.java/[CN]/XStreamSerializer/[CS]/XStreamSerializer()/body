{
  xstream=new XStream(new DomDriver()){
    protected MapperWrapper wrapMapper(    MapperWrapper next){
      MapperWrapper mapper=new CGLibMapper(next);
      mapper=new HibernateCollectionMapper(mapper);
      return mapper;
    }
  }
;
  xstream.useAttributeFor(BaseOpenmrsObject.class,"uuid");
  xstream.useAttributeFor(BaseOpenmrsData.class,"voided");
  xstream.useAttributeFor(BaseOpenmrsMetadata.class,"retired");
  this.commonConfig();
  xstream.registerConverter(new HibernateCollectionConverter(xstream.getConverterLookup()));
  xstream.registerConverter(new CustomCGLIBEnhancedConverter(xstream.getMapper(),xstream.getConverterLookup()));
  xstream.registerConverter(new CustomSQLTimestampConverter());
  xstream.registerConverter(new DateConverter("yyyy-MM-dd HH:mm:ss z",new String[]{"yyyy-MM-dd HH:mm:ss.S z","yyyy-MM-dd HH:mm:ssz","yyyy-MM-dd HH:mm:ss.S a","yyyy-MM-dd HH:mm:ssa"}));
  xstream.setMarshallingStrategy(new CustomReferenceByIdMarshallingStrategy());
}
