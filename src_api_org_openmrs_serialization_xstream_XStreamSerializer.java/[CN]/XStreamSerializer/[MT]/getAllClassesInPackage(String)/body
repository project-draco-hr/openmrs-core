{
  List<Class<?>> list=new ArrayList<Class<?>>();
  Enumeration<URL> resources=null;
  try {
    resources=OpenmrsClassLoader.getInstance().getResources(packageName.replace('.','/'));
    while (resources.hasMoreElements()) {
      URL url=resources.nextElement();
      if ("jar".equals(url.getProtocol())) {
        JarURLConnection con=(JarURLConnection)url.openConnection();
        con.setUseCaches(false);
        JarFile jarFile=con.getJarFile();
        Enumeration<JarEntry> e=jarFile.entries();
        String matchingPattern=packageName.replace('.','/') + "/" + "[^/$]+.class";
        Pattern p=Pattern.compile(matchingPattern);
        Matcher m=null;
        Class<?> loadedClass=null;
        while (e.hasMoreElements()) {
          JarEntry entry=e.nextElement();
          m=p.matcher(entry.getName());
          if (m.matches() == true) {
            String tempName=entry.getName().replace('/','.');
            String className=tempName.substring(0,tempName.indexOf(".class"));
            loadedClass=OpenmrsClassLoader.getInstance().loadClass(className);
            list.add(loadedClass);
          }
        }
      }
 else {
        File dir=new File(url.getFile());
        Class<?> loadedClass=null;
        if (dir.exists() && dir.isDirectory()) {
          File[] fileList=dir.listFiles();
          for (          File f : fileList) {
            if (f.isFile() && f.getName().endsWith(".class") && !f.getName().contains("$")) {
              String className=packageName + "." + f.getName().substring(0,f.getName().indexOf(".class"));
              loadedClass=OpenmrsClassLoader.getInstance().loadClass(className);
              list.add(loadedClass);
            }
          }
        }
      }
    }
    return list;
  }
 catch (  Exception e) {
    String errMsg="Unable to load serialized class";
    throw new SerializationException(errMsg,e);
  }
}
