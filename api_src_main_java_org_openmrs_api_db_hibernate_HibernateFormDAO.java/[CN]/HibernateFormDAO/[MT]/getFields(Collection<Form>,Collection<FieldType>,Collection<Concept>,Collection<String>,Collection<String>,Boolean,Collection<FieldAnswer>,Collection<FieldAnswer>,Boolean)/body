{
  Criteria crit=sessionFactory.getCurrentSession().createCriteria(Field.class);
  if (!forms.isEmpty()) {
    crit.add(Restrictions.in("form",forms));
  }
  if (!fieldTypes.isEmpty()) {
    crit.add(Restrictions.in("fieldType",fieldTypes));
  }
  if (!concepts.isEmpty()) {
    crit.add(Restrictions.in("concept",concepts));
  }
  if (!tableNames.isEmpty()) {
    crit.add(Restrictions.in("tableName",tableNames));
  }
  if (!attributeNames.isEmpty()) {
    crit.add(Restrictions.in("attributeName",attributeNames));
  }
  if (selectMultiple != null) {
    crit.add(Restrictions.eq("selectMultiple",selectMultiple));
  }
  if (!containsAllAnswers.isEmpty()) {
    throw new APIException("Form.getFields.error",new Object[]{"containsAllAnswers"});
  }
  if (!containsAnyAnswer.isEmpty()) {
    throw new APIException("Form.getFields.error",new Object[]{"containsAnyAnswer"});
  }
  if (retired != null) {
    crit.add(Restrictions.eq("retired",retired));
  }
  return crit.list();
}
