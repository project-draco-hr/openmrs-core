{
  if (searchOnNamesOrIdentifiers && (name == null || identifier == null)) {
    if (name == null)     name=identifier;
 else     identifier=name;
  }
  name=HibernateUtil.escapeSqlWildcards(name,sessionFactory);
  identifier=HibernateUtil.escapeSqlWildcards(identifier,sessionFactory);
  criteria.createAlias("names","name");
  if (orderByNames) {
    criteria.addOrder(Order.asc("name.givenName"));
    criteria.addOrder(Order.asc("name.middleName"));
    criteria.addOrder(Order.asc("name.familyName"));
  }
  criteria.setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY);
  Criterion nameCriterion=null;
  if (name != null) {
    nameCriterion=prepareNameCriterion(name);
  }
  Criterion identifierCriterion=null;
  if (identifier != null || identifierTypes.size() > 0) {
    identifierCriterion=prepareIdentifierCriterion(identifier,identifierTypes,matchIdentifierExactly,searchOnNamesOrIdentifiers);
  }
  if (searchOnNamesOrIdentifiers) {
    criteria.add(Restrictions.or(nameCriterion,identifierCriterion));
  }
 else {
    if (nameCriterion != null) {
      criteria.add(nameCriterion);
    }
    if (identifierCriterion != null) {
      criteria.add(identifierCriterion);
    }
  }
  criteria.add(Restrictions.eq("voided",false));
  return criteria;
}
