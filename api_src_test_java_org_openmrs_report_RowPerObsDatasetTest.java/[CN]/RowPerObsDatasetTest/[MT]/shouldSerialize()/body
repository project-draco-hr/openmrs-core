{
  executeDataSet("org/openmrs/report/include/RowPerObsDatasetTest.xml");
  EvaluationContext evalContext=new EvaluationContext();
  DataSetService service=Context.getDataSetService();
  PatientSearch kids=PatientSearch.createFilterSearch(PatientCharacteristicFilter.class);
  Calendar today=new GregorianCalendar();
  Integer maxAge=today.get(Calendar.YEAR) - 2007 + 1;
  kids.addArgument("maxAge",maxAge.toString(),Integer.class);
  Cohort kidsCohort=Context.getCohortService().evaluate(kids,evalContext);
  RowPerObsDataSetDefinition definition=new RowPerObsDataSetDefinition();
  definition.setName("Row per Obs");
  definition.getQuestions().add(Context.getConceptService().getConcept(5089));
  ReportSchema rs=new ReportSchema();
  rs.setName("Testing row-per-obs");
  rs.setDescription("Tesing RowPerObsDataSet*");
  rs.addDataSetDefinition(definition);
  Serializer serializer=OpenmrsUtil.getShortSerializer();
  StringWriter writer=new StringWriter();
  serializer.write(rs,writer);
  String expectedOutput="<reportSchema id=\"1\">\n   <description id=\"2\"><![CDATA[Tesing RowPerObsDataSet*]]></description>\n   <dataSets class=\"java.util.Vector\" id=\"3\">\n      <dataSetDefinition class=\"org.openmrs.report.RowPerObsDataSetDefinition\" id=\"4\" name=\"Row per Obs\">\n         <questions class=\"java.util.HashSet\" id=\"5\">\n            <concept id=\"6\" conceptId=\"5089\"/>\n         </questions>\n      </dataSetDefinition>\n   </dataSets>\n   <name id=\"7\"><![CDATA[Testing row-per-obs]]></name>\n</reportSchema>";
  String xmlOutput=writer.toString();
  XMLAssert.assertXpathEvaluatesTo("5089","//reportSchema/dataSets/dataSetDefinition/questions/concept/@conceptId",xmlOutput);
  rs=serializer.read(ReportSchema.class,xmlOutput);
  assertEquals("Testing row-per-obs",rs.getName());
  assertEquals(1,rs.getDataSetDefinitions().size());
  ReportData data=Context.getReportService().evaluate(rs,kidsCohort,evalContext);
  StringWriter w=new StringWriter();
  new TsvReportRenderer().render(data,null,w);
  expectedOutput="\"patientId\"	\"question\"	\"questionConceptId\"	\"answer\"	\"answerConceptId\"	\"obsDatetime\"	\"encounterId\"	\"obsGroupId\"	\n\"2\"	\"WEIGHT (KG)\"	\"5089\"	\"100.0\"	\"\"	\"2005-01-01 00:00:00.0\"	\"1\"	\"\"	\n";
  assertEquals(expectedOutput,w.toString());
}
