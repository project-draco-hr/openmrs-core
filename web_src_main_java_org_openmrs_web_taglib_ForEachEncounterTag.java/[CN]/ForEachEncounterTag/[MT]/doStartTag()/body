{
  if (encounters == null || encounters.isEmpty()) {
    log.debug("ForEachEncounterTag skipping body due to 'encounters' param = " + encounters);
    return SKIP_BODY;
  }
  if (StringUtils.isEmpty(sortBy)) {
    sortBy="encounterDatetime";
  }
  Comparator comp=new BeanComparator(sortBy,(descending ? new ReverseComparator(new ComparableComparator()) : new ComparableComparator()));
  Collections.sort((List)encounters,comp);
  matchingEncs=new ArrayList<Encounter>();
  for (Iterator<Encounter> i=encounters.iterator(); i.hasNext(); ) {
    if (getNum() != null && getNum() <= matchingEncs.size()) {
      break;
    }
    Encounter e=i.next();
    if (type == null || e.getEncounterType().getEncounterTypeId().intValue() == type.intValue()) {
      matchingEncs.add(e);
    }
  }
  log.debug("ForEachEncounterTag found " + matchingEncs.size() + " encounters matching type = "+ type);
  if (matchingEncs.isEmpty()) {
    return SKIP_BODY;
  }
 else {
    pageContext.setAttribute("count",count);
    pageContext.setAttribute(var,matchingEncs.get(count++));
    return EVAL_BODY_BUFFERED;
  }
}
