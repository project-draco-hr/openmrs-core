{
  Order order1=new Order();
  OrderType ordertypes1=orderService.getOrderTypes().get(1);
  Concept concept1=conceptService.getConcept(1);
  User orderer1=us.getUser(1);
  Encounter encounter1=(Encounter)es.getEncounter(1);
  String instructions1="instruct1";
  Date start1=new Date();
  Date autoexpire1=new Date();
  order1.setOrderType(ordertypes1);
  order1.setConcept(concept1);
  order1.setOrderer(orderer1);
  order1.setEncounter(encounter1);
  order1.setInstructions(instructions1);
  order1.setStartDate(start1);
  order1.setAutoExpireDate(autoexpire1);
  orderService.createOrder(order1);
  Order order2=orderService.getOrder(order1.getOrderId());
  assertNotNull(order2);
  OrderType ordertypes2=orderService.getOrderTypes().get(2);
  Concept concept2=conceptService.getConcept(2);
  User orderer2=us.getUser(2);
  Encounter encounter2=(Encounter)es.getEncounter(2);
  String instructions2="instruct2";
  Date start2=new Date();
  Date autoexpire2=new Date();
  order2.setOrderType(ordertypes2);
  order2.setConcept(concept2);
  order2.setOrderer(orderer2);
  order2.setEncounter(encounter2);
  order2.setInstructions(instructions2);
  order2.setStartDate(start2);
  order2.setAutoExpireDate(autoexpire2);
  orderService.updateOrder(order2);
  Order order3=orderService.getOrder(order2.getOrderId());
  assertTrue(order3.equals(order1));
  assertTrue(order3.getConcept().equals(concept2));
  assertTrue(order3.getOrderer().equals(orderer2));
  assertTrue(order3.getOrderType().equals(ordertypes2));
  assertTrue(order3.getEncounter().equals(encounter2));
  assertTrue(order3.getInstructions().equals(instructions2));
  assertTrue(order3.getStartDate().equals(start2));
  assertTrue(order3.getAutoExpireDate().equals(autoexpire2));
  orderService.voidOrder(order1,"testing void function");
  Order order4=orderService.getOrder(order1.getOrderId());
  assertTrue(order4.getVoidReason().equals("testing void function"));
  assertTrue(order4.getVoidedBy().equals(order3.getVoidedBy()));
  assertTrue(order4.isVoided());
  orderService.discontinueOrder(order4,"discontinue instruct");
  Order order5=orderService.getOrder(order4.getOrderId());
  assertTrue(order5.getDiscontinuedReason().equals("discontinue instruct"));
  assertTrue(order5.getDiscontinuedBy().equals(ContextFactory.getContext().getAuthenticatedUser()));
  assertTrue(order5.isDiscontinued());
  orderService.undiscontinueOrder(order5);
  orderService.unvoidOrder(order5);
  orderService.deleteOrder(order1);
  assertNull(orderService.getOrder(order1.getOrderId()));
}
