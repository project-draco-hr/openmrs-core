{
  if (encounterColumn == null)   encounterColumn="creator";
  encounterColumn=encounterColumn.toLowerCase();
  List<DataEntryStatistic> ret=new ArrayList<DataEntryStatistic>();
  if (groupBy == null)   groupBy="";
  if (groupBy.length() != 0)   groupBy="e." + groupBy + ", ";
  log.debug("GROUP BY IS " + groupBy);
  String hql="select " + groupBy + "e."+ encounterColumn+ ", e.encounterType"+ ", e.form, count(distinct e.encounterId), count(o.obsId) "+ "from Obs o right join o.encounter as e ";
  if (fromDate != null || toDate != null) {
    String s="where ";
    if (fromDate != null)     s+="e.dateCreated >= :fromDate ";
    if (toDate != null) {
      if (fromDate != null)       s+="and ";
      s+="e.dateCreated <= :toDate ";
    }
    hql+=s;
  }
  hql+="group by ";
  if (groupBy.length() > 0)   hql+=groupBy + " ";
  hql+="e." + encounterColumn + ", e.encounterType, e.form ";
  Query q=sessionFactory.getCurrentSession().createQuery(hql);
  if (fromDate != null)   q.setParameter("fromDate",fromDate);
  if (toDate != null)   q.setParameter("toDate",toDate);
  List<Object[]> l=q.list();
  for (  Object[] holder : l) {
    DataEntryStatistic s=new DataEntryStatistic();
    int offset=0;
    if (groupBy.length() > 0) {
      s.setGroupBy(holder[0]);
      offset=1;
    }
    s.setUser((User)holder[0 + offset]);
    EncounterType encType=((EncounterType)holder[1 + offset]);
    Form form=((Form)holder[2 + offset]);
    s.setEntryType(form != null ? form.getName() : (encType != null ? encType.getName() : "null"));
    int numEncounters=((Number)holder[3 + offset]).intValue();
    int numObs=((Number)holder[4 + offset]).intValue();
    s.setNumberOfEntries(numEncounters);
    log.debug("NEW Num encounters is " + numEncounters);
    s.setNumberOfObs(numObs);
    log.debug("NEW Num obs is " + numObs);
    ret.add(s);
  }
  if (orderColumn == null)   orderColumn="creator";
  orderColumn=orderColumn.toLowerCase();
  hql="select o." + orderColumn + ", o.orderType.name, count(*) "+ "from Order o ";
  if (fromDate != null || toDate != null) {
    String s="where ";
    if (fromDate != null)     s+="o.dateCreated >= :fromDate ";
    if (toDate != null) {
      if (fromDate != null)       s+="and ";
      s+="o.dateCreated <= :toDate ";
    }
    hql+=s;
  }
  hql+="group by o." + orderColumn + ", o.orderType.name ";
  q=sessionFactory.getCurrentSession().createQuery(hql);
  if (fromDate != null)   q.setParameter("fromDate",fromDate);
  if (toDate != null)   q.setParameter("toDate",toDate);
  l=q.list();
  for (  Object[] holder : l) {
    DataEntryStatistic s=new DataEntryStatistic();
    s.setUser((User)holder[0]);
    s.setEntryType((String)holder[1]);
    s.setNumberOfEntries(((Number)holder[2]).intValue());
    s.setNumberOfObs(0);
    ret.add(s);
  }
  return ret;
}
