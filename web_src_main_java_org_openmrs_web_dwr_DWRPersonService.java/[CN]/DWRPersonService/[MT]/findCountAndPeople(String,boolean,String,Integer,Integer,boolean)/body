{
  Map<String,Object> resultsMap=new HashMap<String,Object>();
  Vector<Object> objectList=new Vector<Object>();
  String phrase=null;
  try {
    UserService us=Context.getUserService();
    int personCount=0;
    if (getMatchCount) {
      if (StringUtils.isNotBlank(roles)) {
        roles=roles.trim();
        List<Role> roleList=new Vector<Role>();
        String[] splitRoles=roles.split(",");
        for (        String role : splitRoles) {
          roleList.add(new Role(role));
        }
        personCount=us.getCountOfUsers(phrase,roleList,includeRetired);
      }
 else {
      }
    }
    if (personCount > 0 || !getMatchCount)     objectList=findBatchOfPeopleByRoles(phrase,includeRetired,roles,start,length);
    resultsMap.put("count",personCount);
    resultsMap.put("objectList",objectList);
  }
 catch (  Exception e) {
    log.error("Error while searching for persons",e);
    objectList.clear();
    objectList.add(Context.getMessageSourceService().getMessage("Person.search.error") + " - " + e.getMessage());
    resultsMap.put("count",0);
    resultsMap.put("objectList",objectList);
  }
  return resultsMap;
}
