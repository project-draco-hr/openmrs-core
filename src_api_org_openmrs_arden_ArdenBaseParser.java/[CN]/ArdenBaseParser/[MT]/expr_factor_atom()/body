{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST expr_factor_atom_AST=null;
  try {
switch (LA(1)) {
case ID:
{
        AST tmp444_AST=null;
        tmp444_AST=astFactory.create(LT(1));
        astFactory.addASTChild(currentAST,tmp444_AST);
        match(ID);
        expr_factor_atom_AST=(AST)currentAST.root;
        break;
      }
case TRUE:
case FALSE:
{
      boolean_value();
      astFactory.addASTChild(currentAST,returnAST);
      expr_factor_atom_AST=(AST)currentAST.root;
      break;
    }
case STRING_LITERAL:
{
    AST tmp445_AST=null;
    tmp445_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp445_AST);
    match(STRING_LITERAL);
    expr_factor_atom_AST=(AST)currentAST.root;
    break;
  }
default :
if ((LA(1) == INTLIT)) {
  AST tmp446_AST=null;
  tmp446_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp446_AST);
  match(INTLIT);
  expr_factor_atom_AST=(AST)currentAST.root;
}
 else if ((LA(1) == NOW || LA(1) == INTLIT)) {
  time_value();
  astFactory.addASTChild(currentAST,returnAST);
  expr_factor_atom_AST=(AST)currentAST.root;
}
 else {
  throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_45);
}
 else {
throw ex;
}
}
returnAST=expr_factor_atom_AST;
}
