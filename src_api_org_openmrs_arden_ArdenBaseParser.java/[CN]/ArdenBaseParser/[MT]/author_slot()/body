{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST author_slot_AST=null;
  try {
    AST tmp190_AST=null;
    tmp190_AST=astFactory.create(LT(1));
    astFactory.makeASTRoot(currentAST,tmp190_AST);
    match(AUTHOR);
    AST tmp191_AST=null;
    tmp191_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp191_AST);
    match(COLON);
{
      _loop36:       do {
        if ((_tokenSet_4.member(LA(1)))) {
          text();
          astFactory.addASTChild(currentAST,returnAST);
        }
 else {
          break _loop36;
        }
      }
 while (true);
    }
{
      _loop40:       do {
        if ((LA(1) == SEMI)) {
          AST tmp192_AST=null;
          tmp192_AST=astFactory.create(LT(1));
          astFactory.addASTChild(currentAST,tmp192_AST);
          match(SEMI);
{
            _loop39:             do {
              if ((_tokenSet_4.member(LA(1)))) {
                text();
                astFactory.addASTChild(currentAST,returnAST);
              }
 else {
                break _loop39;
              }
            }
 while (true);
          }
        }
 else {
          break _loop40;
        }
      }
 while (true);
    }
    AST tmp193_AST=null;
    tmp193_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp193_AST);
    match(ENDBLOCK);
    author_slot_AST=(AST)currentAST.root;
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_10);
    }
 else {
      throw ex;
    }
  }
  returnAST=author_slot_AST;
}
