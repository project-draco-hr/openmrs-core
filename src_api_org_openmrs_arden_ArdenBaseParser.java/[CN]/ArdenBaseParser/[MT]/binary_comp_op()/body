{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST binary_comp_op_AST=null;
  try {
    if ((LA(1) == LESS)) {
      AST tmp373_AST=null;
      tmp373_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp373_AST);
      match(LESS);
      AST tmp374_AST=null;
      tmp374_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp374_AST);
      match(THAN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LITERAL_GREATER)) {
      AST tmp375_AST=null;
      tmp375_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp375_AST);
      match(LITERAL_GREATER);
      AST tmp376_AST=null;
      tmp376_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp376_AST);
      match(THAN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LITERAL_GREATER)) {
      AST tmp377_AST=null;
      tmp377_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp377_AST);
      match(LITERAL_GREATER);
      AST tmp378_AST=null;
      tmp378_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp378_AST);
      match(THAN);
      AST tmp379_AST=null;
      tmp379_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp379_AST);
      match(OR);
      AST tmp380_AST=null;
      tmp380_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp380_AST);
      match(LITERAL_EQUAL);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LESS)) {
      AST tmp381_AST=null;
      tmp381_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp381_AST);
      match(LESS);
      AST tmp382_AST=null;
      tmp382_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp382_AST);
      match(THAN);
      AST tmp383_AST=null;
      tmp383_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp383_AST);
      match(OR);
      AST tmp384_AST=null;
      tmp384_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp384_AST);
      match(LITERAL_EQUAL);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == IN)) {
      AST tmp385_AST=null;
      tmp385_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp385_AST);
      match(IN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_48);
    }
 else {
      throw ex;
    }
  }
  returnAST=binary_comp_op_AST;
}
