{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST binary_comp_op_AST=null;
  try {
    if ((LA(1) == LESS)) {
      AST tmp361_AST=null;
      tmp361_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp361_AST);
      match(LESS);
      AST tmp362_AST=null;
      tmp362_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp362_AST);
      match(THAN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LITERAL_GREATER)) {
      AST tmp363_AST=null;
      tmp363_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp363_AST);
      match(LITERAL_GREATER);
      AST tmp364_AST=null;
      tmp364_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp364_AST);
      match(THAN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LITERAL_GREATER)) {
      AST tmp365_AST=null;
      tmp365_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp365_AST);
      match(LITERAL_GREATER);
      AST tmp366_AST=null;
      tmp366_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp366_AST);
      match(THAN);
      AST tmp367_AST=null;
      tmp367_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp367_AST);
      match(OR);
      AST tmp368_AST=null;
      tmp368_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp368_AST);
      match(LITERAL_EQUAL);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LESS)) {
      AST tmp369_AST=null;
      tmp369_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp369_AST);
      match(LESS);
      AST tmp370_AST=null;
      tmp370_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp370_AST);
      match(THAN);
      AST tmp371_AST=null;
      tmp371_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp371_AST);
      match(OR);
      AST tmp372_AST=null;
      tmp372_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp372_AST);
      match(LITERAL_EQUAL);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == IN)) {
      AST tmp373_AST=null;
      tmp373_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp373_AST);
      match(IN);
      binary_comp_op_AST=(AST)currentAST.root;
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_47);
    }
 else {
      throw ex;
    }
  }
  returnAST=binary_comp_op_AST;
}
