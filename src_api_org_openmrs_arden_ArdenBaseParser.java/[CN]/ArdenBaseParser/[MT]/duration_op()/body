{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST duration_op_AST=null;
  try {
switch (LA(1)) {
case YEAR:
{
        AST tmp475_AST=null;
        tmp475_AST=astFactory.create(LT(1));
        astFactory.addASTChild(currentAST,tmp475_AST);
        match(YEAR);
        duration_op_AST=(AST)currentAST.root;
        break;
      }
case YEARS:
{
      AST tmp476_AST=null;
      tmp476_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp476_AST);
      match(YEARS);
      duration_op_AST=(AST)currentAST.root;
      break;
    }
case MONTH:
{
    AST tmp477_AST=null;
    tmp477_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp477_AST);
    match(MONTH);
    duration_op_AST=(AST)currentAST.root;
    break;
  }
case MONTHS:
{
  AST tmp478_AST=null;
  tmp478_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp478_AST);
  match(MONTHS);
  duration_op_AST=(AST)currentAST.root;
  break;
}
case WEEK:
{
AST tmp479_AST=null;
tmp479_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp479_AST);
match(WEEK);
duration_op_AST=(AST)currentAST.root;
break;
}
case WEEKS:
{
AST tmp480_AST=null;
tmp480_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp480_AST);
match(WEEKS);
duration_op_AST=(AST)currentAST.root;
break;
}
case DAY:
{
AST tmp481_AST=null;
tmp481_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp481_AST);
match(DAY);
duration_op_AST=(AST)currentAST.root;
break;
}
case DAYS:
{
AST tmp482_AST=null;
tmp482_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp482_AST);
match(DAYS);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_hour:
{
AST tmp483_AST=null;
tmp483_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp483_AST);
match(LITERAL_hour);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_hours:
{
AST tmp484_AST=null;
tmp484_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp484_AST);
match(LITERAL_hours);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_minute:
{
AST tmp485_AST=null;
tmp485_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp485_AST);
match(LITERAL_minute);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_minutes:
{
AST tmp486_AST=null;
tmp486_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp486_AST);
match(LITERAL_minutes);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_second:
{
AST tmp487_AST=null;
tmp487_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp487_AST);
match(LITERAL_second);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_seconds:
{
AST tmp488_AST=null;
tmp488_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp488_AST);
match(LITERAL_seconds);
duration_op_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_49);
}
 else {
throw ex;
}
}
returnAST=duration_op_AST;
}
