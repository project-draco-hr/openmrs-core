{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST link_body_AST=null;
  try {
{
      _loop107:       do {
        if ((LA(1) == SINGLE_QUOTE)) {
          AST tmp278_AST=null;
          tmp278_AST=astFactory.create(LT(1));
          astFactory.addASTChild(currentAST,tmp278_AST);
          match(SINGLE_QUOTE);
{
            _loop105:             do {
              if ((_tokenSet_4.member(LA(1)))) {
                text();
                astFactory.addASTChild(currentAST,returnAST);
              }
 else               if ((LA(1) == DOT)) {
                AST tmp279_AST=null;
                tmp279_AST=astFactory.create(LT(1));
                astFactory.addASTChild(currentAST,tmp279_AST);
                match(DOT);
              }
 else               if ((LA(1) == INTLIT)) {
                AST tmp280_AST=null;
                tmp280_AST=astFactory.create(LT(1));
                astFactory.addASTChild(currentAST,tmp280_AST);
                match(INTLIT);
              }
 else {
                break _loop105;
              }
            }
 while (true);
          }
          AST tmp281_AST=null;
          tmp281_AST=astFactory.create(LT(1));
          astFactory.addASTChild(currentAST,tmp281_AST);
          match(SINGLE_QUOTE);
{
switch (LA(1)) {
case SEMI:
{
                AST tmp282_AST=null;
                tmp282_AST=astFactory.create(LT(1));
                astFactory.addASTChild(currentAST,tmp282_AST);
                match(SEMI);
                break;
              }
case ENDBLOCK:
case SINGLE_QUOTE:
{
              break;
            }
default :
{
            throw new NoViableAltException(LT(1),getFilename());
          }
      }
    }
  }
 else {
    break _loop107;
  }
}
 while (true);
}
link_body_AST=(AST)currentAST.root;
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_25);
}
 else {
throw ex;
}
}
returnAST=link_body_AST;
}
