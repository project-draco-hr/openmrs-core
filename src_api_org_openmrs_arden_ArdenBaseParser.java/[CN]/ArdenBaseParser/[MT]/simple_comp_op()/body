{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST simple_comp_op_AST=null;
  try {
switch (LA(1)) {
case EQUALS:
{
{
          AST tmp479_AST=null;
          tmp479_AST=astFactory.create(LT(1));
          astFactory.makeASTRoot(currentAST,tmp479_AST);
          match(EQUALS);
        }
        simple_comp_op_AST=(AST)currentAST.root;
        break;
      }
case LITERAL_EQ:
{
{
        AST tmp480_AST=null;
        tmp480_AST=astFactory.create(LT(1));
        astFactory.addASTChild(currentAST,tmp480_AST);
        match(LITERAL_EQ);
      }
      simple_comp_op_AST=(AST)currentAST.root;
      break;
    }
case LT:
{
    AST tmp481_AST=null;
    tmp481_AST=astFactory.create(LT(1));
    astFactory.makeASTRoot(currentAST,tmp481_AST);
    match(LT);
    simple_comp_op_AST=(AST)currentAST.root;
    break;
  }
case LITERAL_LT:
{
  AST tmp482_AST=null;
  tmp482_AST=astFactory.create(LT(1));
  astFactory.makeASTRoot(currentAST,tmp482_AST);
  match(LITERAL_LT);
  simple_comp_op_AST=(AST)currentAST.root;
  break;
}
case GT:
{
AST tmp483_AST=null;
tmp483_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp483_AST);
match(GT);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_GT:
{
AST tmp484_AST=null;
tmp484_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp484_AST);
match(LITERAL_GT);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LTE:
{
AST tmp485_AST=null;
tmp485_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp485_AST);
match(LTE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_LE:
{
AST tmp486_AST=null;
tmp486_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp486_AST);
match(LITERAL_LE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case GTE:
{
AST tmp487_AST=null;
tmp487_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp487_AST);
match(GTE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_GE:
{
AST tmp488_AST=null;
tmp488_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp488_AST);
match(LITERAL_GE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case NE:
{
AST tmp489_AST=null;
tmp489_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp489_AST);
match(NE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_NE:
{
AST tmp490_AST=null;
tmp490_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp490_AST);
match(LITERAL_NE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_48);
}
 else {
throw ex;
}
}
returnAST=simple_comp_op_AST;
}
