{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST simple_comp_op_AST=null;
  try {
switch (LA(1)) {
case EQUALS:
{
{
          AST tmp428_AST=null;
          tmp428_AST=astFactory.create(LT(1));
          astFactory.makeASTRoot(currentAST,tmp428_AST);
          match(EQUALS);
        }
        simple_comp_op_AST=(AST)currentAST.root;
        break;
      }
case LITERAL_EQ:
{
{
        AST tmp429_AST=null;
        tmp429_AST=astFactory.create(LT(1));
        astFactory.addASTChild(currentAST,tmp429_AST);
        match(LITERAL_EQ);
      }
      simple_comp_op_AST=(AST)currentAST.root;
      break;
    }
case LT:
{
    AST tmp430_AST=null;
    tmp430_AST=astFactory.create(LT(1));
    astFactory.makeASTRoot(currentAST,tmp430_AST);
    match(LT);
    simple_comp_op_AST=(AST)currentAST.root;
    break;
  }
case LITERAL_LT:
{
  AST tmp431_AST=null;
  tmp431_AST=astFactory.create(LT(1));
  astFactory.makeASTRoot(currentAST,tmp431_AST);
  match(LITERAL_LT);
  simple_comp_op_AST=(AST)currentAST.root;
  break;
}
case GT:
{
AST tmp432_AST=null;
tmp432_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp432_AST);
match(GT);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_GT:
{
AST tmp433_AST=null;
tmp433_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp433_AST);
match(LITERAL_GT);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LTE:
{
AST tmp434_AST=null;
tmp434_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp434_AST);
match(LTE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_LE:
{
AST tmp435_AST=null;
tmp435_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp435_AST);
match(LITERAL_LE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case GTE:
{
AST tmp436_AST=null;
tmp436_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp436_AST);
match(GTE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_GE:
{
AST tmp437_AST=null;
tmp437_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp437_AST);
match(LITERAL_GE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case NE:
{
AST tmp438_AST=null;
tmp438_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp438_AST);
match(NE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_NE:
{
AST tmp439_AST=null;
tmp439_AST=astFactory.create(LT(1));
astFactory.makeASTRoot(currentAST,tmp439_AST);
match(LITERAL_NE);
simple_comp_op_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_48);
}
 else {
throw ex;
}
}
returnAST=simple_comp_op_AST;
}
