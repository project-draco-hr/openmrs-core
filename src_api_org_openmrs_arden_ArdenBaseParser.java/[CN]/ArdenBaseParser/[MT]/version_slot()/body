{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST version_slot_AST=null;
  try {
    AST tmp96_AST=null;
    tmp96_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp96_AST);
    match(LITERAL_version);
    AST tmp97_AST=null;
    tmp97_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp97_AST);
    match(COLON);
    AST tmp98_AST=null;
    tmp98_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp98_AST);
    match(INTLIT);
    AST tmp99_AST=null;
    tmp99_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp99_AST);
    match(DOT);
    AST tmp100_AST=null;
    tmp100_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp100_AST);
    match(INTLIT);
    AST tmp101_AST=null;
    tmp101_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp101_AST);
    match(ENDBLOCK);
    version_slot_AST=(AST)currentAST.root;
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_8);
    }
 else {
      throw ex;
    }
  }
  returnAST=version_slot_AST;
}
