{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST version_slot_AST=null;
  try {
    AST tmp142_AST=null;
    tmp142_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp142_AST);
    match(LITERAL_version);
    AST tmp143_AST=null;
    tmp143_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp143_AST);
    match(COLON);
    AST tmp144_AST=null;
    tmp144_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp144_AST);
    match(INTLIT);
    AST tmp145_AST=null;
    tmp145_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp145_AST);
    match(DOT);
    AST tmp146_AST=null;
    tmp146_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp146_AST);
    match(INTLIT);
    AST tmp147_AST=null;
    tmp147_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp147_AST);
    match(ENDBLOCK);
    version_slot_AST=(AST)currentAST.root;
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_8);
    }
 else {
      throw ex;
    }
  }
  returnAST=version_slot_AST;
}
