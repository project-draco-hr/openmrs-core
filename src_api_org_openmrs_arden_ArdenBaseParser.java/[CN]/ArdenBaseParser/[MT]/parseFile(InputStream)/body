{
  try {
    ArdenLexer lexer=new ArdenLexer(s);
    ArdenParser parser=new ArdenParser(lexer);
    parser.startRule();
    AST t=parser.getAST();
    DumpASTVisitor visitor=new DumpASTVisitor();
    visitor.visit(t);
    System.err.println(t.toStringTree());
    ArdenBaseTreeParser treeParser=new ArdenBaseTreeParser();
    MLMObject ardObj=new MLMObject();
    treeParser.maintenance(t,ardObj);
    System.err.println(t.getNextSibling().toStringTree());
    treeParser.library(t.getNextSibling(),ardObj);
    System.err.println(t.getNextSibling().getNextSibling().toStringTree());
    treeParser.data(t.getNextSibling().getNextSibling(),ardObj);
    System.err.println(t.getNextSibling().getNextSibling().getNextSibling().toStringTree());
    String logicstr=treeParser.logic(t.getNextSibling().getNextSibling().getNextSibling(),ardObj);
    System.err.println(t.getNextSibling().getNextSibling().getNextSibling().getNextSibling().toStringTree());
    String actionstr=treeParser.action(t.getNextSibling().getNextSibling().getNextSibling().getNextSibling(),ardObj);
    System.err.println(actionstr);
    System.err.println(logicstr);
    ardObj.PrintConceptMap();
  }
 catch (  Exception e) {
    System.err.println("parser exception: " + e);
    e.printStackTrace();
  }
}
