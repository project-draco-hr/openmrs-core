{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST action_statement_AST=null;
  try {
{
      AST tmp433_AST=null;
      tmp433_AST=astFactory.create(LT(1));
      astFactory.makeASTRoot(currentAST,tmp433_AST);
      match(WRITE);
    }
{
{
switch (LA(1)) {
case LPAREN:
{
            match(LPAREN);
            break;
          }
case THE:
case AT:
case NOW:
case MINIMUM:
case MIN:
case MAXIMUM:
case MAX:
case LAST:
case FIRST:
case EARLIEST:
case LATEST:
case TRUE:
case FALSE:
case INTLIT:
case SEMI:
case ID:
case RPAREN:
case COMMA:
case ACTION_OP:
case LITERAL_MERGE:
case LITERAL_SORT:
case STRING_LITERAL:
{
          break;
        }
default :
{
        throw new NoViableAltException(LT(1),getFilename());
      }
  }
}
{
  if ((_tokenSet_59.member(LA(1)))) {
{
      _loop243:       do {
        if ((LA(1) == ACTION_OP)) {
          AST tmp435_AST=null;
          tmp435_AST=astFactory.create(LT(1));
          astFactory.addASTChild(currentAST,tmp435_AST);
          match(ACTION_OP);
          expr_factor();
          astFactory.addASTChild(currentAST,returnAST);
        }
 else {
          break _loop243;
        }
      }
 while (true);
    }
  }
 else   if ((_tokenSet_60.member(LA(1)))) {
    expr();
    astFactory.addASTChild(currentAST,returnAST);
  }
 else {
    throw new NoViableAltException(LT(1),getFilename());
  }
}
{
switch (LA(1)) {
case RPAREN:
{
      match(RPAREN);
      break;
    }
case AT:
case SEMI:
{
    break;
  }
default :
{
  throw new NoViableAltException(LT(1),getFilename());
}
}
}
}
{
switch (LA(1)) {
case AT:
{
{
AST tmp437_AST=null;
tmp437_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp437_AST);
match(AT);
}
AST tmp438_AST=null;
tmp438_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp438_AST);
match(ID);
break;
}
case SEMI:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
action_statement_AST=(AST)currentAST.root;
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_34);
}
 else {
throw ex;
}
}
returnAST=action_statement_AST;
}
