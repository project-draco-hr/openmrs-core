{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST timepart_AST=null;
  try {
    time();
    astFactory.addASTChild(currentAST,returnAST);
    AST tmp238_AST=null;
    tmp238_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp238_AST);
    match(INTLIT);
    AST tmp239_AST=null;
    tmp239_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp239_AST);
    match(95);
    AST tmp240_AST=null;
    tmp240_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp240_AST);
    match(INTLIT);
    AST tmp241_AST=null;
    tmp241_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp241_AST);
    match(95);
    AST tmp242_AST=null;
    tmp242_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp242_AST);
    match(INTLIT);
    fractional_seconds();
    astFactory.addASTChild(currentAST,returnAST);
    time_zone();
    astFactory.addASTChild(currentAST,returnAST);
    AST tmp243_AST=null;
    tmp243_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp243_AST);
    match(ENDBLOCK);
    timepart_AST=(AST)currentAST.root;
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_25);
    }
 else {
      throw ex;
    }
  }
  returnAST=timepart_AST;
}
