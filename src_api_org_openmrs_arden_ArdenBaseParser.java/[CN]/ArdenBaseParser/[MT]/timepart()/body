{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST timepart_AST=null;
  try {
    time();
    astFactory.addASTChild(currentAST,returnAST);
    AST tmp292_AST=null;
    tmp292_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp292_AST);
    match(INTLIT);
    AST tmp293_AST=null;
    tmp293_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp293_AST);
    match(104);
    AST tmp294_AST=null;
    tmp294_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp294_AST);
    match(INTLIT);
    AST tmp295_AST=null;
    tmp295_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp295_AST);
    match(104);
    AST tmp296_AST=null;
    tmp296_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp296_AST);
    match(INTLIT);
    fractional_seconds();
    astFactory.addASTChild(currentAST,returnAST);
    time_zone();
    astFactory.addASTChild(currentAST,returnAST);
    AST tmp297_AST=null;
    tmp297_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp297_AST);
    match(ENDBLOCK);
    timepart_AST=(AST)currentAST.root;
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_26);
    }
 else {
      throw ex;
    }
  }
  returnAST=timepart_AST;
}
