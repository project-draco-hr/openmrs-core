{
  authenticate();
  ObsService obsService=Context.getObsService();
  String hl7string="MSH|^~\\&|FORMENTRY|AMRS.ELD|HL7LISTENER|AMRS.ELD|20080226102656||ORU^R01|JqnfhKKtouEz8kzTk6Zo|P|2.5|1||||||||16^AMRS.ELD.FORMID\rPID|||3^^^^||John3^Doe^||\rPV1||O|1^Unknown Location||||1^Super User (1-8)|||||||||||||||||||||||||||||||||||||20080212|||||||V\rORC|RE||||||||20080226102537|1^Super User\rOBR|1|||\rOBX|1|NM|5497^CD4, BY FACS^99DCT||450|||||||||20080206\rOBX|2|DT|5096^RETURN VISIT DATE^99DCT||20080229|||||||||20080212";
  Message hl7message=parser.parse(hl7string);
  router.processMessage(hl7message);
  Patient patient=new Patient(3);
  Set<Obs> obsForPatient3=obsService.getObservations(patient,false);
  assertNotNull(obsForPatient3);
  assertTrue("There should be some obs created for #3",obsForPatient3.size() > 0);
  Concept returnVisitDateConcept=new Concept(5096);
  Calendar cal=new GregorianCalendar();
  cal.set(2008,Calendar.FEBRUARY,29,0,0,0);
  Date returnVisitDate=cal.getTime();
  Set<Obs> returnVisitDateObsForPatient3=obsService.getObservations(patient,returnVisitDateConcept,false);
  assertEquals("There should be a return visit date",1,returnVisitDateObsForPatient3.size());
  Obs firstObs=(Obs)returnVisitDateObsForPatient3.toArray()[0];
  assertEquals("The date should be the 29th",returnVisitDate.toString(),firstObs.getValueDatetime().toString());
}
