{
  Map<String,Map<String,String>> systemInfoMap=new LinkedHashMap<String,Map<String,String>>();
  systemInfoMap.put("SystemInfo.title.openmrsInformation",new LinkedHashMap<String,String>(){
    private static final long serialVersionUID=1L;
{
      put("SystemInfo.OpenMRSInstallation.systemDate",new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime()));
      put("SystemInfo.OpenMRSInstallation.systemTime",new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime()));
      put("SystemInfo.OpenMRSInstallation.openmrsVersion",OpenmrsConstants.OPENMRS_VERSION);
      try {
        put("SystemInfo.hostname",InetAddress.getLocalHost().getCanonicalHostName());
      }
 catch (      UnknownHostException e) {
        put("SystemInfo.hostname","Unknown host: " + e.getMessage());
      }
    }
  }
);
  systemInfoMap.put("SystemInfo.title.javaRuntimeEnvironmentInformation",new LinkedHashMap<String,String>(){
    Properties properties=System.getProperties();
    private static final long serialVersionUID=1L;
{
      put("SystemInfo.JavaRuntimeEnv.operatingSystem",properties.getProperty("os.name"));
      put("SystemInfo.JavaRuntimeEnv.operatingSystemArch",properties.getProperty("os.arch"));
      put("SystemInfo.JavaRuntimeEnv.operatingSystemVersion",properties.getProperty("os.version"));
      put("SystemInfo.JavaRuntimeEnv.javaVersion",properties.getProperty("java.version"));
      put("SystemInfo.JavaRuntimeEnv.javaVendor",properties.getProperty("java.vendor"));
      put("SystemInfo.JavaRuntimeEnv.jvmVersion",properties.getProperty("java.vm.version"));
      put("SystemInfo.JavaRuntimeEnv.jvmVendor",properties.getProperty("java.vm.vendor"));
      put("SystemInfo.JavaRuntimeEnv.javaRuntimeName",properties.getProperty("java.runtime.name"));
      put("SystemInfo.JavaRuntimeEnv.javaRuntimeVersion",properties.getProperty("java.runtime.version"));
      put("SystemInfo.JavaRuntimeEnv.userName",properties.getProperty("user.name"));
      put("SystemInfo.JavaRuntimeEnv.systemLanguage",properties.getProperty("user.language"));
      put("SystemInfo.JavaRuntimeEnv.systemTimezone",properties.getProperty("user.timezone"));
      put("SystemInfo.JavaRuntimeEnv.fileSystemEncoding",properties.getProperty("sun.jnu.encoding"));
      put("SystemInfo.JavaRuntimeEnv.userDirectory",properties.getProperty("user.dir"));
      put("SystemInfo.JavaRuntimeEnv.tempDirectory",properties.getProperty("java.io.tmpdir"));
    }
  }
);
  systemInfoMap.put("SystemInfo.title.memoryInformation",new LinkedHashMap<String,String>(){
    private static final long serialVersionUID=1L;
    Runtime runtime=Runtime.getRuntime();
{
      put("SystemInfo.Memory.totalMemory",convertToMegaBytes(runtime.totalMemory()));
      put("SystemInfo.Memory.freeMemory",convertToMegaBytes(runtime.freeMemory()));
      put("SystemInfo.Memory.maximumHeapSize",convertToMegaBytes(runtime.maxMemory()));
    }
  }
);
  systemInfoMap.put("SystemInfo.title.dataBaseInformation",new LinkedHashMap<String,String>(){
    Properties properties=Context.getRuntimeProperties();
    private static final long serialVersionUID=1L;
{
      put("SystemInfo.Database.name",OpenmrsConstants.DATABASE_NAME);
      put("SystemInfo.Database.connectionURL",properties.getProperty("connection.url"));
      put("SystemInfo.Database.userName",properties.getProperty("connection.username"));
      put("SystemInfo.Database.driver",properties.getProperty("hibernate.connection.driver_class"));
      put("SystemInfo.Database.dialect",properties.getProperty("hibernate.dialect"));
    }
  }
);
  systemInfoMap.put("SystemInfo.title.moduleInformation",new LinkedHashMap<String,String>(){
    private static final long serialVersionUID=1L;
{
      put("SystemInfo.Module.repositoryPath",ModuleUtil.getModuleRepository().getAbsolutePath());
      Collection<Module> loadedModules=ModuleFactory.getLoadedModules();
      for (      Module module : loadedModules) {
        String moduleInfo=module.getVersion() + " " + (module.isStarted() ? "" : Context.getMessageSourceService().getMessage("Module.notStarted"));
        put(module.getName(),moduleInfo);
      }
    }
  }
);
  return systemInfoMap;
}
