{
  AdministrationService as=Context.getAdministrationService();
  String attrString="";
  if (viewType == null) {
    return getAllPersonAttributeTypes();
  }
 else   if (viewType == ATTR_VIEW_TYPE.LISTING) {
    String patientListing=as.getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_PATIENT_LISTING_ATTRIBUTES,"");
    String userListing=as.getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_USER_LISTING_ATTRIBUTES,"");
    if (personType == null || personType == PERSON_TYPE.PERSON)     attrString=patientListing + "," + userListing;
 else     if (personType == PERSON_TYPE.PATIENT)     attrString=patientListing;
 else     if (personType == PERSON_TYPE.USER)     attrString=userListing;
 else     log.fatal("Should not be here.");
  }
 else   if (viewType == ATTR_VIEW_TYPE.VIEWING) {
    String patientViewing=as.getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_PATIENT_VIEWING_ATTRIBUTES,"");
    String userViewing=as.getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_USER_VIEWING_ATTRIBUTES,"");
    if (personType == null || personType == PERSON_TYPE.PERSON)     attrString=patientViewing + "," + userViewing;
 else     if (personType == PERSON_TYPE.PATIENT)     attrString=patientViewing;
 else     if (personType == PERSON_TYPE.USER)     attrString=userViewing;
 else     log.fatal("Should not be here");
  }
 else   if (viewType == ATTR_VIEW_TYPE.HEADER) {
    String patientHeader=as.getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_PATIENT_HEADER_ATTRIBUTES,"");
    String userHeader=as.getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_USER_HEADER_ATTRIBUTES,"");
    if (personType == null || personType == PERSON_TYPE.PERSON)     attrString=patientHeader + "," + userHeader;
 else     if (personType == PERSON_TYPE.PATIENT)     attrString=patientHeader;
 else     if (personType == PERSON_TYPE.USER)     attrString=userHeader;
 else     log.fatal("Should not be here");
  }
 else   log.fatal("Should not be here");
  List<String> attrNames=new Vector<String>();
  if (attrString != null)   for (  String s : attrString.split(",")) {
    if (s != null) {
      s=s.trim();
      if (s.length() > 0)       attrNames.add(s);
    }
  }
  List<PersonAttributeType> attrObjects=new Vector<PersonAttributeType>();
  if (attrNames.size() > 0) {
    for (    String nameOrId : attrNames) {
      if (nameOrId.matches("\\d"))       attrObjects.add(getPersonAttributeType(Integer.valueOf(nameOrId)));
 else       attrObjects.add(getPersonAttributeType(nameOrId));
    }
  }
  return attrObjects;
}
