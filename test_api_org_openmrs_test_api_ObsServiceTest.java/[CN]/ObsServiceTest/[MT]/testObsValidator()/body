{
  executeDataSet(INITIAL_OBS_XML);
  ConceptService conceptService=Context.getConceptService();
  Concept numeric=conceptService.getConcept(1);
  ObsValidator validator=new ObsValidator();
  Obs obs=new Obs();
  obs.setPerson(new Person(1));
  obs.setObsDatetime(new Date());
  Errors errors=new BindException(obs,"obs");
  validator.validate(obs,errors);
  assertTrue("Should have errors: no question",errors.hasErrors());
  obs.setConcept(numeric);
  errors=new BindException(obs,"obs");
  validator.validate(obs,errors);
  assertTrue("Should have errors: no value",errors.hasErrors());
  obs.setValueText("This is text");
  errors=new BindException(obs,"obs");
  validator.validate(obs,errors);
  assertTrue("Should have errors: no numeric value",errors.hasErrors());
  obs.setValueNumeric(350d);
  errors=new BindException(obs,"obs");
  validator.validate(obs,errors);
  assertFalse("Should have no errors.  But has: " + errors,errors.hasErrors());
  Person p=new Person(1);
  Obs parent=new Obs();
  parent.setPerson(p);
  parent.setConcept(numeric);
  parent.setValueNumeric(350d);
  Obs child=new Obs();
  child.setPerson(p);
  parent.addGroupMember(child);
  errors=new BindException(parent,"obs");
  validator.validate(parent,errors);
  assertTrue("Should have errors: child is bad",errors.hasErrors());
  child.setConcept(numeric);
  child.setValueNumeric(125d);
  errors=new BindException(parent,"obs");
  validator.validate(parent,errors);
  assertFalse("Should have no errors",errors.hasErrors());
  child.addGroupMember(parent);
  errors=new BindException(parent,"obs");
  validator.validate(parent,errors);
  assertTrue("Should have errors: cycle in graph",errors.hasErrors());
  child.removeGroupMember(parent);
  Obs grandChild=new Obs();
  grandChild.setPerson(p);
  grandChild.setConcept(numeric);
  grandChild.setValueNumeric(77d);
  child.addGroupMember(grandChild);
  grandChild.addGroupMember(parent);
  errors=new BindException(parent,"obs");
  validator.validate(parent,errors);
  assertTrue("Should have errors: cycle in graph",errors.hasErrors());
}
