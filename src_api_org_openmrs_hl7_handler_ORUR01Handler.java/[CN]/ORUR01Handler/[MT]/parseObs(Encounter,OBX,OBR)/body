{
  if (log.isDebugEnabled())   log.debug("parsing observation: " + obx);
  Varies[] values=obx.getObservationValue();
  if (values == null || values.length < 1)   return null;
  String hl7Datatype=values[0].getName();
  if (log.isDebugEnabled())   log.debug("  datatype = " + hl7Datatype);
  Concept concept=getConcept(obx);
  if (log.isDebugEnabled())   log.debug("  concept = " + concept.getConceptId());
  Date datetime=getDatetime(obx);
  if (log.isDebugEnabled())   log.debug("  timestamp = " + datetime);
  if (datetime == null)   datetime=encounter.getEncounterDatetime();
  Obs obs=new Obs();
  obs.setPerson(encounter.getPatient());
  obs.setConcept(concept);
  obs.setEncounter(encounter);
  obs.setObsDatetime(datetime);
  obs.setLocation(encounter.getLocation());
  obs.setCreator(encounter.getCreator());
  obs.setDateCreated(encounter.getDateCreated());
  Type obx5=values[0].getData();
  if ("NM".equals(hl7Datatype)) {
    String value=((NM)obx5).getValue();
    if (value == null || value.length() == 0) {
      log.warn("Not creating null valued obs for concept " + concept);
      return null;
    }
    obs.setValueNumeric(Double.valueOf(value));
  }
 else   if ("CWE".equals(hl7Datatype)) {
    log.debug("  CWE observation");
    CWE value=(CWE)obx5;
    String valueIdentifier=value.getIdentifier().getValue();
    log.debug("    value id = " + valueIdentifier);
    String valueName=value.getText().getValue();
    log.debug("    value name = " + valueName);
    if (isConceptProposal(valueIdentifier)) {
      if (log.isDebugEnabled())       log.debug("Proposing concept");
      proposeConcept(encounter,concept,valueName);
      return null;
    }
 else {
      log.debug("    not proposal");
      try {
        Concept valueConcept=new Concept();
        valueConcept.setConceptId(new Integer(valueIdentifier));
        obs.setValueCoded(valueConcept);
        if ("99RX".equals(value.getNameOfAlternateCodingSystem().getValue())) {
          Drug valueDrug=new Drug();
          valueDrug.setDrugId(new Integer(value.getAlternateIdentifier().getValue()));
          obs.setValueDrug(valueDrug);
        }
      }
 catch (      NumberFormatException e) {
        throw new HL7Exception("Invalid concept ID '" + valueIdentifier + "' for OBX-5 value '"+ valueName+ "'");
      }
    }
    if (log.isDebugEnabled())     log.debug("  Done with CWE");
  }
 else   if ("CE".equals(hl7Datatype)) {
    CE value=(CE)obx5;
    String valueIdentifier=value.getIdentifier().getValue();
    String valueName=value.getText().getValue();
    if (isConceptProposal(valueIdentifier))     proposeConcept(encounter,concept,valueName);
 else {
      try {
        Concept valueCoded=new Concept();
        valueCoded.setConceptId(new Integer(valueIdentifier));
        obs.setValueCoded(valueCoded);
      }
 catch (      NumberFormatException e) {
        throw new HL7Exception("Invalid concept ID '" + valueIdentifier + "' for OBX-5 value '"+ valueName+ "'");
      }
    }
  }
 else   if ("DT".equals(hl7Datatype)) {
    DT value=(DT)obx5;
    Date valueDate=getDate(value.getYear(),value.getMonth(),value.getDay(),0,0,0);
    if (value == null || valueDate == null) {
      log.warn("Not creating null valued obs for concept " + concept);
      return null;
    }
    obs.setValueDatetime(valueDate);
  }
 else   if ("TS".equals(hl7Datatype)) {
    DTM value=((TS)obx5).getTime();
    Date valueDate=getDate(value.getYear(),value.getMonth(),value.getDay(),value.getHour(),value.getMinute(),value.getSecond());
    if (value == null || valueDate == null) {
      log.warn("Not creating null valued obs for concept " + concept);
      return null;
    }
    obs.setValueDatetime(valueDate);
  }
 else   if ("TM".equals(hl7Datatype)) {
    TM value=(TM)obx5;
    Date valueTime=getDate(0,0,0,value.getHour(),value.getMinute(),value.getSecond());
    if (value == null || valueTime == null) {
      log.warn("Not creating null valued obs for concept " + concept);
      return null;
    }
    obs.setValueDatetime(valueTime);
  }
 else   if ("ST".equals(hl7Datatype)) {
    ST value=(ST)obx5;
    if (value == null || value.getValue() == null || value.getValue().trim().length() == 0) {
      log.warn("Not creating null valued obs for concept " + concept);
      return null;
    }
    obs.setValueText(value.getValue());
  }
 else {
    throw new HL7Exception("Unsupported observation datatype '" + hl7Datatype + "'");
  }
  return obs;
}
