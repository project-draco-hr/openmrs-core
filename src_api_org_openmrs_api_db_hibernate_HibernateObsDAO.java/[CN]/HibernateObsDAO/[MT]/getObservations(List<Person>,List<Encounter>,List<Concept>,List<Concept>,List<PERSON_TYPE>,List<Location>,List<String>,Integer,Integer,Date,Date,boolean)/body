{
  Criteria criteria=sessionFactory.getCurrentSession().createCriteria(Obs.class,"obs");
  if (whom.size() > 0)   criteria.add(Restrictions.in("person",whom));
  if (encounters.size() > 0)   criteria.add(Restrictions.in("encounter",encounters));
  if (questions.size() > 0)   criteria.add(Restrictions.in("concept",questions));
  if (answers.size() > 0)   criteria.add(Restrictions.in("valueCoded",answers));
  getCriteriaPersonModifier(criteria,personTypes);
  if (locations.size() > 0)   criteria.add(Restrictions.in("location",locations));
  if (sortList.size() > 0) {
    for (    String sort : sortList) {
      if (sort != null && !sort.isEmpty())       criteria.addOrder(Order.desc(sort));
    }
  }
  if (mostRecentN > 0)   criteria.setMaxResults(mostRecentN);
  if (obsGroupId != null) {
    criteria.createAlias("obsGroup","og");
    criteria.add(Restrictions.eq("og.obsId",obsGroupId));
  }
  if (fromDate != null)   criteria.add(Restrictions.gt("obsDatetime",fromDate));
  if (toDate != null)   criteria.add(Restrictions.lt("obsDatetime",toDate));
  if (includeVoidedObs == false)   criteria.add(Restrictions.eq("voided",false));
  return criteria.list();
}
