{
  JarFile jarFile=null;
  boolean liquibaseFileExists=false;
  try {
    try {
      jarFile=new JarFile(module.getFile());
    }
 catch (    IOException e) {
      throw new ModuleException("Unable to get jar file",module.getName(),e);
    }
    InputStream inStream=null;
    ZipEntry entry=null;
    try {
      inStream=ModuleUtil.getResourceFromApi(jarFile,module.getModuleId(),module.getVersion(),MODULE_CHANGELOG_FILENAME);
      if (inStream == null) {
        entry=jarFile.getEntry(MODULE_CHANGELOG_FILENAME);
      }
      liquibaseFileExists=(inStream != null) || (entry != null);
    }
  finally {
      IOUtils.closeQuietly(inStream);
    }
  }
  finally {
    try {
      if (jarFile != null) {
        jarFile.close();
      }
    }
 catch (    IOException e) {
      log.warn("Unable to close jarfile: " + jarFile.getName());
    }
  }
  if (liquibaseFileExists) {
    try {
      DatabaseUpdater.executeChangelog(MODULE_CHANGELOG_FILENAME,null,null,null,getModuleClassLoader(module));
    }
 catch (    InputRequiredException ire) {
      throw new ModuleException("Input during database updates is not yet implemented.",module.getName(),ire);
    }
catch (    DatabaseUpdateException e) {
      throw new ModuleException("Unable to update data model using liquibase.xml.",module.getName(),e);
    }
catch (    Exception e) {
      throw new ModuleException("Unable to update data model using liquibase.xml.",module.getName(),e);
    }
  }
}
