{
  HttpSession httpSession=request.getSession();
  Context context=(Context)httpSession.getAttribute(WebConstants.OPENMRS_CONTEXT_HTTPSESSION_ATTR);
  Encounter encounter=(Encounter)obj;
  Map<String,Object> map=new HashMap<String,Object>();
  List<Integer> editedObs=new Vector<Integer>();
  Map<Obs,FormField> obsMap=new HashMap<Obs,FormField>();
  Map<Obs,FormField> obsMapTemp=new HashMap<Obs,FormField>();
  List<FormField> formFields=new Vector<FormField>();
  List<Obs> observations=new Vector<Obs>();
  Form form=encounter.getForm();
  if (context != null && context.isAuthenticated()) {
    EncounterService es=context.getEncounterService();
    FormService fs=context.getFormService();
    map.put("encounterTypes",es.getEncounterTypes());
    map.put("forms",context.getFormService().getForms());
    String reason="";
    if (encounter.getObs() != null && !encounter.getObs().isEmpty()) {
      for (      Obs o : encounter.getObs()) {
        if (o.isVoided()) {
          reason=o.getVoidReason();
          int start=reason.lastIndexOf(" ") + 1;
          int end=reason.length() - 1;
          try {
            reason=reason.substring(start,end);
            editedObs.add(Integer.valueOf(reason));
          }
 catch (          Exception e) {
          }
        }
        FormField ff=fs.getFormField(form,o.getConcept());
        if (ff == null)         ff=new FormField();
        formFields.add(ff);
        obsMap.put(o,ff);
        obsMapTemp.put(o,ff);
      }
      Collections.sort(formFields);
      for (      FormField f : formFields) {
        observations.add(popObsFromMap(obsMapTemp,f));
      }
    }
  }
  log.debug("setting sorted observations in page context (size: " + observations.size() + ")");
  map.put("observations",observations);
  log.debug("setting obsMap in page context (size: " + obsMap.size() + ")");
  map.put("obsMap",obsMap);
  log.debug("setting datePattern in page context");
  map.put("datePattern",dateFormat.toLocalizedPattern().toLowerCase());
  log.debug("setting locale in page context: " + context.getLocale());
  map.put("locale",context.getLocale());
  log.debug("setting edited obs in page context: " + editedObs);
  map.put("editedObs",editedObs);
  return map;
}
