{
  HttpSession httpSession=request.getSession();
  String username=request.getParameter("uname");
  Integer loginAttempts=(Integer)httpSession.getAttribute("forgotPasswordAttempts");
  if (loginAttempts == null)   loginAttempts=0;
  try {
    String secretAnswer=request.getParameter("secretAnswer");
    if (secretAnswer == null) {
      Context.addProxyPrivilege(OpenmrsConstants.PRIV_VIEW_USERS);
      User user=null;
      if (username != null && username.length() > 0)       user=Context.getUserService().getUserByUsername(username);
      httpSession.setAttribute("loginAttempts",loginAttempts++);
      if (user == null || user.getSecretQuestion() == null || user.getSecretQuestion().equals("")) {
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"auth.question.empty");
        request.setAttribute("uname",username);
        return showForm(request,response,errors);
      }
 else {
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"auth.question.fill");
        request.setAttribute("uname",username);
        request.setAttribute("secretQuestion",user.getSecretQuestion());
        return showForm(request,response,errors);
      }
    }
 else     if (secretAnswer != null) {
      Context.addProxyPrivilege(OpenmrsConstants.PRIV_VIEW_USERS);
      User user=Context.getUserService().getUserByUsername(username);
      httpSession.setAttribute("loginAttempts",loginAttempts++);
      if (user == null || user.getSecretQuestion() == null || user.getSecretQuestion().equals("")) {
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"auth.question.empty");
        request.setAttribute("uname",username);
        return showForm(request,response,errors);
      }
 else       if (user.getSecretQuestion() != null && Context.getUserService().isSecretAnswer(user,secretAnswer)) {
        Context.addProxyPrivilege(OpenmrsConstants.PRIV_EDIT_USERS);
        String randomPassword="";
        for (int i=0; i < 8; i++) {
          randomPassword+=String.valueOf((Math.random() * (127 - 48) + 48));
        }
        Context.getUserService().changePassword(user,randomPassword);
        httpSession.setAttribute("resetPassword",randomPassword);
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"auth.password.reset");
        Context.authenticate(username,randomPassword);
        httpSession.setAttribute("loginAttempts",0);
        return new ModelAndView(new RedirectView(request.getContextPath() + "/options.form#Change Login Info"));
      }
 else {
        httpSession.setAttribute(WebConstants.OPENMRS_ERROR_ATTR,"auth.answer.invalid");
        httpSession.setAttribute(WebConstants.OPENMRS_MSG_ATTR,"auth.question.fill");
        request.setAttribute("uname",username);
        request.setAttribute("secretQuestion",user.getSecretQuestion());
        return showForm(request,response,errors);
      }
    }
  }
  finally {
    Context.removeProxyPrivilege(OpenmrsConstants.PRIV_VIEW_USERS);
    Context.removeProxyPrivilege(OpenmrsConstants.PRIV_EDIT_USERS);
  }
  String view=getFormView();
  return new ModelAndView(new RedirectView(view));
}
