{
  executeDataSet(FIND_PATIENTS_XML);
  Collection<Patient> pset=ps.findPatients("Jea",false);
  boolean claudioFound=false;
  boolean jeanClaudeFound1=false;
  boolean jeanClaudeFound2=false;
  boolean jeannetteClaudentFound=false;
  for (  Patient patient : pset) {
    if (patient.getFamilyName().equals("Claudio"))     claudioFound=true;
    if (patient.getGivenName().equals("Jean Claude"))     jeanClaudeFound1=true;
    if (patient.getGivenName().equals("Jean"))     jeanClaudeFound2=true;
    if (patient.getGivenName().equals("Jeannette"))     jeannetteClaudentFound=true;
  }
  assertFalse(claudioFound);
  assertTrue(jeanClaudeFound1);
  assertTrue(jeanClaudeFound2);
  assertTrue(jeannetteClaudentFound);
  pset=ps.findPatients("Jean Claude",false);
  claudioFound=false;
  jeanClaudeFound1=false;
  jeanClaudeFound2=false;
  jeannetteClaudentFound=false;
  for (  Patient patient : pset) {
    if (patient.getFamilyName().equals("Claudio"))     claudioFound=true;
    if (patient.getGivenName().equals("Jean Claude"))     jeanClaudeFound1=true;
    if (patient.getGivenName().equals("Jean"))     jeanClaudeFound2=true;
    if (patient.getGivenName().equals("Jeannette"))     jeannetteClaudentFound=true;
  }
  assertFalse(claudioFound);
  assertTrue(jeanClaudeFound1);
  assertTrue(jeanClaudeFound2);
  assertTrue(jeannetteClaudentFound);
  pset=ps.findPatients("I am voided",true);
  assertEquals(pset.iterator().next().getFamilyName(),"voided");
  pset=ps.findPatients("I am voided",false);
  assertEquals(pset.size(),0);
}
