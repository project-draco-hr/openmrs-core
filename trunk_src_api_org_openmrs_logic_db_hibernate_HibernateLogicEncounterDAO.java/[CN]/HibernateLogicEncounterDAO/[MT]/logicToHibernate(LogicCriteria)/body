{
  Criteria criteria=sessionFactory.getCurrentSession().createCriteria(Encounter.class);
  boolean notOperator=false;
  Date indexDate=Calendar.getInstance().getTime();
  Criterion restrictionCriteria=null;
  while (logicCriteria != null) {
    if (logicCriteria.getOperator() == Operator.BEFORE || logicCriteria.getOperator() == Operator.LT) {
      if (logicCriteria.getRightOperand() instanceof Date)       restrictionCriteria=Restrictions.lt("encounterDatetime",logicCriteria.getRightOperand());
 else       log.error("Invalid operand value for " + logicCriteria.getRightOperand().toString() + " operation");
    }
 else     if (logicCriteria.getOperator() == Operator.LTE) {
      if (logicCriteria.getRightOperand() instanceof Date)       restrictionCriteria=Restrictions.le("encounterDatetime",logicCriteria.getRightOperand());
 else       log.error("Invalid operand value for " + logicCriteria.getRightOperand().toString() + " operation");
    }
 else     if (logicCriteria.getOperator() == Operator.AFTER || logicCriteria.getOperator() == Operator.GT) {
      if (logicCriteria.getRightOperand() instanceof Date)       restrictionCriteria=Restrictions.gt("encounterDatetime",logicCriteria.getRightOperand());
 else       log.error("Invalid operand value for " + logicCriteria.getRightOperand().toString() + " operation");
    }
 else     if (logicCriteria.getOperator() == Operator.GTE) {
      if (logicCriteria.getRightOperand() instanceof Date)       restrictionCriteria=Restrictions.ge("encounterDatetime",logicCriteria.getRightOperand());
 else       log.error("Invalid operand value for " + logicCriteria.getRightOperand().toString() + " operation");
    }
 else     if (logicCriteria.getOperator() == Operator.AND) {
    }
 else     if (logicCriteria.getOperator() == Operator.OR) {
    }
 else     if (logicCriteria.getOperator() == Operator.CONTAINS) {
    }
 else     if (logicCriteria.getOperator() == Operator.NOT) {
      notOperator=!notOperator;
    }
 else     if (logicCriteria.getOperator() == Operator.EQUALS) {
      if (logicCriteria.getRightOperand() instanceof Date)       restrictionCriteria=Restrictions.eq("encounterDatetime",logicCriteria.getRightOperand());
 else       log.error("Invalid operand value for " + logicCriteria.getRightOperand().toString() + " operation");
    }
 else     if (logicCriteria.getOperator() == Operator.LAST) {
      criteria.addOrder(Order.desc("encounterDatetime"));
    }
 else     if (logicCriteria.getOperator() == Operator.FIRST) {
      criteria.addOrder(Order.asc("encounterDatetime"));
    }
 else     if (logicCriteria.getOperator() == Operator.EXISTS) {
    }
 else     if (logicCriteria.getOperator() == Operator.ASOF) {
      if (logicCriteria.getRightOperand() instanceof Date) {
        indexDate=(Date)logicCriteria.getRightOperand();
        criteria.add(Restrictions.le("encounterDatetime",indexDate));
      }
 else       log.error("Invalid operand value for " + logicCriteria.getRightOperand().toString() + " operation");
    }
 else     if (logicCriteria.getOperator() == Operator.WITHIN) {
      if (logicCriteria.getRightOperand() instanceof Duration) {
        Duration duration=(Duration)logicCriteria.getRightOperand();
        Calendar within=Calendar.getInstance();
        within.setTime(indexDate);
        if (duration.getUnits() == Duration.Units.YEARS) {
          within.roll(Calendar.YEAR,-duration.getDuration().intValue());
        }
 else         if (duration.getUnits() == Duration.Units.MONTHS) {
          within.roll(Calendar.MONTH,-duration.getDuration().intValue());
        }
 else         if (duration.getUnits() == Duration.Units.WEEKS) {
          within.roll(Calendar.WEEK_OF_YEAR,-duration.getDuration().intValue());
        }
 else         if (duration.getUnits() == Duration.Units.DAYS) {
          within.roll(Calendar.DAY_OF_YEAR,-duration.getDuration().intValue());
        }
 else         if (duration.getUnits() == Duration.Units.MINUTES) {
          within.roll(Calendar.MINUTE,-duration.getDuration().intValue());
        }
 else         if (duration.getUnits() == Duration.Units.SECONDS) {
          within.roll(Calendar.SECOND,-duration.getDuration().intValue());
        }
        criteria.add(Restrictions.ge("encounterDatetime",within.getTime()));
      }
 else       log.error("Invalid operand value for " + logicCriteria.getRightOperand().toString() + " operation");
    }
    if (notOperator) {
      restrictionCriteria=Restrictions.not(restrictionCriteria);
    }
    if (restrictionCriteria != null) {
      criteria.add(restrictionCriteria);
    }
    logicCriteria=(LogicCriteria)logicCriteria.getLeftOperand();
  }
  return criteria;
}
