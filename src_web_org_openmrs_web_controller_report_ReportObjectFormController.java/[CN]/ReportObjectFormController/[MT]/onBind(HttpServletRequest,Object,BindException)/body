{
  ReportService rs=(ReportService)Context.getReportService();
  AbstractReportObject reportObject=(AbstractReportObject)obj;
  String setType=reportObject.getType();
  String setSubType=reportObject.getSubType();
  if (setType != null && setSubType != null) {
    if (!ReportObjectFactory.getInstance().isSubTypeOfType(setType,setSubType)) {
      ((AbstractReportObject)obj).setSubType(null);
    }
  }
  String currentClassName=this.getCommand(request).getClass().getName();
  String correspondingValidatorName=rs.getReportObjectValidatorByClass(currentClassName);
  Validator v=null;
  if (correspondingValidatorName.length() > 0) {
    try {
      Class cls=Class.forName(correspondingValidatorName);
      Constructor ct=cls.getConstructor();
      v=(Validator)ct.newInstance();
      this.setValidator(v);
    }
 catch (    Throwable t) {
      log.error("Could not instantiate validator \"" + correspondingValidatorName + "\" for ReportObject class "+ currentClassName);
    }
  }
 else {
    try {
      Class cls=Class.forName(currentClassName + "Validator");
      Constructor ct=cls.getConstructor();
      v=(Validator)ct.newInstance();
      this.setValidator(v);
    }
 catch (    Throwable t) {
      log.debug("Could not instantiate default validator \"" + currentClassName + "Validator\" for ReportObject class "+ currentClassName+ "; Using default validator: "+ rs.getDefaultReportObjectValidator());
      Class cls=Class.forName(rs.getDefaultReportObjectValidator());
      Constructor ct=cls.getConstructor();
      v=(Validator)ct.newInstance();
      this.setValidator(v);
    }
  }
}
