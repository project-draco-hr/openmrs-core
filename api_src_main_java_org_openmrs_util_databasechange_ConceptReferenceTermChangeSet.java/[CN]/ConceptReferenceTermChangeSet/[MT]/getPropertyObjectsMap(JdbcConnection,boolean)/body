{
  List<Map<String,Object>> listOfPropertyValueMaps=null;
  Statement stmt=null;
  ResultSet rs=null;
  try {
    stmt=connection.createStatement();
    if (generateTerms) {
      rs=stmt.executeQuery("SELECT cm.concept_map_id, cm.source, cm.source_code, cm.comment, cm.creator, cm.date_created, hl7_code " + "FROM concept_reference_map cm, concept_reference_source crs WHERE cm.source = crs.concept_source_id");
    }
 else {
      rs=stmt.executeQuery("SELECT concept_map_id, concept_id, creator, date_created, uuid FROM concept_reference_map");
    }
    listOfPropertyValueMaps=new LinkedList<Map<String,Object>>();
    while (rs.next()) {
      Map<String,Object> propertyValueMap=new HashMap<String,Object>();
      propertyValueMap.put("termId",rs.getInt("concept_map_id"));
      propertyValueMap.put("sourceId",rs.getInt("source"));
      propertyValueMap.put("code",rs.getString("source_code"));
      propertyValueMap.put("description",rs.getString("comment"));
      propertyValueMap.put("creator",rs.getInt("creator"));
      propertyValueMap.put("dateCreated",rs.getDate("date_created"));
      propertyValueMap.put("uuid",rs.getString("hl7_code").concat("-").concat(rs.getString("source_code")));
      listOfPropertyValueMaps.add(propertyValueMap);
    }
    rs.close();
  }
 catch (  DatabaseException e) {
    throw new CustomChangeException("Error generated",e);
  }
catch (  SQLException e) {
    throw new CustomChangeException("Error generated",e);
  }
 finally {
    if (stmt != null) {
      try {
        stmt.close();
      }
 catch (      SQLException e) {
        log.warn("Failed to close the statement object");
      }
    }
  }
  return listOfPropertyValueMaps;
}
