{
  if (CollectionUtils.isNotEmpty(listOfPropertyValueMaps)) {
    PreparedStatement pStmt=null;
    try {
      connection.setAutoCommit(false);
      pStmt=connection.prepareStatement("INSERT INTO concept_reference_term" + "(concept_reference_term_id, concept_source_id, code, description, creator, date_created, uuid) " + "VALUES(?, ?, ?, ?, ?, ?, ?)");
      for (      Map<String,Object> propertyValueMap : listOfPropertyValueMaps) {
        pStmt.setInt(1,(Integer)propertyValueMap.get("termId"));
        pStmt.setInt(2,(Integer)propertyValueMap.get("sourceId"));
        pStmt.setString(3,propertyValueMap.get("code").toString());
        pStmt.setString(4,(propertyValueMap.get("description") == null) ? null : propertyValueMap.get("description").toString());
        pStmt.setInt(5,(Integer)propertyValueMap.get("creator"));
        pStmt.setDate(6,(Date)propertyValueMap.get("dateCreated"));
        pStmt.setString(7,propertyValueMap.get("uuid").toString());
        pStmt.addBatch();
      }
      try {
        int[] updateCounts=pStmt.executeBatch();
        for (int i=0; i < updateCounts.length; i++) {
          if (updateCounts[i] > -1) {
            log.debug("Successfully executed: updateCount=" + updateCounts[i]);
          }
 else           if (updateCounts[i] == Statement.SUCCESS_NO_INFO) {
            log.debug("Successfully executed; No Success info");
          }
 else           if (updateCounts[i] == Statement.EXECUTE_FAILED) {
            log.warn("Failed to execute update");
          }
        }
        log.debug("Committing updates...");
        connection.commit();
      }
 catch (      BatchUpdateException be) {
        log.warn("Error generated while processsing batch update",be);
        int[] updateCounts=be.getUpdateCounts();
        for (int i=0; i < updateCounts.length; i++) {
          if (updateCounts[i] > -1) {
            log.warn("Executed with exception: updateCount=" + updateCounts[i]);
          }
 else           if (updateCounts[i] == Statement.SUCCESS_NO_INFO) {
            log.warn("Executed with exception; No Success info");
          }
 else           if (updateCounts[i] == Statement.EXECUTE_FAILED) {
            log.warn("Failed to execute update with exception");
          }
        }
        try {
          log.warn("Rolling back batch",be);
          connection.rollback();
        }
 catch (        Exception rbe) {
          log.warn("Error generated while rolling back batch update",be);
        }
      }
    }
 catch (    DatabaseException e) {
      throw new CustomChangeException("Error generated",e);
    }
catch (    SQLException e) {
      throw new CustomChangeException("Error generated",e);
    }
 finally {
      try {
        connection.setAutoCommit(true);
      }
 catch (      DatabaseException e) {
        log.warn("Failed to reset auto commit back to true",e);
      }
      if (pStmt != null) {
        try {
          pStmt.close();
        }
 catch (        SQLException e) {
          log.warn("Failed to close the prepared statement object");
        }
      }
    }
  }
 else   log.error("List of property value maps is null or empty");
}
