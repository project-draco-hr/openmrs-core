{
  if (type == null)   type="";
  if (formFieldName == null)   formFieldName="";
  String output="Cannot handle type [" + type + "]. Please add a module to handle this type.";
  if (formFieldName.length() > 0) {
    FieldGenHandler handler=getHandlerByClassName(type);
    if (handler != null) {
      handler.setFieldGenTag(this);
      output=handler.getOutput(output);
    }
 else {
      if (type.indexOf("java.lang.String") >= 0) {
        startVal=(startVal == null) ? "" : startVal;
        fieldLength=(fieldLength == null) ? DEFAULT_INPUT_TEXT_LENGTH : fieldLength;
        output="<input type=\"text\" name=\"" + formFieldName + "\" value=\""+ startVal+ "\" size=\""+ fieldLength+ "\" />";
      }
 else       if (type.equals("char") || type.indexOf("java.lang.Character") >= 0) {
        startVal=(startVal == null) ? "" : startVal;
        if (startVal.length() > 1)         startVal=startVal.substring(0,1);
        fieldLength=(fieldLength == null) ? DEFAULT_INPUT_CHAR_LENGTH : fieldLength;
        output="<input type=\"text\" name=\"" + formFieldName + "\" value=\""+ startVal+ "\" size=\""+ fieldLength+ "\" maxlength=\"1\" />";
      }
 else       if (type.indexOf("java.util.Date") >= 0) {
        startVal=startVal == null ? "" : startVal;
        fieldLength=(fieldLength == null) ? DEFAULT_INPUT_DATE_LENGTH : fieldLength;
        output="<input id=\"" + formFieldName + "\" type=\"text\" name=\""+ formFieldName+ "\" value=\""+ startVal+ "\" onClick=\"javascript:showCalendar(this);\" /> ";
      }
 else       if (type.equals("int") || type.indexOf("java.lang.Integer") >= 0 || type.equals("long") || type.indexOf("java.lang.Long") >= 0) {
        startVal=(startVal == null) ? "" : startVal;
        fieldLength=(fieldLength == null) ? DEFAULT_INPUT_INT_LENGTH : fieldLength;
        output="<input type=\"text\" name=\"" + formFieldName + "\" value=\""+ startVal+ "\" size=\""+ fieldLength+ "\" />";
      }
 else       if (type.equals("float") || type.indexOf("java.lang.Float") >= 0 || type.equals("double") || type.indexOf("java.lang.Double") >= 0 || type.indexOf("java.lang.Number") >= 0) {
        startVal=(startVal == null) ? "" : startVal;
        fieldLength=(fieldLength == null) ? DEFAULT_INPUT_FLOAT_LENGTH : fieldLength;
        output="<input type=\"text\" name=\"" + formFieldName + "\" value=\""+ startVal+ "\" size=\""+ fieldLength+ "\" />";
      }
 else       if (type.equals("boolean") || type.indexOf("java.lang.Boolean") >= 0) {
        startVal=(startVal == null) ? "" : startVal.toLowerCase();
        if ("false".equals(startVal) || "0".equals(startVal))         startVal="f";
        if ("true".equals(startVal) || "1".equals(startVal))         startVal="t";
        if ("unknown".equals(startVal) || "?".equals(startVal))         startVal="u";
        if (forceInputType == null)         forceInputType="";
        if ("checkbox".equals(forceInputType)) {
          output="<input type=\"checkbox\" name=\"" + formFieldName + "\" value=\"t\""+ ("t".equals(startVal) ? " checked" : "")+ "/> ";
        }
 else {
          if (isNullable == null)           isNullable="";
          if (trueLabel == null)           trueLabel="true";
          if (falseLabel == null)           falseLabel="false";
          if (unknownLabel == null)           unknownLabel="unknown";
          if ("false".equalsIgnoreCase(isNullable) || "f".equalsIgnoreCase(isNullable) || "0".equals(isNullable)) {
            output="<input type=\"radio\" name=\"" + formFieldName + "\" value=\"f\""+ ("f".equals(startVal) ? " checked" : "")+ "/> ";
            output+=falseLabel;
            output+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
            output+="<input type=\"radio\" name=\"" + formFieldName + "\" value=\"t\""+ ("t".equals(startVal) ? " checked" : "")+ "/> ";
            output+=trueLabel;
          }
 else {
            output="<input type=\"radio\" name=\"" + formFieldName + "\" value=\"f\""+ ("f".equals(startVal) ? " checked" : "")+ "/> ";
            output+=falseLabel;
            output+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
            output+="<input type=\"radio\" name=\"" + formFieldName + "\" value=\"t\""+ ("t".equals(startVal) ? " checked" : "")+ "/> ";
            output+=trueLabel;
            output+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
            output+="<input type=\"radio\" name=\"" + formFieldName + "\" value=\"u\""+ ("u".equals(startVal) ? " checked" : "")+ "/> ";
            output+=unknownLabel;
          }
        }
      }
 else       if (type.indexOf("$") >= 0) {
        String className=type;
        try {
          Class cls=Class.forName(className);
          if (cls.isEnum()) {
            Object[] enumConstants=cls.getEnumConstants();
            if (enumConstants.length > 0) {
              if (startVal == null)               startVal="";
              output="<select name=\"" + formFieldName + "\">";
              for (int i=0; i < enumConstants.length; i++) {
                output+="<option value=\"" + enumConstants[i].toString() + "\""+ (startVal.equals(enumConstants[i].toString()) ? " selected" : "")+ ">";
                output+=enumConstants[i].toString();
                output+="</option>";
              }
              output+="</select> ";
            }
          }
        }
 catch (        Throwable t) {
        }
      }
    }
  }
  try {
    pageContext.getOut().write(output);
  }
 catch (  IOException e) {
    log.error(e);
  }
  resetValues();
  return SKIP_BODY;
}
