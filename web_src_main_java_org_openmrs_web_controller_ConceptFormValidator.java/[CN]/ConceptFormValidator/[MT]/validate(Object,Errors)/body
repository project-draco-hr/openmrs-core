{
  ConceptFormBackingObject backingObject=(ConceptFormBackingObject)obj;
  Set<String> localesWithErrors=new HashSet<String>();
  if (backingObject.getConcept() == null) {
    errors.rejectValue("concept","error.general");
  }
 else {
    for (int x=0; x < backingObject.getConceptMappings().size(); x++) {
      ConceptMap map=backingObject.getConceptMappings().get(x);
      if (map.getConceptReferenceTerm() == null)       continue;
      if (map.getConceptReferenceTerm().getConceptReferenceTermId() == null) {
        if (!StringUtils.hasText(map.getConceptReferenceTerm().getCode()))         errors.rejectValue("conceptMappings[" + x + "]","ConceptReferenceTerm.error.codeRequired");
 else         if (map.getConceptMapType() == null)         errors.rejectValue("conceptMappings[" + x + "]","ConceptReferenceTerm.error.mapTypeRequired");
 else         if (map.getConceptReferenceTerm().getConceptSource() == null)         errors.rejectValue("conceptMappings[" + x + "]","ConceptReferenceTerm.error.sourceRequired");
      }
    }
    boolean foundAtLeastOneFullySpecifiedName=false;
    for (    Locale locale : backingObject.getLocales()) {
      for (int x=0; x < backingObject.getSynonymsByLocale().get(locale).size(); x++) {
        ConceptName synonym=backingObject.getSynonymsByLocale().get(locale).get(x);
        if (synonym.getName() != null && synonym.getName().length() == 0) {
          errors.rejectValue("synonymsByLocale[" + locale + "]["+ x+ "].name","Concept.synonyms.textRequired");
          localesWithErrors.add(locale.getDisplayName());
        }
      }
      for (int x=0; x < backingObject.getIndexTermsByLocale().get(locale).size(); x++) {
        ConceptName indexTerm=backingObject.getIndexTermsByLocale().get(locale).get(x);
        if (indexTerm.getName() != null && indexTerm.getName().length() == 0) {
          errors.rejectValue("indexTermsByLocale[" + locale + "]["+ x+ "].name","Concept.indexTerms.textRequired");
          localesWithErrors.add(locale.getDisplayName());
        }
      }
      if (StringUtils.hasText(backingObject.getNamesByLocale().get(locale).getName())) {
        foundAtLeastOneFullySpecifiedName=true;
      }
 else       if (backingObject.getNamesByLocale().get(locale).getConceptNameId() != null) {
        errors.rejectValue("namesByLocale[" + locale + "].name","Concept.fullySpecified.textRequired");
        localesWithErrors.add(locale.getDisplayName());
      }
    }
    if (!foundAtLeastOneFullySpecifiedName)     errors.reject("Concept.name.atLeastOneRequired");
  }
  if (errors.hasErrors() && localesWithErrors.size() > 0) {
    StringBuilder sb=new StringBuilder(Context.getMessageSourceService().getMessage("Concept.localesWithErrors"));
    boolean isFirst=true;
    for (    String localeName : localesWithErrors) {
      if (isFirst) {
        sb.append(localeName);
        isFirst=false;
      }
 else       sb.append(", ").append(localeName);
    }
    errors.rejectValue("concept",sb.toString());
  }
}
