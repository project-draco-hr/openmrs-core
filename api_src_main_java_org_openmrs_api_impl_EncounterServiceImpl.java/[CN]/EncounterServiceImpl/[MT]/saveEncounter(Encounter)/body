{
  if (!canEditEncounter(encounter,null)) {
    throw new APIException(String.format("Privilege %s required to edit encounters of this type",encounter.getEncounterType().getEditPrivilege()));
  }
  if (encounter.getEncounterId() == null) {
    EncounterVisitHandler encounterVisitHandler=Context.getEncounterService().getActiveEncounterVisitHandler();
    if (encounterVisitHandler != null) {
      encounterVisitHandler.beforeCreateEncounter(encounter);
      if (encounter.getVisit() != null && encounter.getVisit().getVisitId() == null) {
        Context.getVisitService().saveVisit(encounter.getVisit());
      }
    }
  }
  boolean isNewEncounter=false;
  Date newDate=encounter.getEncounterDatetime();
  Date originalDate=null;
  Location newLocation=encounter.getLocation();
  Location originalLocation=null;
  if (encounter.getEncounterId() == null) {
    isNewEncounter=true;
    Context.requirePrivilege(PrivilegeConstants.ADD_ENCOUNTERS);
  }
 else {
    Context.requirePrivilege(PrivilegeConstants.EDIT_ENCOUNTERS);
  }
  Patient p=encounter.getPatient();
  if (!isNewEncounter) {
    originalDate=dao.getSavedEncounterDatetime(encounter);
    if (encounter.getLocation() != null) {
      originalLocation=dao.getSavedEncounterLocation(encounter);
    }
    for (    Obs obs : encounter.getAllObs(true)) {
      if (OpenmrsUtil.compare(originalDate,newDate) != 0) {
        if (OpenmrsUtil.compare(obs.getObsDatetime(),originalDate) == 0) {
          obs.setObsDatetime(newDate);
        }
      }
      if (!OpenmrsUtil.nullSafeEquals(newLocation,originalLocation)) {
        if (obs.getLocation().equals(originalLocation)) {
          obs.setLocation(newLocation);
        }
      }
      if (!obs.getPerson().getPersonId().equals(p.getPatientId())) {
        obs.setPerson(p);
      }
    }
  }
  for (  Order o : encounter.getOrders()) {
    if (!p.equals(o.getPatient())) {
      o.setPatient(p);
    }
  }
  dao.saveEncounter(encounter);
  for (  Order o : encounter.getOrders()) {
    if (o.getOrderId() == null) {
      Context.getOrderService().saveOrder(o,null);
    }
  }
  return encounter;
}
