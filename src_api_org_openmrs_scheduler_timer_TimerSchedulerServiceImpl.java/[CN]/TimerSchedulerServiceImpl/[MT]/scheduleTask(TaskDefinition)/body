{
  Task clientTask=null;
  if (taskDefinition != null) {
    TimerSchedulerTask schedulerTask=scheduledTasks.get(taskDefinition.getId());
    if (schedulerTask != null) {
      log.info("Shutting down the existing instance of this task to avoid conflicts!!");
      schedulerTask.shutdown();
    }
    try {
      clientTask=TaskFactory.getInstance().createInstance(taskDefinition);
      if (clientTask != null) {
        schedulerTask=new TimerSchedulerTask(clientTask);
        taskDefinition.setTaskInstance(clientTask);
        long repeatInterval=taskDefinition.getRepeatInterval() * SchedulerConstants.SCHEDULER_MILLIS_PER_SECOND;
        if (taskDefinition.getStartTime() != null) {
          Date nextTime=SchedulerUtil.getNextExecution(taskDefinition);
          log.info("Starting task ... the task will execute for the first time at " + nextTime);
          getTimer(taskDefinition).scheduleAtFixedRate(schedulerTask,nextTime,repeatInterval);
        }
 else         if (repeatInterval > 0) {
          log.info("Delaying start time by " + SchedulerConstants.SCHEDULER_DEFAULT_DELAY + " seconds");
          getTimer(taskDefinition).scheduleAtFixedRate(schedulerTask,SchedulerConstants.SCHEDULER_DEFAULT_DELAY,repeatInterval);
        }
 else {
          log.info("Starting one-shot task");
          getTimer(taskDefinition).schedule(schedulerTask,new Date());
        }
        log.debug("Registering timer for task " + taskDefinition.getId());
        scheduledTasks.put(taskDefinition.getId(),schedulerTask);
        taskDefinition.setStarted(true);
        saveTask(taskDefinition);
      }
    }
 catch (    Exception e) {
      log.error("Failed to schedule task " + taskDefinition.getName(),e);
      throw new SchedulerException("Failed to schedule task",e);
    }
  }
  return clientTask;
}
