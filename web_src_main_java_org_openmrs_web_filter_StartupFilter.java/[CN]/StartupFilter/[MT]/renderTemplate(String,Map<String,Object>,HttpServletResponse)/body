{
  if (referenceMap == null) {
    return;
  }
  Object locale=referenceMap.get(FilterUtil.LOCALE_ATTRIBUTE);
  ToolContext toolContext=getToolContext(locale != null ? locale.toString() : Context.getLocale().toString());
  VelocityContext velocityContext=new VelocityContext(toolContext);
  for (  Map.Entry<String,Object> entry : referenceMap.entrySet()) {
    velocityContext.put(entry.getKey(),entry.getValue());
  }
  Object model=getModel();
  for (  Field field : model.getClass().getDeclaredFields()) {
    try {
      velocityContext.put(field.getName(),field.get(model));
    }
 catch (    IllegalArgumentException e) {
      log.error("Error generated while getting field value: " + field.getName(),e);
    }
catch (    IllegalAccessException e) {
      log.error("Error generated while getting field value: " + field.getName(),e);
    }
  }
  String fullTemplatePath=getTemplatePrefix() + templateName;
  InputStream templateInputStream=getClass().getClassLoader().getResourceAsStream(fullTemplatePath);
  if (templateInputStream == null) {
    throw new IOException("Unable to find " + fullTemplatePath);
  }
  velocityContext.put("errors",errors);
  velocityContext.put("msgs",msgs);
  httpResponse.setContentType("text/html");
  try {
    velocityEngine.evaluate(velocityContext,httpResponse.getWriter(),this.getClass().getName(),new InputStreamReader(templateInputStream));
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to process template: " + fullTemplatePath,e);
  }
}
