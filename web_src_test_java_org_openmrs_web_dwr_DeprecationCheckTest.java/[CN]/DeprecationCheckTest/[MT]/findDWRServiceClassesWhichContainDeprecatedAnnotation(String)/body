{
  ResourcePatternResolver resourcePatternResolver=new PathMatchingResourcePatternResolver();
  MetadataReaderFactory metadataReaderFactory=new CachingMetadataReaderFactory(resourcePatternResolver);
  List<Class> candidateClasses=new ArrayList<Class>();
  String packageSearchPath=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + resolveBasePackage(basePackage) + "/"+ "**/*.class";
  Resource[] resources=resourcePatternResolver.getResources(packageSearchPath);
  for (  Resource resource : resources) {
    if (resource.isReadable()) {
      MetadataReader metadataReader=metadataReaderFactory.getMetadataReader(resource);
      if (doesClassContainDeprecatedAnnotation(metadataReader)) {
        candidateClasses.add(Class.forName(metadataReader.getClassMetadata().getClassName()));
      }
    }
  }
  return candidateClasses;
}
