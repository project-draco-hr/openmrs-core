{
  Locale locale=Context.getLocale();
  StringBuffer ret=new StringBuffer();
  if (question == null) {
    if (getValue() != null)     ret.append("Patients with " + timeModifier + " obs with value "+ ((Concept)value).getName().getName());
 else     ret.append("question and value are both null");
  }
 else {
    ret.append("Patients with ");
    ret.append(timeModifier + " ");
    ConceptName questionName=question.getName(locale,false);
    if (questionName != null)     ret.append(questionName);
 else {
      question=Context.getConceptService().getConcept(question.getConceptId());
      if (question != null) {
        questionName=question.getName(locale,false);
        ret.append(questionName);
      }
 else {
        ret.append("CONCEPT");
      }
    }
    if (value != null && modifier != null) {
      ret.append(" " + modifier.getSqlRepresentation() + " ");
      if (value instanceof Concept)       ret.append(((Concept)value).getName(locale));
 else       ret.append(value);
    }
  }
  if (withinLastDays != null || withinLastMonths != null) {
    ret.append(" within last");
    if (withinLastMonths != null)     ret.append(" " + withinLastMonths + " months");
    if (withinLastDays != null)     ret.append(" " + withinLastDays + " days");
  }
  if (untilDaysAgo != null || untilMonthsAgo != null) {
    ret.append(" until");
    if (untilMonthsAgo != null)     ret.append(" " + untilMonthsAgo + " months");
    if (untilDaysAgo != null)     ret.append(" " + untilDaysAgo + " months");
    ret.append(" ago");
  }
  DateFormat df=null;
  if (sinceDate != null || untilDate != null)   df=DateFormat.getDateInstance(DateFormat.SHORT,Context.getLocale());
  if (sinceDate != null)   ret.append(" since " + df.format(sinceDate));
  if (untilDate != null)   ret.append(" until " + df.format(untilDate));
  return ret.toString();
}
