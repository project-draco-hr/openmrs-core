{
  String methodName=method.getName();
  if (methodName.startsWith("save") || methodName.startsWith("create") || methodName.startsWith("update")) {
    Object mainArgument=args[0];
    if (mainArgument == null)     return;
    Class<?> argClass=mainArgument.getClass();
    String other=null;
    if (args.length > 1) {
      other=(String)args[1];
    }
    if (OpenmrsObject.class.isAssignableFrom(argClass)) {
      recursivelyHandle(SaveHandler.class,(OpenmrsObject)mainArgument,other);
    }
 else     if (isOpenmrsObjectCollection(argClass,mainArgument)) {
      Collection<OpenmrsObject> openmrsObjects=(Collection<OpenmrsObject>)mainArgument;
      for (      OpenmrsObject object : openmrsObjects) {
        recursivelyHandle(SaveHandler.class,object,other);
      }
    }
  }
 else   if (methodName.startsWith("void")) {
    Voidable voidable=(Voidable)args[0];
    String voidReason=(String)args[1];
    recursivelyHandle(VoidHandler.class,voidable,voidReason);
  }
 else   if (methodName.startsWith("unvoid")) {
    Voidable voidable=(Voidable)args[0];
    Date originalDateVoided=voidable.getDateVoided();
    recursivelyHandle(UnvoidHandler.class,voidable,Context.getAuthenticatedUser(),originalDateVoided,null,null);
  }
 else   if (methodName.startsWith("retire")) {
    Retireable retirable=(Retireable)args[0];
    String retireReason=(String)args[1];
    recursivelyHandle(RetireHandler.class,retirable,retireReason);
  }
 else   if (methodName.startsWith("unretire")) {
    Retireable retirable=(Retireable)args[0];
    Date originalDateRetired=retirable.getDateRetired();
    recursivelyHandle(UnretireHandler.class,retirable,Context.getAuthenticatedUser(),originalDateRetired,null,null);
  }
}
