{
  Order originalDCOrder=orderService.getOrder(22);
  assertEquals(Order.Action.DISCONTINUE,originalDCOrder.getAction());
  List<Order> originalPatientOrders=orderService.getAllOrdersByPatient(originalDCOrder.getPatient());
  final Order previousOrder=originalDCOrder.getPreviousOrder();
  assertNotNull(previousOrder);
  final Date newStartDate=originalDCOrder.getEncounter().getEncounterDatetime();
  Order newDcOrder=originalDCOrder.cloneForRevision();
  newDcOrder.setEncounter(originalDCOrder.getEncounter());
  newDcOrder.setOrderer(originalDCOrder.getOrderer());
  newDcOrder.setStartDate(newStartDate);
  orderService.voidOrder(originalDCOrder,"To be replace with a new one");
  assertNull(originalDCOrder.getDateStopped());
  orderService.saveOrder(newDcOrder,null);
  Context.flushSession();
  assertTrue(originalDCOrder.isVoided());
  List<Order> newPatientOrders=orderService.getAllOrdersByPatient(originalDCOrder.getPatient());
  assertEquals(originalPatientOrders.size() + 1,newPatientOrders.size());
  Collection<Order> newOrders=CollectionUtils.disjunction(originalPatientOrders,newPatientOrders);
  assertEquals(1,newOrders.size());
  assertEquals(newOrders.iterator().next().getPreviousOrder(),previousOrder);
}
