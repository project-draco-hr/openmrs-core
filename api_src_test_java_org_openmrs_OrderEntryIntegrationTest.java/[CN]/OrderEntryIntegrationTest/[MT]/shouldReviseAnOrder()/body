{
  Order originalOrder=orderService.getOrder(111);
  assertTrue(OrderUtilTest.isActiveOrder(originalOrder,null));
  final Patient patient=originalOrder.getPatient();
  List<Order> originalActiveOrders=orderService.getActiveOrders(patient,null,null,null);
  final int originalOrderCount=originalActiveOrders.size();
  assertTrue(originalActiveOrders.contains(originalOrder));
  Order revisedOrder=originalOrder.cloneForRevision();
  revisedOrder.setInstructions("Take after a meal");
  revisedOrder.setDateActivated(new Date());
  revisedOrder.setOrderer(providerService.getProvider(1));
  revisedOrder.setEncounter(encounterService.getEncounter(3));
  orderService.saveOrder(revisedOrder,null);
  Thread.sleep(1);
  List<Order> activeOrders=orderService.getActiveOrders(patient,null,null,null);
  assertEquals(originalOrderCount,activeOrders.size());
  assertFalse(OrderUtilTest.isActiveOrder(originalOrder,null));
}
