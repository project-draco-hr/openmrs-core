{
  ReportData report=(ReportData)request.getSession().getAttribute(WebConstants.OPENMRS_REPORT_DATA);
  if (Context.isAuthenticated() && report != null && "rerender".equals(request.getParameter("action"))) {
    ReportSchema schema=report.getReportSchema();
    ReportService reportService=(ReportService)Context.getService(ReportService.class);
    String renderClass=request.getParameter("renderingMode");
    String renderArg="";
    if (renderClass.indexOf("!") > 0) {
      int ind=renderClass.indexOf("!");
      renderArg=renderClass.substring(ind + 1);
      renderClass=renderClass.substring(0,ind);
    }
    ReportRenderer renderer=reportService.getReportRenderer(renderClass);
    log.info("Re-rendering report with " + renderer.getClass() + " and argument "+ renderArg);
    if (renderer instanceof WebReportRenderer) {
      WebReportRenderer webRenderer=(WebReportRenderer)renderer;
      if (webRenderer.getLinkUrl(schema) != null) {
        request.getSession().setAttribute(WebConstants.OPENMRS_REPORT_DATA,report);
        request.getSession().setAttribute(WebConstants.OPENMRS_REPORT_ARGUMENT,renderArg);
        String url=webRenderer.getLinkUrl(schema);
        if (!url.startsWith("/"))         url="/" + url;
        url=request.getContextPath() + url;
        return new ModelAndView(new RedirectView(url));
      }
    }
    String filename=renderer.getFilename(schema,renderArg).replace(" ","_");
    response.setContentType(renderer.getRenderedContentType(schema,renderArg));
    response.setHeader("Content-Disposition","attachment; filename=" + filename);
    response.setHeader("Pragma","no-cache");
    renderer.render(report,renderArg,response.getOutputStream());
    return null;
  }
 else {
    String view=getFormView();
    return new ModelAndView(new RedirectView(view));
  }
}
