{
  if (null != obs && null != obs.getConcept() && obs.getConcept().isComplex() && null != obs.getComplexData().getData()) {
    ComplexObsHandler handler=getHandler(obs);
    if (null != handler) {
      handler.saveObs(obs);
    }
 else {
      throw new APIException("Unknown handler for " + obs.getConcept());
    }
  }
  if (obs.getObsId() == null) {
    Context.requirePrivilege(PrivilegeConstants.ADD_OBS);
    return dao.saveObs(obs);
  }
 else {
    Context.requirePrivilege(PrivilegeConstants.EDIT_OBS);
    if (changeMessage == null)     throw new APIException("ChangeMessage is required when updating an obs in the database");
    Obs newObs=Obs.newInstance(obs);
    newObs.setVoided(false);
    newObs.setVoidReason(null);
    newObs.setDateVoided(null);
    newObs.setVoidedBy(null);
    newObs.setCreator(null);
    newObs.setDateCreated(null);
    newObs.setPreviousVersion(obs);
    RequiredDataAdvice.recursivelyHandle(SaveHandler.class,newObs,changeMessage);
    dao.saveObs(newObs);
    try {
      Context.addProxyPrivilege(PrivilegeConstants.DELETE_OBS);
      Context.evictFromSession(obs);
      obs=Context.getObsService().getObs(obs.getObsId());
      Context.getObsService().voidObs(obs,changeMessage);
    }
  finally {
      Context.removeProxyPrivilege(PrivilegeConstants.DELETE_OBS);
    }
    return newObs;
  }
}
