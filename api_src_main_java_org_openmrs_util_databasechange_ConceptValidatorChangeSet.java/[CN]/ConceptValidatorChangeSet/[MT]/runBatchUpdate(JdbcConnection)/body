{
  PreparedStatement pStmt=null;
  try {
    connection.setAutoCommit(false);
    pStmt=connection.prepareStatement("UPDATE concept_name SET locale = ?, concept_name_type = ?, locale_preferred = ?, voided = ?, date_voided = ?, void_reason = ?, voided_by = ? WHERE concept_name_id = ?");
    Integer userId=DatabaseUpdater.getAuthenticatedUserId();
    if (userId == null || userId < 1) {
      userId=getInt(connection,"SELECT min(user_id) FROM users");
      if (userId < 1)       userId=null;
    }
    for (    ConceptName conceptName : updatedConceptNames) {
      pStmt.setString(1,conceptName.getLocale().toString());
      pStmt.setString(2,(conceptName.getConceptNameType() != null) ? conceptName.getConceptNameType().toString() : null);
      pStmt.setBoolean(3,conceptName.isLocalePreferred());
      pStmt.setBoolean(4,conceptName.isVoided());
      pStmt.setDate(5,conceptName.isVoided() ? new Date(System.currentTimeMillis()) : null);
      pStmt.setString(6,conceptName.getVoidReason());
      pStmt.setString(7,(conceptName.isVoided() && userId != null) ? userId.toString() : null);
      pStmt.setInt(8,conceptName.getConceptNameId());
      pStmt.addBatch();
    }
    try {
      int[] updateCounts=pStmt.executeBatch();
      for (int i=0; i < updateCounts.length; i++) {
        if (updateCounts[i] > -1) {
          log.debug("Successfully executed: updateCount=" + updateCounts[i]);
        }
 else         if (updateCounts[i] == Statement.SUCCESS_NO_INFO) {
          log.debug("Successfully executed; No Success info");
        }
 else         if (updateCounts[i] == Statement.EXECUTE_FAILED) {
          log.warn("Failed to execute update");
        }
      }
      log.debug("Committing updates...");
      connection.commit();
    }
 catch (    BatchUpdateException be) {
      log.warn("Error generated while processsing batch update",be);
      int[] updateCounts=be.getUpdateCounts();
      for (int i=0; i < updateCounts.length; i++) {
        if (updateCounts[i] > -1) {
          log.warn("Executed with exception: updateCount=" + updateCounts[i]);
        }
 else         if (updateCounts[i] == Statement.SUCCESS_NO_INFO) {
          log.warn("Executed with exception; No Success info");
        }
 else         if (updateCounts[i] == Statement.EXECUTE_FAILED) {
          log.warn("Failed to execute update with exception");
        }
      }
      try {
        log.warn("Rolling back batch",be);
        connection.rollback();
      }
 catch (      Exception rbe) {
        log.warn("Error generated while rolling back batch update",be);
      }
    }
  }
 catch (  SQLException e) {
    log.warn("Error generated",e);
  }
catch (  DatabaseException e) {
    log.warn("Error generated",e);
  }
 finally {
    try {
      connection.setAutoCommit(true);
    }
 catch (    DatabaseException e) {
      log.warn("Failed to reset auto commit back to true",e);
    }
    if (pStmt != null) {
      try {
        pStmt.close();
      }
 catch (      SQLException e) {
        log.warn("Failed to close the prepared statement object");
      }
    }
  }
}
