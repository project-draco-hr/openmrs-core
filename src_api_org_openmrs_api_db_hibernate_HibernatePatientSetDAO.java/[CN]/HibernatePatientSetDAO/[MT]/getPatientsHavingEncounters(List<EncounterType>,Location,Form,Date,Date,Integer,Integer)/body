{
  List<Integer> encTypeIds=null;
  if (encounterTypeList != null) {
    encTypeIds=new ArrayList<Integer>();
    for (    EncounterType t : encounterTypeList)     encTypeIds.add(t.getEncounterTypeId());
  }
  Integer locationId=location == null ? null : location.getLocationId();
  Integer formId=form == null ? null : form.getFormId();
  List<String> whereClauses=new ArrayList<String>();
  whereClauses.add("e.voided = false");
  if (encTypeIds != null)   whereClauses.add("e.encounter_type in (:encTypeIds)");
  if (locationId != null)   whereClauses.add("e.location_id = :locationId");
  if (formId != null)   whereClauses.add("e.form_id = :formId");
  if (fromDate != null)   whereClauses.add("e.encounter_datetime >= :fromDate");
  if (toDate != null)   whereClauses.add("e.encounter_datetime <= :toDate");
  List<String> havingClauses=new ArrayList<String>();
  if (minCount != null)   havingClauses.add("count(*) >= :minCount");
  if (maxCount != null)   havingClauses.add("count(*) >= :maxCount");
  StringBuilder sb=new StringBuilder();
  sb.append(" select e.patient_id from encounter e ");
  for (ListIterator<String> i=whereClauses.listIterator(); i.hasNext(); ) {
    sb.append(i.nextIndex() == 0 ? " where " : " and ");
    sb.append(i.next());
  }
  sb.append(" group by e.patient_id ");
  for (ListIterator<String> i=havingClauses.listIterator(); i.hasNext(); ) {
    sb.append(i.nextIndex() == 0 ? " having " : " and ");
    sb.append(i.next());
  }
  log.debug("query: " + sb);
  Query query=sessionFactory.getCurrentSession().createSQLQuery(sb.toString());
  if (encTypeIds != null)   query.setParameterList("encTypeIds",encTypeIds);
  if (locationId != null)   query.setInteger("locationId",locationId);
  if (formId != null)   query.setInteger("formId",formId);
  if (fromDate != null)   query.setDate("fromDate",fromDate);
  if (toDate != null)   query.setDate("toDate",toDate);
  if (minCount != null)   query.setInteger("minCount",minCount);
  if (maxCount != null)   query.setInteger("maxCount",maxCount);
  return new Cohort(query.list());
}
