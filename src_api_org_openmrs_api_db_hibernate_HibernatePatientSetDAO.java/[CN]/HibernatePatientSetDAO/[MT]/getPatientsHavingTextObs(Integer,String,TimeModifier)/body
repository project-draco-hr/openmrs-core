{
  Query query;
  StringBuffer sb=new StringBuffer();
  sb.append("select o.person_id from obs o ");
  if (timeModifier != null) {
    if (timeModifier.equals(TimeModifier.LAST)) {
      log.debug("timeModifier is NOT NULL, and appears to be LAST, so we'll try to add a subquery");
      sb.append("inner join (select person_id, max(obs_datetime) as obs_datetime from obs where ");
      sb.append("concept_id = :concept_id group by person_id) sub on o.person_id = sub.person_id and o.obs_datetime = sub.obs_datetime ");
    }
 else {
      log.debug("timeModifier is NOT NULL, and appears to not be LAST, so we won't do anything");
    }
  }
 else {
    log.debug("timeModifier is NULL, skipping to full query");
  }
  sb.append("where o.concept_id = :concept_id ");
  boolean useVal=false;
  if (value != null) {
    sb.append("and o.value_text = :value ");
    useVal=true;
  }
 else {
    sb.append("and o.value_text is not null ");
  }
  sb.append("group by o.person_id ");
  query=sessionFactory.getCurrentSession().createSQLQuery(sb.toString());
  query.setCacheMode(CacheMode.IGNORE);
  query.setInteger("concept_id",conceptId);
  if (useVal) {
    query.setString("value",value);
  }
  PatientSet ret=new PatientSet();
  List patientIds=query.list();
  ret.setPatientIds(new ArrayList<Integer>(patientIds));
  return ret;
}
