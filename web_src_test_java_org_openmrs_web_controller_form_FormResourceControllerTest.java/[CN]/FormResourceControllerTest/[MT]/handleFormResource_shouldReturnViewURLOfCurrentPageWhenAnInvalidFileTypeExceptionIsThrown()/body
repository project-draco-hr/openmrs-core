{
  final String EXPECTED_FORM_ID="1";
  final String EXPECTED_DATATYPE_CLASS_NAME=(new LongFreeTextDatatype()).getClass().getName();
  final String EXPECTED_HANDLER_CLASS_NAME=(new LongFreeTextFileUploadHandler()).getClass().getName();
  final String EXPECTED_URL="redirect:addFormResource.form?formId=" + EXPECTED_FORM_ID + "&datatype="+ EXPECTED_DATATYPE_CLASS_NAME+ "&handler="+ EXPECTED_HANDLER_CLASS_NAME;
  Errors errors=mock(Errors.class);
  when(errors.hasErrors()).thenReturn(false);
  Form form=mock(Form.class);
  when(form.getFormId()).thenReturn(1);
  when(form.getId()).thenReturn(1);
  FormResource resource=mock(FormResource.class);
  when(resource.getForm()).thenReturn(form);
  when(resource.getDatatypeClassname()).thenReturn(EXPECTED_DATATYPE_CLASS_NAME);
  when(resource.getPreferredHandlerClassname()).thenReturn(EXPECTED_HANDLER_CLASS_NAME);
  when(resource.isDirty()).thenThrow(new ConstraintViolationException("for testing",null,"for testing"));
  MockMultipartHttpServletRequest request=new MockMultipartHttpServletRequest();
  request.setMethod("POST");
  request.setParameter("formId","1");
  request.setParameter("datatype",EXPECTED_DATATYPE_CLASS_NAME);
  request.setParameter("handler",EXPECTED_HANDLER_CLASS_NAME);
  FormResourceController controller=new FormResourceController();
  String actualUrl=controller.handleAddFormResource(resource,errors,request);
  assertEquals(EXPECTED_URL,actualUrl);
}
