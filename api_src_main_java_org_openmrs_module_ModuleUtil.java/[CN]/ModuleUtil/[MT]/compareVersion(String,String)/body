{
  try {
    if (version == null || value == null)     return 0;
    List<String> versions=new Vector<String>();
    List<String> values=new Vector<String>();
    Collections.addAll(versions,version.split("\\."));
    Collections.addAll(values,value.split("\\."));
    while (versions.size() < values.size()) {
      versions.add("0");
    }
    while (values.size() < versions.size()) {
      values.add("0");
    }
    for (int x=0; x < versions.size(); x++) {
      String verNum=versions.get(x).trim();
      String valNum=values.get(x).trim();
      Integer ver=NumberUtils.toInt(verNum,0);
      Integer val=NumberUtils.toInt(valNum,0);
      int ret=ver.compareTo(val);
      if (ret != 0)       return ret;
    }
  }
 catch (  NumberFormatException e) {
    log.error("Error while converting a version/value to an integer: " + version + "/"+ value,e);
  }
  return 0;
}
