{
  User user=new User();
  user.setUsername(STRING_WITH_LENGTH_GREATER_THAN_50);
  user.setSystemId(STRING_WITH_LENGTH_GREATER_THAN_50);
  user.setSecretQuestion(STRING_WITH_LENGTH_GREATER_THAN_50);
  user.setRetireReason(STRING_WITH_LENGTH_GREATER_THAN_50);
  user.setPerson(new Person(999));
  user.getPerson().addName(new PersonName(STRING_WITH_LENGTH_GREATER_THAN_50,STRING_WITH_LENGTH_GREATER_THAN_50,STRING_WITH_LENGTH_GREATER_THAN_50));
  user.getPerson().setGender(STRING_WITH_LENGTH_GREATER_THAN_50);
  Errors errors=new BindException(user,"user");
  validator.validate(user,errors);
  Assert.assertTrue(errors.hasFieldErrors("username"));
  Assert.assertTrue(errors.hasFieldErrors("systemId"));
  Assert.assertTrue(errors.hasFieldErrors("secretQuestion"));
  Assert.assertTrue(errors.hasFieldErrors("retireReason"));
  Assert.assertTrue(errors.hasFieldErrors("person.names[0].givenName"));
  Assert.assertTrue(errors.hasFieldErrors("person.names[0].middleName"));
  Assert.assertTrue(errors.hasFieldErrors("person.names[0].familyName"));
  Assert.assertTrue(errors.hasFieldErrors("person.gender"));
}
