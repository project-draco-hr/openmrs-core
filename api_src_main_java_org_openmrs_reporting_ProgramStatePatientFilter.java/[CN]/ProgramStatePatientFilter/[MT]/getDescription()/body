{
  StringBuilder ret=new StringBuilder();
  ret.append("Patients in program ");
  if (getProgram() != null) {
    if (getProgram().getConcept() == null) {
      ret.append(" <CONCEPT> ");
    }
 else {
      ret.append(getConceptName(program.getConcept()) + " ");
    }
  }
  if (stateList != null && stateList.size() > 0) {
    Map<ProgramWorkflow,Set<ProgramWorkflowState>> map=new HashMap<ProgramWorkflow,Set<ProgramWorkflowState>>();
    for (    ProgramWorkflowState state : stateList) {
      ProgramWorkflow workflow=state.getProgramWorkflow();
      OpenmrsUtil.addToSetMap(map,workflow,state);
    }
    boolean first=true;
    for (    Map.Entry<ProgramWorkflow,Set<ProgramWorkflowState>> e : map.entrySet()) {
      ret.append(first ? "with " : "or ");
      first=false;
      try {
        ret.append(e.getKey().getConcept().getName().getName());
      }
 catch (      NullPointerException ex) {
        ret.append("CONCEPT?");
      }
      if (e.getValue().size() == 1) {
        ret.append(" of " + e.getValue().iterator().next().getConcept().getName().getName());
      }
 else {
        ret.append(" in [ ");
        for (Iterator<ProgramWorkflowState> i=e.getValue().iterator(); i.hasNext(); ) {
          ret.append(i.next().getConcept().getName().getName());
          if (i.hasNext()) {
            ret.append(" , ");
          }
        }
        ret.append(" ]");
      }
    }
  }
  if (withinLastMonths != null || withinLastDays != null) {
    ret.append("within the last ");
    if (withinLastMonths != null) {
      ret.append(withinLastMonths + " month(s) ");
    }
    if (withinLastDays != null) {
      ret.append(withinLastDays + " day(s) ");
    }
  }
  if (sinceDate != null) {
    ret.append("on or after " + Context.getDateFormat().format(sinceDate) + " ");
  }
  if (untilDate != null) {
    ret.append("on or before " + Context.getDateFormat().format(untilDate) + " ");
  }
  return ret.toString();
}
