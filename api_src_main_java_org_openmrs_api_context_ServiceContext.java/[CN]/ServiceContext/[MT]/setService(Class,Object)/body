{
  log.debug("Setting service: " + cls);
  if (cls != null && classInstance != null) {
    try {
      Advised cachedService=(Advised)services.get(cls);
      boolean noExistingService=cachedService == null;
      boolean replacingService=cachedService != null && cachedService != classInstance;
      boolean serviceAdvised=classInstance instanceof Advised;
      if (noExistingService || replacingService) {
        Advised advisedService;
        if (!serviceAdvised) {
          Class[] interfaces={cls};
          ProxyFactory factory=new ProxyFactory(interfaces);
          factory.setTarget(classInstance);
          advisedService=(Advised)factory.getProxy(OpenmrsClassLoader.getInstance());
        }
 else {
          advisedService=(Advised)classInstance;
        }
        if (replacingService) {
          moveAddedAOP(cachedService,advisedService);
        }
        services.put(cls,advisedService);
      }
      log.debug("Service: " + cls + " set successfully");
    }
 catch (    Exception e) {
      throw new APIException("Unable to create proxy factory for: " + classInstance.getClass().getName(),e);
    }
  }
}
