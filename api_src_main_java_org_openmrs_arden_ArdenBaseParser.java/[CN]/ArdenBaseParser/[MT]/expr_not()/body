{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST expr_not_AST=null;
  try {
switch (LA(1)) {
case COUNT:
case THE:
case MINIMUM:
case MIN:
case MAXIMUM:
case MAX:
case LAST:
case FIRST:
case EARLIEST:
case LATEST:
case EXIST:
case EXISTS:
case AVG:
case AVERAGE:
case SUM:
case MEDIAN:
case TRUE:
case FALSE:
case OF:
case TIME:
case ANY:
case NULL:
case INTLIT:
case ID:
case STRING_LITERAL:
case LPAREN:
case TERM_LITERAL:
{
        expr_comparison();
        astFactory.addASTChild(currentAST,returnAST);
        expr_not_AST=(AST)currentAST.root;
        break;
      }
case NOT:
{
      AST tmp613_AST=null;
      tmp613_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp613_AST);
      match(NOT);
      expr_comparison();
      astFactory.addASTChild(currentAST,returnAST);
      expr_not_AST=(AST)currentAST.root;
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_58);
}
 else {
throw ex;
}
}
returnAST=expr_not_AST;
}
