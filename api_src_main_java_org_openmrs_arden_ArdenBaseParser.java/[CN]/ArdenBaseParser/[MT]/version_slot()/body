{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST version_slot_AST=null;
  try {
    AST tmp201_AST=null;
    tmp201_AST=astFactory.create(LT(1));
    astFactory.makeASTRoot(currentAST,tmp201_AST);
    match(VERSION);
    AST tmp202_AST=null;
    tmp202_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp202_AST);
    match(COLON);
    AST tmp203_AST=null;
    tmp203_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp203_AST);
    match(INTLIT);
    AST tmp204_AST=null;
    tmp204_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp204_AST);
    match(DOT);
    AST tmp205_AST=null;
    tmp205_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp205_AST);
    match(INTLIT);
    AST tmp206_AST=null;
    tmp206_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp206_AST);
    match(ENDBLOCK);
    version_slot_AST=(AST)currentAST.root;
  }
 catch (  RecognitionException ex) {
    if (inputState.guessing == 0) {
      reportError(ex);
      recover(ex,_tokenSet_7);
    }
 else {
      throw ex;
    }
  }
  returnAST=version_slot_AST;
}
