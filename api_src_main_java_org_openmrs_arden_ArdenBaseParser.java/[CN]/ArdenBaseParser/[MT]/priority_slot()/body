{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST priority_slot_AST=null;
  try {
    if ((LA(1) == LITERAL_evoke)) {
      priority_slot_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == LITERAL_evoke)) {
      priority_slot_AST=(AST)currentAST.root;
    }
 else     if ((LA(1) == PRIORITY)) {
      AST tmp250_AST=null;
      tmp250_AST=astFactory.create(LT(1));
      astFactory.makeASTRoot(currentAST,tmp250_AST);
      match(PRIORITY);
      AST tmp251_AST=null;
      tmp251_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp251_AST);
      match(COLON);
      AST tmp252_AST=null;
      tmp252_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp252_AST);
      match(INTLIT);
      AST tmp253_AST=null;
      tmp253_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp253_AST);
      match(ENDBLOCK);
      priority_slot_AST=(AST)currentAST.root;
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
 catch (  MismatchedTokenException mv) {
    if (inputState.guessing == 0) {
      reportError(mv);
      System.err.println("***Rule Priority NOT SET***");
      consumeUntil(ENDBLOCK);
      consume();
    }
 else {
      throw mv;
    }
  }
  returnAST=priority_slot_AST;
}
