{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST duration_op_AST=null;
  try {
switch (LA(1)) {
case YEAR:
{
        AST tmp532_AST=null;
        tmp532_AST=astFactory.create(LT(1));
        astFactory.addASTChild(currentAST,tmp532_AST);
        match(YEAR);
        duration_op_AST=(AST)currentAST.root;
        break;
      }
case YEARS:
{
      AST tmp533_AST=null;
      tmp533_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp533_AST);
      match(YEARS);
      duration_op_AST=(AST)currentAST.root;
      break;
    }
case MONTH:
{
    AST tmp534_AST=null;
    tmp534_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp534_AST);
    match(MONTH);
    duration_op_AST=(AST)currentAST.root;
    break;
  }
case MONTHS:
{
  AST tmp535_AST=null;
  tmp535_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp535_AST);
  match(MONTHS);
  duration_op_AST=(AST)currentAST.root;
  break;
}
case WEEK:
{
AST tmp536_AST=null;
tmp536_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp536_AST);
match(WEEK);
duration_op_AST=(AST)currentAST.root;
break;
}
case WEEKS:
{
AST tmp537_AST=null;
tmp537_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp537_AST);
match(WEEKS);
duration_op_AST=(AST)currentAST.root;
break;
}
case DAY:
{
AST tmp538_AST=null;
tmp538_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp538_AST);
match(DAY);
duration_op_AST=(AST)currentAST.root;
break;
}
case DAYS:
{
AST tmp539_AST=null;
tmp539_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp539_AST);
match(DAYS);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_hour:
{
AST tmp540_AST=null;
tmp540_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp540_AST);
match(LITERAL_hour);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_hours:
{
AST tmp541_AST=null;
tmp541_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp541_AST);
match(LITERAL_hours);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_minute:
{
AST tmp542_AST=null;
tmp542_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp542_AST);
match(LITERAL_minute);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_minutes:
{
AST tmp543_AST=null;
tmp543_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp543_AST);
match(LITERAL_minutes);
duration_op_AST=(AST)currentAST.root;
break;
}
case SECOND:
{
AST tmp544_AST=null;
tmp544_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp544_AST);
match(SECOND);
duration_op_AST=(AST)currentAST.root;
break;
}
case LITERAL_seconds:
{
AST tmp545_AST=null;
tmp545_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp545_AST);
match(LITERAL_seconds);
duration_op_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_47);
}
 else {
throw ex;
}
}
returnAST=duration_op_AST;
}
